[{"file_name":"application_rules.yaml","comment":"# Elasticsearch ports","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L28,L29","required_engine_version":"2","name":"elasticsearch_cluster_port","macro":"elasticsearch_cluster_port","condition":"fd.sport=9300","tags":null,"enabled":"true","used_by":["macro:elasticsearch_port:24b36efee34f4eba3a28fe0454e654a0"],"type":"macro","hash":"fbe1a15ba4954653891d8a4ab2219451"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L30,L31","required_engine_version":"2","name":"elasticsearch_api_port","macro":"elasticsearch_api_port","condition":"fd.sport=9200","tags":null,"enabled":"true","used_by":["macro:elasticsearch_port:24b36efee34f4eba3a28fe0454e654a0"],"type":"macro","hash":"b82f0aa2a880b68caa54510e8df34873"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L32,L33","required_engine_version":"2","name":"elasticsearch_port","macro":"elasticsearch_port","condition":"elasticsearch_cluster_port or elasticsearch_api_port","tags":null,"enabled":"true","dependencies":["macro:elasticsearch_cluster_port:fbe1a15ba4954653891d8a4ab2219451","macro:elasticsearch_api_port:b82f0aa2a880b68caa54510e8df34873"],"type":"macro","hash":"24b36efee34f4eba3a28fe0454e654a0"},{"file_name":"application_rules.yaml","comment":"# ActiveMQ ports","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L49,L50","required_engine_version":"2","name":"activemq_cluster_port","macro":"activemq_cluster_port","condition":"fd.sport=61616","tags":null,"enabled":"true","used_by":["macro:activemq_port:a4160c9df6171fe4016fb3d1d1f2e203"],"type":"macro","hash":"d13221aaf95af43d5ad54d673bceb41a"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L51,L52","required_engine_version":"2","name":"activemq_web_port","macro":"activemq_web_port","condition":"fd.sport=8161","tags":null,"enabled":"true","used_by":["macro:activemq_port:a4160c9df6171fe4016fb3d1d1f2e203"],"type":"macro","hash":"6bbfdf8b00f268f84f41f8dba4290ae0"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L53,L54","required_engine_version":"2","name":"activemq_port","macro":"activemq_port","condition":"activemq_web_port or activemq_cluster_port","tags":null,"enabled":"true","dependencies":["macro:activemq_cluster_port:d13221aaf95af43d5ad54d673bceb41a","macro:activemq_web_port:6bbfdf8b00f268f84f41f8dba4290ae0"],"type":"macro","hash":"a4160c9df6171fe4016fb3d1d1f2e203"},{"file_name":"application_rules.yaml","comment":"# Cassandra ports\n# https://docs.datastax.com/en/cassandra/2.0/cassandra/security/secureFireWall_r.html","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L71,L72","required_engine_version":"2","name":"cassandra_thrift_client_port","macro":"cassandra_thrift_client_port","condition":"fd.sport=9160","tags":null,"enabled":"true","used_by":["macro:cassandra_port:e5dcbda8ade48eb7c193bae8c433fe64"],"type":"macro","hash":"e75c7d001166fddcd2f8802fa6b0c670"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L73,L74","required_engine_version":"2","name":"cassandra_cql_port","macro":"cassandra_cql_port","condition":"fd.sport=9042","tags":null,"enabled":"true","used_by":["macro:cassandra_port:e5dcbda8ade48eb7c193bae8c433fe64"],"type":"macro","hash":"51dea811b3094d2fae7fd6bcfdd2a160"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L75,L76","required_engine_version":"2","name":"cassandra_cluster_port","macro":"cassandra_cluster_port","condition":"fd.sport=7000","tags":null,"enabled":"true","used_by":["macro:cassandra_port:e5dcbda8ade48eb7c193bae8c433fe64"],"type":"macro","hash":"f940e8932fe970490fadacf2b68ce4b3"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L77,L78","required_engine_version":"2","name":"cassandra_ssl_cluster_port","macro":"cassandra_ssl_cluster_port","condition":"fd.sport=7001","tags":null,"enabled":"true","used_by":["macro:cassandra_port:e5dcbda8ade48eb7c193bae8c433fe64"],"type":"macro","hash":"588c49448e2a430bb62a935d9d70b717"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L79,L80","required_engine_version":"2","name":"cassandra_jmx_port","macro":"cassandra_jmx_port","condition":"fd.sport=7199","tags":null,"enabled":"true","used_by":["macro:cassandra_port:e5dcbda8ade48eb7c193bae8c433fe64"],"type":"macro","hash":"5e1e4a22dd1d40a685c3b9f7336d43de"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L81,L82","required_engine_version":"2","name":"cassandra_port","macro":"cassandra_port","condition":"cassandra_thrift_client_port or cassandra_cql_port or cassandra_cluster_port or cassandra_ssl_cluster_port or cassandra_jmx_port\n","tags":null,"enabled":"true","dependencies":["macro:cassandra_thrift_client_port:e75c7d001166fddcd2f8802fa6b0c670","macro:cassandra_cql_port:51dea811b3094d2fae7fd6bcfdd2a160","macro:cassandra_cluster_port:f940e8932fe970490fadacf2b68ce4b3","macro:cassandra_ssl_cluster_port:588c49448e2a430bb62a935d9d70b717","macro:cassandra_jmx_port:5e1e4a22dd1d40a685c3b9f7336d43de"],"type":"macro","hash":"e5dcbda8ade48eb7c193bae8c433fe64"},{"file_name":"application_rules.yaml","comment":"# Couchdb ports\n# https://github.com/davisp/couchdb/blob/master/etc/couchdb/local.ini","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L101,L102","required_engine_version":"2","name":"couchdb_httpd_port","macro":"couchdb_httpd_port","condition":"fd.sport=5984","tags":null,"enabled":"true","type":"macro","hash":"e6355771fa823a70f188cee60f852b56"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L103,L104","required_engine_version":"2","name":"couchdb_httpd_ssl_port","macro":"couchdb_httpd_ssl_port","condition":"fd.sport=6984","tags":null,"enabled":"true","type":"macro","hash":"6aba5702a465bfc8ecd73c3c08849297"},{"file_name":"application_rules.yaml","comment":"# Fluentd ports","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L109,L110","required_engine_version":"2","name":"fluentd_http_port","macro":"fluentd_http_port","condition":"fd.sport=9880","tags":null,"enabled":"true","type":"macro","hash":"e57b25f15e384c297b6c6c7d594f2936"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L111,L112","required_engine_version":"2","name":"fluentd_forward_port","macro":"fluentd_forward_port","condition":"fd.sport=24224","tags":null,"enabled":"true","type":"macro","hash":"9c180dd73cb5a8fa13fa078dd8ac44c5"},{"file_name":"application_rules.yaml","comment":"# Zookeeper","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L135,L136","required_engine_version":"2","name":"zookeeper_port","macro":"zookeeper_port","condition":"fd.sport = 2181","tags":null,"enabled":"true","type":"macro","hash":"9126d11b1693499b7ef89147da02d015"},{"file_name":"application_rules.yaml","comment":"# MongoDB ports","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L160,L161","required_engine_version":"2","name":"mongodb_server_port","macro":"mongodb_server_port","condition":"fd.sport = 27017","tags":null,"enabled":"true","type":"macro","hash":"42084afe7c4974841b1dab5b4bb5a54a"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L162,L163","required_engine_version":"2","name":"mongodb_shardserver_port","macro":"mongodb_shardserver_port","condition":"fd.sport = 27018","tags":null,"enabled":"true","type":"macro","hash":"525f9935f17868396ca86c8b19cfab00"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L164,L165","required_engine_version":"2","name":"mongodb_configserver_port","macro":"mongodb_configserver_port","condition":"fd.sport = 27019","tags":null,"enabled":"true","type":"macro","hash":"e9127efc1eb3af45c8b02bcd47a77a7c"},{"file_name":"application_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/application_rules.yaml#L166,L167","required_engine_version":"2","name":"mongodb_webserver_port","macro":"mongodb_webserver_port","condition":"fd.sport = 28017","tags":null,"enabled":"true","type":"macro","hash":"e513f7afa89a4572230539f29731a512"},{"file_name":"okta_rules.yaml","comment":"# Example Rule on login in to OKTA. Disabled by default since it might be noisy\n#- rule: User logged in to OKTA\n#  desc: Detect the user login in to OKTA\n#  condition: okta.evt.type = \"user.session.start\"\n#  output: \"A user has logged in toOKTA (user=%okta.actor.name, ip=%okta.client.ip)\"\n#       priority: NOTICE\n#  source: okta\n#  tags: [okta]\n","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L33,L40","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User Changing password in to OKTA","rule":"User Changing password in to OKTA","condition":"okta.evt.type = \"user.account.update_password\"","desc":"Detect a user change password in OKTA","output":"A user has changed password from OKTA (user=%okta.actor.name, ip=%okta.client.ip)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","type":"rule","hash":"1f26f720872048f01eb9d1dbd1adc6e1"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L42,L49","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"Creating a new OKTA user account","rule":"Creating a new OKTA user account","condition":"okta.evt.type = \"user.lifecycle.create\"","desc":"Detect a new OKTA user account created in the OKTA environment","output":"A new OKTA user account created (user=%okta.actor.name, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","type":"rule","hash":"e337de73cbcc4ad0d19cf1b55bd7a1c7"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L51,L58","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User accessing app via single sign on OKTA","rule":"User accessing app via single sign on OKTA","condition":"okta.evt.type = \"user.authentication.sso\"","desc":"Detect a user accessing an app via OKTA","output":"A user has accessed an app using OKTA (user=%okta.actor.name, app=%okta.app)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","type":"rule","hash":"ae03fa5e74f6b2796025188b5abcd7d6"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L60,L66","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User has been locked out in OKTA","rule":"User has been locked out in OKTA","condition":"okta.evt.type = \"user.account.lock\"","desc":"Detect a user who has been locked out in OKTA","output":"A user has been locked out in OKTA (user=%okta.actor.name, ip=%okta.client.ip)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"611434b712cc87e1206c87a1a3bfd6de"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L68,L75","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User has been moved from suspended status in OKTA.","rule":"User has been moved from suspended status in OKTA.","condition":"okta.evt.type = \"user.lifecycle.unsuspend\"","desc":"Detect a user who has been moved from suspended status in OKTA","output":"A user has been moved from suspended status in OKTA (user=%okta.actor.name, ip=%okta.client.ip, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","type":"rule","hash":"a30d212382a7bda42ef3bd74f13ad690"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L77,L84","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User has been activated in OKTA","rule":"User has been activated in OKTA","condition":"okta.evt.type = \"user.lifecycle.activate\"","desc":"Detect a user who has been activated in OKTA","output":"A user has been activated in OKTA (user=%okta.actor.name, ip=%okta.client.ip, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","type":"rule","hash":"55db6f73f81c9c1b892d8fcf7e432c6b"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L86,L93","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User has been deactivated in OKTA","rule":"User has been deactivated in OKTA","condition":"okta.evt.type = \"user.lifecycle.deactivate\"","desc":"Detect a user who has been deactivated in OKTA","output":"A user has been deactivated in OKTA (user=%okta.actor.name, ip=%okta.client.ip, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","type":"rule","hash":"6ed3dd37b7c89909f62a07866135b1f1"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L95,L101","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User has been suspended in OKTA","rule":"User has been suspended in OKTA","condition":"okta.evt.type = \"user.lifecycle.suspended\"","desc":"Detect a user who has been suspended in OKTA","output":"A user has been suspended in OKTA (user=%okta.actor.name, ip=%okta.client.ip, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"a65fa61b3816cadf52781653c8769a85"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L103,L109","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"Admin permission has been assigned to a user in OKTA","rule":"Admin permission has been assigned to a user in OKTA","condition":"okta.evt.type = \"user.account.privilege.grant\"","desc":"Detect an admin permission assigned to a user in OKTA","output":"A user has been locked out in OKTA (user=%okta.actor.name, ip=%okta.client.ip, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"1484b4602bcc5ceac8c952b641b4bb31"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L111,L117","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"Creating a new OKTA API token","rule":"Creating a new OKTA API token","condition":"okta.evt.type = \"system.api_token.create\"","desc":"Detect a new OKTA API token created in the OKTA environment","output":"A new OKTA API token has been created in OKTA (user=%okta.actor.name, ip=%okta.client.ip)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"ef0e1e31d7438e7c5901c18dd7b99163"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L119,L125","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User accessing OKTA admin section","rule":"User accessing OKTA admin section","condition":"okta.evt.type = \"user.session.access_admin_app\"","desc":"Detect a user accessing OKTA admin section of your OKTA instance","output":"A user accessed the OKTA admin section of your OKTA instance (user=%okta.actor.name, ip=%okta.client.ip)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"0117ba68520026c20d9e3f4038c4bf18"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L127,L134","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"Adding user in OKTA group","rule":"Adding user in OKTA group","condition":"okta.evt.type = \"group.user_membership.add\"","desc":"Detect a new user added to an OKTA group","output":"A user has been added in an OKTA group (user=%okta.actor.name, target group=%okta.target.group.name, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","type":"rule","hash":"9f8f49fc01e52e0319960cef2ea214ba"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L136,L142","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"removing MFA factor from user in OKTA","rule":"removing MFA factor from user in OKTA","condition":"okta.evt.type = \"user.mfa.factor.deactivate\"","desc":"Detect a removing MFA activity on a user in OKTA","output":"A user has removed MFA factor in the OKTA account (user=%okta.actor.name, ip=%okta.client.ip)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"5d62adf3a2277e10cd1094cf4b4587d1"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L144,L150","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"removing all MFA factor from user in OKTA","rule":"removing all MFA factor from user in OKTA","condition":"okta.evt.type = \"user.mfa.factor.reset_all\"","desc":"Detect a removing MFA activity on a user in OKTA","output":"A user has removed all MFA factor in the OKTA account (user=%okta.actor.name, ip=%okta.client.ip)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"b9e44c32660dde57785eaaa1dd72483d"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L152,L158","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User password reset by OKTA admin","rule":"User password reset by OKTA admin","condition":"okta.evt.type = \"user.account.reset_password\"","desc":"Detect a password reset on a user done by OKTA Admin Account","output":"A user password has been reset by an OKTA Admin account (user=%okta.actor.name, ip=%okta.client.ip, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"9820dce802b4e9bc38e7cf3e7ba4f095"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L160,L166","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User hitting the rate limit on requests in OKTA","rule":"User hitting the rate limit on requests in OKTA","condition":"okta.evt.type = \"system.org.rate_limit.violation\"","desc":"Detect a user who hit the rate limit on requests in OKTA","output":"A user has hitted the rate limit on requests in OKTA (user=%okta.actor.name, ip=%okta.client.ip)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"b7f535056f38c1f5b84b07535c9ab399"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L168,L175","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"Adding user to application membership in OKTA","rule":"Adding user to application membership in OKTA","condition":"okta.evt.type = \"application.user_membership.add\"","desc":"Detect a user who has been added o application membership in OKTA","output":"A user has been added to an application membership in OKTA (user=%okta.actor.name, ip=%okta.client.ip, target user=%okta.target.user.name, app=%okta.app)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","type":"rule","hash":"c724ced6786accde7f8d47dad45546b6"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L177,L183","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"User initiating impersonation session in OKTA","rule":"User initiating impersonation session in OKTA","condition":"okta.evt.type = \"user.session.impersonation.initiate\"","desc":"Detect a user who initiate an impersonation session in OKTA","output":"A user has initiated an impersonation session in OKTA (user=%okta.actor.name, ip=%okta.client.ip, target user=%okta.target.user.name)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"2355060fe93a32428e493f84ee03a625"},{"file_name":"okta_rules.yaml","comment":"# This list allows easily whitelisting countries that are\n# expected to see OKTA logins from.","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L187,L188","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"allowed_countries_list","list":"allowed_countries_list","tags":null,"enabled":"true","used_by":["macro:user_known_countries:6b1d99cf9a8792845d7683631d99ea50"],"type":"list","hash":"aee609c0f3b9fd1a19917657f00dc2a5"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L190,L191","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"user_known_countries","macro":"user_known_countries","condition":"(okta.client.geo.country in (allowed_countries_list))","tags":null,"enabled":"true","dependencies":["list:allowed_countries_list:aee609c0f3b9fd1a19917657f00dc2a5"],"used_by":["rule:Detecting unknown logins using geolocation:d2ac16b31fa023aadc8f8cc93f1b027d"],"type":"macro","hash":"6b1d99cf9a8792845d7683631d99ea50"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L193,L200","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"Detecting unknown logins using geolocation","rule":"Detecting unknown logins using geolocation","condition":"okta.evt.type = \"user.session.start\" and not user_known_countries","desc":"Detect a logins event based on user geolocation","output":"A user logged in OKTA from a suspicious country (user=%okta.actor.name, ip=%okta.client.ip, country=%okta.client.geo.country)","priority":"NOTICE","source":"okta","tags":["okta"],"enabled":"false","dependencies":["list:user_known_countries:6b1d99cf9a8792845d7683631d99ea50"],"type":"rule","hash":"d2ac16b31fa023aadc8f8cc93f1b027d"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L202,L208","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"Too many failed MFA in last 5min","rule":"Too many failed MFA in last 5min","condition":"okta.mfa.failure.countlast[300]\u003e=3","desc":"An user failed MFA too many times in the last 5min","output":"A user has failed MFA too many times in last 5min (user='%okta.actor.name' last_reason='%okta.reason' countLast300=%okta.mfa.failure.countlast[300])","priority":"WARNING","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"4dae9ef8e6a0f66619807d0ccdeb90d5"},{"file_name":"okta_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/okta/rules/okta_rules.yaml#L210,L216","required_engine_version":"11","required_plugin_versions":[{"name":"okta","version":"0.5.0"}],"name":"Too many denied MFA Pushes in last 5min","rule":"Too many denied MFA Pushes in last 5min","condition":"okta.mfa.deny.countlast[300]\u003e=3","desc":"A user denied too many MFA Pushes in the last 5min","output":"A user has denied too many MFA pushes in last 5min (user='%okta.actor.name' reason='%okta.reason' countLast300=%okta.mfa.deny.countlast[300])","priority":"WARNING","source":"okta","tags":["okta"],"enabled":"true","type":"rule","hash":"fb66439f559a64be63f9dc6a77e34324"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L24,L29","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Webhook Connected","rule":"Webhook Connected","condition":"github.type=ping","desc":"Detect a webhook link","output":"A github webhook was linked to this Falco instance (ID=%github.webhook.id type=%github.webhook.type owner=%github.owner user=%github.user)","priority":"DEBUG","source":"github","tags":null,"enabled":"true","type":"rule","hash":"357e5a18f6e0e9f5b63a7eb33758a6fd"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L31,L36","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Webhook Disconnected","rule":"Webhook Disconnected","condition":"github.type=meta and github.action=deleted","desc":"Detect a webhook unlink","output":"A github webhook was disconnected from Falco instance (ID=%github.webhook.id type=%github.webhook.type org=%github.org user=%github.user)","priority":"DEBUG","source":"github","tags":null,"enabled":"true","type":"rule","hash":"28cd6785f6cd0252798f295ee779b26a"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L38,L43","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Private Repository Becoming Public","rule":"Private Repository Becoming Public","condition":"github.type=repository and github.action=publicized","desc":"Detect changing the visibility of a repository to public","output":"A repository went from private to public (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user)","priority":"CRITICAL","source":"github","tags":null,"enabled":"true","type":"rule","hash":"8aa6f25f45d965e0b564d4bf5d86a6bc"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L45,L50","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Public Repository Becoming Private","rule":"Public Repository Becoming Private","condition":"github.type=repository and github.action=privatized","desc":"Detect changing the visibility of a repository to private","output":"A repository went from public to private (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user)","priority":"WARNING","source":"github","tags":null,"enabled":"true","type":"rule","hash":"f867a1336aff9f0a32c26cfe43f30eb3"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L52,L57","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Create Public Repository","rule":"Create Public Repository","condition":"github.type=repository and github.action=created and github.repo.public=true","desc":"Detect the creation of a new public repository","output":"A new public repository was created (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user)","priority":"WARNING","source":"github","tags":null,"enabled":"true","type":"rule","hash":"32ddc95900e5967d0f39cc17864316a5"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L59,L64","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Delete Public Repository","rule":"Delete Public Repository","condition":"github.type=repository and github.action=deleted and github.repo.public=true","desc":"Detect the deletion of a public repository","output":"A public repository was deleted (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user)","priority":"WARNING","source":"github","tags":null,"enabled":"true","type":"rule","hash":"4014f3c0c6eb1ad3fd6e41c6d5d85c73"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L66,L71","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Create Repository","rule":"Create Repository","condition":"github.type=repository and github.action=created","desc":"Detect the creation of a new repository","output":"A new repository was created (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user)","priority":"INFO","source":"github","tags":null,"enabled":"true","type":"rule","hash":"6d75e32e66e631a0fdbc8a9cad5c1d4e"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L73,L78","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Delete Repository","rule":"Delete Repository","condition":"github.type=repository and github.action=deleted","desc":"Detect the deletion of a repository","output":"A repository was deleted (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user)","priority":"INFO","source":"github","tags":null,"enabled":"true","type":"rule","hash":"a463888f1331a2014c52bbd78d339fe7"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L80,L85","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Create Deploy Key","rule":"Create Deploy Key","condition":"github.type=deploy_key and github.action=created","desc":"Detect the creation of a new deploy key for a repository","output":"A new deploy key was created (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user)","priority":"INFO","source":"github","tags":null,"enabled":"true","type":"rule","hash":"b04ae0bfbf266ee7273510e13106ffea"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L87,L92","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Delete Deploy Key","rule":"Delete Deploy Key","condition":"github.type=deploy_key and github.action=deleted","desc":"Detect the deletion a repository's deploy key","output":"A deploy key was deleted (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user)","priority":"INFO","source":"github","tags":null,"enabled":"true","type":"rule","hash":"4e8579b97922549c848a0a40c21d7301"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L94,L99","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Add Collaborator to Repository","rule":"Add Collaborator to Repository","condition":"github.type=member and github.action=added","desc":"Detect the addition of a collaborator to a repository","output":"A collaborator was added to a repository (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user collaborator=%github.collaborator.name role=%github.collaborator.role)","priority":"INFO","source":"github","tags":null,"enabled":"true","type":"rule","hash":"b38e980243a329b83261b86d79cc3123"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L101,L106","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Remove Collaborator from Repository","rule":"Remove Collaborator from Repository","condition":"github.type=member and github.action=removed","desc":"Detect the removal of a collaborator from a repository","output":"A collaborator was removed from a repository (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user collaborator=%github.collaborator.name)","priority":"INFO","source":"github","tags":null,"enabled":"true","dependencies":["list:remove:0f6969d7052da9261e31ddb6e88c136e"],"type":"rule","hash":"943741810bf68993058924c0fa203405"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L108,L113","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Secret pushed into a public repository","rule":"Secret pushed into a public repository","condition":"github.type=push and github.diff.has_secrets = true and github.repo.public=true","desc":"A secret (AWS keys, github token...) was committed into a public repository","output":"One or more secrets were pushed into a private repository (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user secret_types=%github.diff.committed_secrets.desc file=%github.diff.committed_secrets.files line=%github.diff.committed_secrets.lines url=%github.diff.committed_secrets.links)","priority":"CRITICAL","source":"github","tags":null,"enabled":"true","type":"rule","hash":"3bad91dae16b3f8aa4af903be51a9628"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L115,L120","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Secret pushed into a private repository","rule":"Secret pushed into a private repository","condition":"github.type=push and github.diff.has_secrets = true and github.repo.public=false","desc":"A secret (AWS keys, github token...) was committed into a private repository","output":"One or more secrets were pushed into a private repository (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user secret_types=%github.diff.committed_secrets.desc file=%github.diff.committed_secrets.files line=%github.diff.committed_secrets.lines url=%github.diff.committed_secrets.links)","priority":"CRITICAL","source":"github","tags":null,"enabled":"true","type":"rule","hash":"9f3a0ed9b12a97dd544ba951f73be993"},{"file_name":"github.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/github/rules/github.yaml#L122,L127","required_engine_version":"10","required_plugin_versions":[{"name":"github","version":"0.5.0"}],"name":"Github action with miners","rule":"Github action with miners","condition":"github.type=workflow_run and github.action=requested and github.workflow.has_miners=true","desc":"a github action containing crypto miners was executed","output":"a github action containing crypto miners was executed (repository=%github.repo repo_owner=%github.owner org=%github.org user=%github.user file=%github.workflow.filename)","priority":"CRITICAL","source":"github","tags":null,"enabled":"true","type":"rule","hash":"12138870e633cb5410005bd73af34618"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"# Note that this rule is disabled by default. It's useful only to\n# verify that the cloudtrail plugin is sending events properly.  The\n# very broad condition evt.num \u003e 0 only works because the rule source\n# is limited to aws_cloudtrail. This ensures that the only events that\n# are matched against the rule are from the cloudtrail plugin (or\n# a different plugin with the same source).","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L33,L43","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"All Cloudtrail Events","rule":"All Cloudtrail Events","condition":"evt.num \u003e 0","desc":"Match all cloudtrail events.","output":"Some Cloudtrail Event (evtnum=%evt.num info=%evt.plugininfo ts=%evt.time.iso8601 id=%ct.id error=%ct.error)","priority":"DEBUG","source":"aws_cloudtrail","tags":["cloud","aws"],"enabled":"false","type":"rule","hash":"9116943c2762d1b5224cf25c9058c1ea"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L45,L63","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Console Login Through Assume Role","rule":"Console Login Through Assume Role","condition":"ct.name=\"ConsoleLogin\" and not ct.error exists and ct.user.identitytype=\"AssumedRole\" and json.value[/responseElements/ConsoleLogin]=\"Success\"","desc":"Detect a console login through Assume Role.","output":"Detected a console login through Assume Role (principal=%ct.user.principalid, assumedRole=%ct.user.arn, requesting IP=%ct.srcip, AWS region=%ct.region)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_console","aws_iam"],"enabled":"true","type":"rule","hash":"b0ad3c4cf84328c8b67192aab28cde54"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L65,L83","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Console Login Without MFA","rule":"Console Login Without MFA","condition":"ct.name=\"ConsoleLogin\" and not ct.error exists and ct.user.identitytype!=\"AssumedRole\" and json.value[/responseElements/ConsoleLogin]=\"Success\" and json.value[/additionalEventData/MFAUsed]=\"No\"","desc":"Detect a console login without MFA.","output":"Detected a console login without MFA (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region)","priority":"CRITICAL","source":"aws_cloudtrail","tags":["cloud","aws","aws_console","aws_iam"],"enabled":"true","type":"rule","hash":"f12820c22dba31060516853018c3a312"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L85,L104","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Console Root Login Without MFA","rule":"Console Root Login Without MFA","condition":"ct.name=\"ConsoleLogin\" and not ct.error exists and json.value[/additionalEventData/MFAUsed]=\"No\" and ct.user.identitytype!=\"AssumedRole\" and json.value[/responseElements/ConsoleLogin]=\"Success\" and ct.user.identitytype=\"Root\"","desc":"Detect root console login without MFA.","output":"Detected a root console login without MFA. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region)","priority":"CRITICAL","source":"aws_cloudtrail","tags":["cloud","aws","aws_console","aws_iam"],"enabled":"true","type":"rule","hash":"ac7702ed5350ddb09ea0d33abd4d9ade"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L106,L123","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Deactivate MFA for Root User","rule":"Deactivate MFA for Root User","condition":"ct.name=\"DeactivateMFADevice\" and not ct.error exists and ct.user.identitytype=\"Root\" and ct.request.username=\"AWS ROOT USER\"","desc":"Detect deactivating MFA configuration for root.","output":"Multi Factor Authentication configuration has been disabled for root (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, MFA serial number=%ct.request.serialnumber)","priority":"CRITICAL","source":"aws_cloudtrail","tags":["cloud","aws","aws_iam"],"enabled":"true","type":"rule","hash":"3b0639f7e71ecd1a6c7d421c257ffaf5"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L125,L140","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Create AWS user","rule":"Create AWS user","condition":"ct.name=\"CreateUser\" and not ct.error exists","desc":"Detect creation of a new AWS user.","output":"A new AWS user has been created (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, new user created=%ct.request.username)","priority":"INFO","source":"aws_cloudtrail","tags":["cloud","aws","aws_iam"],"enabled":"true","type":"rule","hash":"41594e8ac3660d1caa934371061ef3da"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L142,L157","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Create Group","rule":"Create Group","condition":"ct.name=\"CreateGroup\" and not ct.error exists","desc":"Detect creation of a new user group.","output":"A new user group has been created. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, group name=%ct.request.groupname)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_iam"],"enabled":"true","type":"rule","hash":"e3be07cece3e122b8197e1916a36ef83"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L159,L174","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Delete Group","rule":"Delete Group","condition":"ct.name=\"DeleteGroup\" and not ct.error exists","desc":"Detect deletion of a user group.","output":"A user group has been deleted. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, group name=%ct.request.groupname)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_iam"],"enabled":"true","type":"rule","hash":"f7f389b820140a98d5ce7387d6b88c86"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L176,L196","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"ECS Service Created","rule":"ECS Service Created","condition":"ct.src=\"ecs.amazonaws.com\" and ct.name=\"CreateService\" and not ct.error exists","desc":"Detect a new service is created in ECS.","output":"A new service has been created in ECS (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, cluster=%ct.request.cluster, service name=%ct.request.servicename, task definition=%ct.request.taskdefinition)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_ecs","aws_fargate"],"enabled":"true","type":"rule","hash":"34144709346c46ff46abc467dc1b1fd8"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L198,L217","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"ECS Task Run or Started","rule":"ECS Task Run or Started","condition":"ct.src=\"ecs.amazonaws.com\" and (ct.name=\"RunTask\" or ct.name=\"StartTask\") and not ct.error exists","desc":"Detect a new task is started in ECS.","output":"A new task has been started in ECS (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, cluster=%ct.request.cluster, task definition=%ct.request.taskdefinition)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_ecs","aws_fargate"],"enabled":"true","type":"rule","hash":"76c74a1a30ea9bcd34253a5e6d0573d1"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L219,L234","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Create Lambda Function","rule":"Create Lambda Function","condition":"ct.name=\"CreateFunction20150331\" and not ct.error exists","desc":"Detect creation of a Lambda function.","output":"Lambda function has been created. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, lambda function=%ct.request.functionname)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_lambda"],"enabled":"true","type":"rule","hash":"6335c345d6a66716bc2e5a83e48710d4"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L236,L251","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Update Lambda Function Code","rule":"Update Lambda Function Code","condition":"ct.name=\"UpdateFunctionCode20150331v2\" and not ct.error exists","desc":"Detect updates to a Lambda function code.","output":"The code of a Lambda function has been updated. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, lambda function=%ct.request.functionname)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_lambda"],"enabled":"true","type":"rule","hash":"26603485845705dd20b65aebffca6afa"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L253,L268","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Update Lambda Function Configuration","rule":"Update Lambda Function Configuration","condition":"ct.name=\"UpdateFunctionConfiguration20150331v2\" and not ct.error exists","desc":"Detect updates to a Lambda function configuration.","output":"The configuration of a Lambda function has been updated. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, lambda function=%ct.request.functionname)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_lambda"],"enabled":"true","type":"rule","hash":"53c92a80241676c138dabf192022bda6"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L270,L287","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Run Instances","rule":"Run Instances","condition":"ct.name=\"RunInstances\" and not ct.error exists","desc":"Detect launching of a specified number of instances.","output":"A number of instances have been launched. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, availability zone=%ct.request.availabilityzone, subnet id=%ct.response.subnetid, reservation id=%ct.response.reservationid)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_ec2"],"enabled":"true","type":"rule","hash":"9c7c12d8f0e68ec0868b7323d11cf7d4"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"# Only instances launched on regions in this list are approved.","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L290,L292","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"approved_regions","list":"approved_regions","items":["us-east-0"],"tags":null,"enabled":"true","used_by":["rule:Run Instances in Non-approved Region:c568c3443e4945d1e20f297e4e0e2026"],"type":"list","hash":"ae80dda6a901ab76547a3e978d9ea3a8"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L294,L313","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Run Instances in Non-approved Region","rule":"Run Instances in Non-approved Region","condition":"ct.name=\"RunInstances\" and not ct.error exists and not ct.region in (approved_regions)","desc":"Detect launching of a specified number of instances in a non-approved region.","output":"A number of instances have been launched in a non-approved region. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, availability zone=%ct.request.availabilityzone, subnet id=%ct.response.subnetid, reservation id=%ct.response.reservationid, image id=%json.value[/responseElements/instancesSet/items/0/instanceId])","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_ec2"],"enabled":"true","dependencies":["list:approved_regions:ae80dda6a901ab76547a3e978d9ea3a8"],"type":"rule","hash":"c568c3443e4945d1e20f297e4e0e2026"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L315,L330","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Delete Bucket Encryption","rule":"Delete Bucket Encryption","condition":"ct.name=\"DeleteBucketEncryption\" and not ct.error exists","desc":"Detect deleting configuration to use encryption for bucket storage.","output":"A encryption configuration for a bucket has been deleted (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, bucket=%s3.bucket)","priority":"CRITICAL","source":"aws_cloudtrail","tags":["cloud","aws","aws_s3"],"enabled":"true","type":"rule","hash":"028148ef507046a3725f9859cc2ef6c2"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L332,L352","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Delete Bucket Public Access Block","rule":"Delete Bucket Public Access Block","condition":"ct.name=\"PutBucketPublicAccessBlock\" and not ct.error exists and json.value[/requestParameters/publicAccessBlock]=\"\" and (json.value[/requestParameters/PublicAccessBlockConfiguration/RestrictPublicBuckets]=false or json.value[/requestParameters/PublicAccessBlockConfiguration/BlockPublicPolicy]=false or json.value[/requestParameters/PublicAccessBlockConfiguration/BlockPublicAcls]=false or json.value[/requestParameters/PublicAccessBlockConfiguration/IgnorePublicAcls]=false)","desc":"Detect deleting blocking public access to bucket.","output":"A public access block for a bucket has been deleted (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, bucket=%s3.bucket)","priority":"CRITICAL","source":"aws_cloudtrail","tags":["cloud","aws","aws_s3"],"enabled":"true","type":"rule","hash":"e19c3390914e5f5bf9e68b9582be2f6b"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L354,L370","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"List Buckets","rule":"List Buckets","condition":"ct.name=\"ListBuckets\" and not ct.error exists","desc":"Detect listing of all S3 buckets.","output":"A list of all S3 buckets has been requested. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, host=%ct.request.host)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_s3"],"enabled":"false","type":"rule","hash":"5d5bc5179c22a13a629255b48656b390"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L372,L387","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Put Bucket ACL","rule":"Put Bucket ACL","condition":"ct.name=\"PutBucketAcl\" and not ct.error exists","desc":"Detect setting the permissions on an existing bucket using access control lists.","output":"The permissions on an existing bucket have been set using access control lists. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, bucket name=%s3.bucket)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_s3"],"enabled":"true","type":"rule","hash":"72583c91832241d90a10f6d1ab330369"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L389,L405","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"Put Bucket Policy","rule":"Put Bucket Policy","condition":"ct.name=\"PutBucketPolicy\" and not ct.error exists","desc":"Detect applying an Amazon S3 bucket policy to an Amazon S3 bucket.","output":"An Amazon S3 bucket policy has been applied to an Amazon S3 bucket. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, bucket name=%s3.bucket, policy=%ct.request.policy)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_s3"],"enabled":"true","type":"rule","hash":"dd35f820f9581af6d746c52141384ed5"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L407,L422","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"CloudTrail Trail Created","rule":"CloudTrail Trail Created","condition":"ct.name=\"CreateTrail\" and not ct.error exists","desc":"Detect creation of a new trail.","output":"A new trail has been created. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, trail name=%ct.request.name)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_cloudtrail"],"enabled":"true","type":"rule","hash":"52fccf410111d3bd39c39dacc6326991"},{"file_name":"aws_cloudtrail_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/rules/aws_cloudtrail_rules.yaml#L424,L439","required_engine_version":"10","required_plugin_versions":[{"name":"cloudtrail","version":"0.7.0"},{"name":"json","version":"0.6.0"}],"name":"CloudTrail Logging Disabled","rule":"CloudTrail Logging Disabled","condition":"ct.name=\"StopLogging\" and not ct.error exists","desc":"The CloudTrail logging has been disabled, this could be potentially malicious.","output":"The CloudTrail logging has been disabled. (requesting user=%ct.user, requesting IP=%ct.srcip, AWS region=%ct.region, resource name=%ct.request.name)","priority":"WARNING","source":"aws_cloudtrail","tags":["cloud","aws","aws_cloudtrail"],"enabled":"true","type":"rule","hash":"5b53707d7dbc58175c8418b2d15cfa43"},{"file_name":"k8s_audit_rules.yaml","comment":"# Like always_true/always_false, but works with k8s audit events","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L30,L31","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"k8s_audit_always_true","macro":"k8s_audit_always_true","condition":"(jevt.rawtime exists)","tags":null,"enabled":"true","used_by":["macro:allowed_k8s_containers:5d511025a0b51bc9c69d1f382f0d7b55","macro:consider_activity_events:89419f9eea00ed54a7e7dc8be73546e0","macro:allowed_full_admin_users:7b1c241c01498a54f103f3d91c24fd5f","macro:allow_all_k8s_nodes:dcfaad7a677bccbcaee9df174560a2af"],"type":"macro","hash":"21ef6651784861fced1315889d54de4f"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L33,L34","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"k8s_audit_never_true","macro":"k8s_audit_never_true","condition":"(jevt.rawtime=0)","tags":null,"enabled":"true","used_by":["macro:user_known_node_port_service:eef8c8cb2dddbde98acc0032c8437a1e","macro:user_known_exec_pod_activities:654a93971e99c9f7b3bb5a8614b96d7f","macro:user_known_pod_debug_activities:f680ce82ade487e7d4c6d0bcf300391a","macro:consider_all_events:38d89891d1f279c05021c92e24eee45a"],"type":"macro","hash":"9a704dd4f5279b6d5619cb257258825a"},{"file_name":"k8s_audit_rules.yaml","comment":"# Generally only consider audit events once the response has completed","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L37,L38","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"k8s_audit_stages","list":"k8s_audit_stages","items":["ResponseComplete"],"tags":null,"enabled":"true","used_by":["macro:kevt:3d34a33c12c8213012019ec4fa8cc532"],"type":"list","hash":"39538ea9b89d00871aaf74e6bc5584ae"},{"file_name":"k8s_audit_rules.yaml","comment":"# Generally exclude users starting with \"system:\"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L41,L42","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"non_system_user","macro":"non_system_user","condition":"(not ka.user.name startswith \"system:\")","tags":null,"enabled":"true","used_by":["rule:Disallowed K8s User:3c7c39a2467726e0ac1db091b3fa729a","rule:K8s Namespace Deleted:32d046d86731ba73014ef4a3e6982de3","rule:K8s Secret Created:0cfe5113b020e988115c63966a0096e3","rule:K8s Secret Deleted:5d9fab46ecddd2256510223c81935a65","rule:Full K8s Administrative Access:fdc73e7ea6f6062e87e06bc3a197bbba"],"type":"macro","hash":"ea1dd8f878301676703a9f8cae5270c7"},{"file_name":"k8s_audit_rules.yaml","comment":"# This macro selects the set of Audit Events used by the below rules.","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L45,L46","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"kevt","macro":"kevt","condition":"(jevt.value[/stage] in (k8s_audit_stages))","tags":null,"enabled":"true","dependencies":["list:k8s_audit_stages:39538ea9b89d00871aaf74e6bc5584ae"],"used_by":["rule:Disallowed K8s User:3c7c39a2467726e0ac1db091b3fa729a","rule:Create Disallowed Pod:8d71d5de24654fe16db931fbda68825e","rule:Create Privileged Pod:70ca8c72d4fffc0c2f21c8aa705141fd","rule:Create Sensitive Mount Pod:754dc8b656feadac3eca6a1d5923ae2e","rule:Create HostNetwork Pod:f1bc06aae08495b5910b365c31f77787","rule:Create HostPid Pod:e78d3d5d025c487cd9d015e2188fbfec","rule:Create HostIPC Pod:8e8a237fa9fa5aa60170b0f32a0eb6c0","rule:Create NodePort Service:783d7200e4293a462c47478e3efe1467","rule:Create/Modify Configmap With Private Credentials:ebb29c636783c42f1280e27e47cf3e95","rule:Anonymous Request Allowed:b54c135ef6884ef1c33c68b4603ca7b9","rule:Attach/Exec Pod:9f96af4ff812f6921ca7ef17e047bc7d","rule:EphemeralContainers Created:17704f4c40a6f889fa7fc1b666857271","rule:Create Disallowed Namespace:193dccbac92b3df8bc6c2c170eca7009","rule:Pod Created in Kube Namespace:651ea6360cb043d8640b29bb2da99ce1","rule:Service Account Created in Kube Namespace:b5a8cad895c664de9e626483fe9bbc91","rule:System ClusterRole Modified/Deleted:a7ed236dedc9cd9ba73e7d75c0296cbe","rule:Attach to cluster-admin Role:ebe83079283dd56ef5073890d897fbb3","rule:ClusterRole With Wildcard Created:072b1662de9d85736bfb01e667b95298","rule:ClusterRole With Write Privileges Created:d9b4ee032aa7d58587e3a94a2bd9b07b","rule:ClusterRole With Pod Exec Created:850e0987ba6e01744124250f0436044e","macro:kactivity:c039787987aab24bf4c158446153265c","macro:kall:49eca81243ca4a3913e6eeb4ced49ab4","rule:Full K8s Administrative Access:fdc73e7ea6f6062e87e06bc3a197bbba","rule:Untrusted Node Successfully Joined the Cluster:35e82364277453c3ce626b5f5c3585fc","rule:Untrusted Node Unsuccessfully Tried to Join the Cluster:3d7bdfd28a7d480013104a5ef2723a57"],"type":"macro","hash":"3d34a33c12c8213012019ec4fa8cc532"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L48,L49","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"kevt_started","macro":"kevt_started","condition":"(jevt.value[/stage]=ResponseStarted)","tags":null,"enabled":"true","used_by":["rule:Attach/Exec Pod:9f96af4ff812f6921ca7ef17e047bc7d"],"type":"macro","hash":"7c5a087e527e36ae6c9f13252c5354ee"},{"file_name":"k8s_audit_rules.yaml","comment":"# If you wish to restrict activity to a specific set of users, override/append to this list.\n# users created by kops are included","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L53,L54","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"vertical_pod_autoscaler_users","list":"vertical_pod_autoscaler_users","items":["vpa-recommender","vpa-updater"],"tags":null,"enabled":"true","type":"list","hash":"bc6988e81c74898f313cc4d1ba714001"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L56,L57","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"allowed_k8s_users","list":"allowed_k8s_users","items":["minikube","minikube-user","kubelet","kops","admin","kube","kube-proxy","kube-apiserver-healthcheck","kubernetes-admin","vertical_pod_autoscaler_users","cluster-autoscaler","system:addon-manager","cloud-controller-manager","system:kube-controller-manager"],"tags":null,"enabled":"true","used_by":["rule:Disallowed K8s User:3c7c39a2467726e0ac1db091b3fa729a"],"type":"list","hash":"cb2d81ac2dc103df2c60202646a557fb"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L67,L68","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"eks_allowed_k8s_users","list":"eks_allowed_k8s_users","items":["eks:node-manager","eks:certificate-controller","eks:fargate-scheduler","eks:k8s-metrics","eks:authenticator","eks:cluster-event-watcher","eks:nodewatcher","eks:pod-identity-mutating-webhook","eks:cloud-controller-manager","eks:vpc-resource-controller","eks:addon-manager"],"tags":null,"enabled":"true","used_by":["rule:Disallowed K8s User:3c7c39a2467726e0ac1db091b3fa729a"],"type":"list","hash":"619f5be94a5abf86fda0ac527b8cfb01"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L82,L88","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Disallowed K8s User","rule":"Disallowed K8s User","condition":"kevt and non_system_user and not ka.user.name in (allowed_k8s_users) and not ka.user.name in (eks_allowed_k8s_users)","desc":"Detect any k8s operation by users outside of an allowed set of users.","output":"K8s Operation performed by user not in allowed list of users (user=%ka.user.name target=%ka.target.name/%ka.target.resource verb=%ka.verb uri=%ka.uri resp=%ka.response.code)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:non_system_user:ea1dd8f878301676703a9f8cae5270c7","list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:allowed_k8s_users:cb2d81ac2dc103df2c60202646a557fb","list:eks_allowed_k8s_users:619f5be94a5abf86fda0ac527b8cfb01"],"type":"rule","hash":"3c7c39a2467726e0ac1db091b3fa729a"},{"file_name":"k8s_audit_rules.yaml","comment":"# In a local/user rules file, you could override this macro to\n# explicitly enumerate the container images that you want to run in\n# your environment. In this main falco rules file, there isn't any way\n# to know all the containers that can run, so any container is\n# allowed, by using the always_true macro. In the overridden macro, the condition\n# would look something like (ka.req.pod.containers.image.repository in (my-repo/my-image))","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L96,L97","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"allowed_k8s_containers","macro":"allowed_k8s_containers","condition":"(k8s_audit_always_true)","tags":null,"enabled":"true","dependencies":["macro:k8s_audit_always_true:21ef6651784861fced1315889d54de4f","macro:always_true:3810a10835140916e579520fac814823"],"used_by":["rule:Create Disallowed Pod:8d71d5de24654fe16db931fbda68825e"],"type":"macro","hash":"5d511025a0b51bc9c69d1f382f0d7b55"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L99,L100","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"response_successful","macro":"response_successful","condition":"(ka.response.code startswith 2)","tags":null,"enabled":"true","used_by":["rule:Service Account Created in Kube Namespace:b5a8cad895c664de9e626483fe9bbc91","rule:K8s Deployment Created:baa16ce306ed06c0c7b8da5cbf5887de","rule:K8s Deployment Deleted:d421240865854432544241d569a04af5","rule:K8s Service Created:ae0e582f7f7279f82e5fb8d9a43c3f17","rule:K8s Service Deleted:a00592c93ed63f631e0376c58e82ab9a","rule:K8s ConfigMap Created:497ce34a8a3ca7b1db976f491905bb5f","rule:K8s ConfigMap Deleted:250b126545e2f71142c4fa7044a47c85","rule:K8s Namespace Created:fd2791e0d74bc33826b59a6938c5acd3","rule:K8s Namespace Deleted:32d046d86731ba73014ef4a3e6982de3","rule:K8s Serviceaccount Created:94c6f61206c9d18c1414b83951f00810","rule:K8s Serviceaccount Deleted:f0c361075797201bf27630d538b63608","rule:K8s Role/Clusterrole Created:cd94b1c38e8ae883b7694d9acb7ca7ac","rule:K8s Role/Clusterrole Deleted:e1c9ad8541abd0c2288c800476f481d7","rule:K8s Role/Clusterrolebinding Created:521a132bee8b9b8c5bd252a34c418993","rule:K8s Role/Clusterrolebinding Deleted:2ea15ff6f3d99c4042add233885ee485","rule:K8s Secret Created:0cfe5113b020e988115c63966a0096e3","rule:K8s Secret Deleted:5d9fab46ecddd2256510223c81935a65","rule:K8s Secret Get Successfully:cba1130d33330a09ee9ab90e949de28d","rule:K8s Secret Get Unsuccessfully Tried:a251a766f4420908cae668f0a0c08a08","rule:Ingress Object without TLS Certificate Created:f31d97edc305ecc002c782965508c07c","rule:Untrusted Node Successfully Joined the Cluster:35e82364277453c3ce626b5f5c3585fc","rule:Untrusted Node Unsuccessfully Tried to Join the Cluster:3d7bdfd28a7d480013104a5ef2723a57"],"type":"macro","hash":"bc99c7e7262b779ed500f70e56121743"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L102,L103","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"kget","macro":"kget","condition":"ka.verb=get","tags":null,"enabled":"true","used_by":["rule:K8s Secret Get Successfully:cba1130d33330a09ee9ab90e949de28d","rule:K8s Secret Get Unsuccessfully Tried:a251a766f4420908cae668f0a0c08a08"],"type":"macro","hash":"1551c63ba750fc9be9eebe12e7007d58"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L105,L106","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"kcreate","macro":"kcreate","condition":"ka.verb=create","tags":null,"enabled":"true","used_by":["rule:Create Disallowed Pod:8d71d5de24654fe16db931fbda68825e","rule:Create Privileged Pod:70ca8c72d4fffc0c2f21c8aa705141fd","rule:Create Sensitive Mount Pod:754dc8b656feadac3eca6a1d5923ae2e","rule:Create HostNetwork Pod:f1bc06aae08495b5910b365c31f77787","rule:Create HostPid Pod:e78d3d5d025c487cd9d015e2188fbfec","rule:Create HostIPC Pod:8e8a237fa9fa5aa60170b0f32a0eb6c0","rule:Create NodePort Service:783d7200e4293a462c47478e3efe1467","rule:Attach/Exec Pod:9f96af4ff812f6921ca7ef17e047bc7d","rule:Create Disallowed Namespace:193dccbac92b3df8bc6c2c170eca7009","rule:Pod Created in Kube Namespace:651ea6360cb043d8640b29bb2da99ce1","rule:Service Account Created in Kube Namespace:b5a8cad895c664de9e626483fe9bbc91","rule:Attach to cluster-admin Role:ebe83079283dd56ef5073890d897fbb3","rule:ClusterRole With Wildcard Created:072b1662de9d85736bfb01e667b95298","rule:ClusterRole With Write Privileges Created:d9b4ee032aa7d58587e3a94a2bd9b07b","rule:ClusterRole With Pod Exec Created:850e0987ba6e01744124250f0436044e","rule:K8s Deployment Created:baa16ce306ed06c0c7b8da5cbf5887de","rule:K8s Service Created:ae0e582f7f7279f82e5fb8d9a43c3f17","rule:K8s ConfigMap Created:497ce34a8a3ca7b1db976f491905bb5f","rule:K8s Namespace Created:fd2791e0d74bc33826b59a6938c5acd3","rule:K8s Serviceaccount Created:94c6f61206c9d18c1414b83951f00810","rule:K8s Role/Clusterrole Created:cd94b1c38e8ae883b7694d9acb7ca7ac","rule:K8s Role/Clusterrolebinding Created:521a132bee8b9b8c5bd252a34c418993","rule:K8s Secret Created:0cfe5113b020e988115c63966a0096e3","rule:Ingress Object without TLS Certificate Created:f31d97edc305ecc002c782965508c07c","rule:Untrusted Node Successfully Joined the Cluster:35e82364277453c3ce626b5f5c3585fc","rule:Untrusted Node Unsuccessfully Tried to Join the Cluster:3d7bdfd28a7d480013104a5ef2723a57"],"type":"macro","hash":"37c7fc423d74cded348b39b4d2784eb4"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L108,L109","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"kmodify","macro":"kmodify","condition":"(ka.verb in (create,update,patch))","tags":null,"enabled":"true","used_by":["rule:Create/Modify Configmap With Private Credentials:ebb29c636783c42f1280e27e47cf3e95","rule:EphemeralContainers Created:17704f4c40a6f889fa7fc1b666857271","rule:System ClusterRole Modified/Deleted:a7ed236dedc9cd9ba73e7d75c0296cbe"],"type":"macro","hash":"1c3d2097993b597385dba443719c175f"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L111,L112","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"kdelete","macro":"kdelete","condition":"ka.verb=delete","tags":null,"enabled":"true","used_by":["rule:System ClusterRole Modified/Deleted:a7ed236dedc9cd9ba73e7d75c0296cbe","rule:K8s Deployment Deleted:d421240865854432544241d569a04af5","rule:K8s Service Deleted:a00592c93ed63f631e0376c58e82ab9a","rule:K8s ConfigMap Deleted:250b126545e2f71142c4fa7044a47c85","rule:K8s Namespace Deleted:32d046d86731ba73014ef4a3e6982de3","rule:K8s Serviceaccount Deleted:f0c361075797201bf27630d538b63608","rule:K8s Role/Clusterrole Deleted:e1c9ad8541abd0c2288c800476f481d7","rule:K8s Role/Clusterrolebinding Deleted:2ea15ff6f3d99c4042add233885ee485","rule:K8s Secret Deleted:5d9fab46ecddd2256510223c81935a65"],"type":"macro","hash":"c0bbea75a56d965e6085f0f12ec2d5d9"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L114,L115","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"pod","macro":"pod","condition":"ka.target.resource=pods and not ka.target.subresource exists","tags":null,"enabled":"true","used_by":["macro:pod_subresource:ec74525d8de5f6ef77f0091dbe11f020","rule:Create Disallowed Pod:8d71d5de24654fe16db931fbda68825e","rule:Create Privileged Pod:70ca8c72d4fffc0c2f21c8aa705141fd","rule:Create Sensitive Mount Pod:754dc8b656feadac3eca6a1d5923ae2e","rule:Create HostNetwork Pod:f1bc06aae08495b5910b365c31f77787","rule:Create HostPid Pod:e78d3d5d025c487cd9d015e2188fbfec","rule:Create HostIPC Pod:8e8a237fa9fa5aa60170b0f32a0eb6c0","rule:Attach/Exec Pod:9f96af4ff812f6921ca7ef17e047bc7d","rule:EphemeralContainers Created:17704f4c40a6f889fa7fc1b666857271","rule:Pod Created in Kube Namespace:651ea6360cb043d8640b29bb2da99ce1","rule:ClusterRole With Pod Exec Created:850e0987ba6e01744124250f0436044e","macro:checkpoint_writing_state:030543659efa642294c18d47aa7fcc40","macro:openshift_image:a963c49d809c7db284d12a2020ad26b8"],"type":"macro","hash":"dcc0caa97588ee058c2fcd764e5f919b"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L117,L118","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"pod_subresource","macro":"pod_subresource","condition":"ka.target.resource=pods and ka.target.subresource exists","tags":null,"enabled":"true","dependencies":["macro:pod:dcc0caa97588ee058c2fcd764e5f919b"],"used_by":["rule:Attach/Exec Pod:9f96af4ff812f6921ca7ef17e047bc7d","rule:EphemeralContainers Created:17704f4c40a6f889fa7fc1b666857271"],"type":"macro","hash":"ec74525d8de5f6ef77f0091dbe11f020"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L120,L121","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"deployment","macro":"deployment","condition":"ka.target.resource=deployments","tags":null,"enabled":"true","used_by":["rule:K8s Deployment Created:baa16ce306ed06c0c7b8da5cbf5887de","rule:K8s Deployment Deleted:d421240865854432544241d569a04af5","macro:openshift_image:a963c49d809c7db284d12a2020ad26b8"],"type":"macro","hash":"06e5c0d0f9eabd9525e5f9dc4f6f37cf"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L123,L124","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"service","macro":"service","condition":"ka.target.resource=services","tags":null,"enabled":"true","used_by":["macro:serviceaccount:618c2280ccb9083ae6152f4eaec58a86","rule:Create NodePort Service:783d7200e4293a462c47478e3efe1467","rule:Service Account Created in Kube Namespace:b5a8cad895c664de9e626483fe9bbc91","rule:K8s Service Created:ae0e582f7f7279f82e5fb8d9a43c3f17","rule:K8s Service Deleted:a00592c93ed63f631e0376c58e82ab9a","rule:K8s Serviceaccount Created:94c6f61206c9d18c1414b83951f00810","rule:K8s Serviceaccount Deleted:f0c361075797201bf27630d538b63608","macro:plesk_install_writing_apache_conf:b1645f2efd8de69398708897f91f9684","macro:rancher_writing_conf:8b1f4bfa74e091fb880570e839ff8d41","macro:rancher_writing_root:687f66c964ff5e546b31a18570c553a2","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"aaabf0d39951f3e6c3e8a7911df524c2"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L126,L127","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"configmap","macro":"configmap","condition":"ka.target.resource=configmaps","tags":null,"enabled":"true","used_by":["rule:Create/Modify Configmap With Private Credentials:ebb29c636783c42f1280e27e47cf3e95","rule:K8s ConfigMap Created:497ce34a8a3ca7b1db976f491905bb5f","rule:K8s ConfigMap Deleted:250b126545e2f71142c4fa7044a47c85"],"type":"macro","hash":"0eda34eee3148f7899d7ef2d7f1b0238"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L129,L130","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"namespace","macro":"namespace","condition":"ka.target.resource=namespaces","tags":null,"enabled":"true","used_by":["rule:Create Disallowed Namespace:193dccbac92b3df8bc6c2c170eca7009","macro:allowed_kube_namespace_pods:4014ef1df33e20f9743117da689d7033","rule:Pod Created in Kube Namespace:651ea6360cb043d8640b29bb2da99ce1","rule:K8s Namespace Created:fd2791e0d74bc33826b59a6938c5acd3","rule:K8s Namespace Deleted:32d046d86731ba73014ef4a3e6982de3","rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61","rule:Network Connection outside Local Subnet:206cb97c10e38d639e03767466f289e0"],"type":"macro","hash":"89801e9e98979062e84647433a8ed3e9"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L132,L133","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"serviceaccount","macro":"serviceaccount","condition":"ka.target.resource=serviceaccounts","tags":null,"enabled":"true","dependencies":["macro:service:aaabf0d39951f3e6c3e8a7911df524c2"],"used_by":["rule:Service Account Created in Kube Namespace:b5a8cad895c664de9e626483fe9bbc91","rule:K8s Serviceaccount Created:94c6f61206c9d18c1414b83951f00810","rule:K8s Serviceaccount Deleted:f0c361075797201bf27630d538b63608","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"618c2280ccb9083ae6152f4eaec58a86"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L135,L136","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"clusterrole","macro":"clusterrole","condition":"ka.target.resource=clusterroles","tags":null,"enabled":"true","dependencies":["macro:role:29a7e96467b69a9f5a93332e29e9b0de"],"used_by":["macro:clusterrolebinding:7c84785a0576aca333974b46f1be8056","rule:System ClusterRole Modified/Deleted:a7ed236dedc9cd9ba73e7d75c0296cbe","rule:Attach to cluster-admin Role:ebe83079283dd56ef5073890d897fbb3","rule:ClusterRole With Wildcard Created:072b1662de9d85736bfb01e667b95298","rule:ClusterRole With Write Privileges Created:d9b4ee032aa7d58587e3a94a2bd9b07b","rule:ClusterRole With Pod Exec Created:850e0987ba6e01744124250f0436044e","rule:K8s Role/Clusterrole Created:cd94b1c38e8ae883b7694d9acb7ca7ac","rule:K8s Role/Clusterrole Deleted:e1c9ad8541abd0c2288c800476f481d7","rule:K8s Role/Clusterrolebinding Created:521a132bee8b9b8c5bd252a34c418993","rule:K8s Role/Clusterrolebinding Deleted:2ea15ff6f3d99c4042add233885ee485"],"type":"macro","hash":"e094bcef29e4ca88c66ca030934e97a8"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L138,L139","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"clusterrolebinding","macro":"clusterrolebinding","condition":"ka.target.resource=clusterrolebindings","tags":null,"enabled":"true","dependencies":["macro:clusterrole:e094bcef29e4ca88c66ca030934e97a8","macro:role:29a7e96467b69a9f5a93332e29e9b0de"],"used_by":["rule:Attach to cluster-admin Role:ebe83079283dd56ef5073890d897fbb3","rule:K8s Role/Clusterrolebinding Created:521a132bee8b9b8c5bd252a34c418993","rule:K8s Role/Clusterrolebinding Deleted:2ea15ff6f3d99c4042add233885ee485"],"type":"macro","hash":"7c84785a0576aca333974b46f1be8056"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L141,L142","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"role","macro":"role","condition":"ka.target.resource=roles","tags":null,"enabled":"true","used_by":["macro:clusterrole:e094bcef29e4ca88c66ca030934e97a8","macro:clusterrolebinding:7c84785a0576aca333974b46f1be8056","rule:System ClusterRole Modified/Deleted:a7ed236dedc9cd9ba73e7d75c0296cbe","rule:Attach to cluster-admin Role:ebe83079283dd56ef5073890d897fbb3","rule:ClusterRole With Wildcard Created:072b1662de9d85736bfb01e667b95298","rule:ClusterRole With Write Privileges Created:d9b4ee032aa7d58587e3a94a2bd9b07b","rule:ClusterRole With Pod Exec Created:850e0987ba6e01744124250f0436044e","rule:K8s Role/Clusterrole Created:cd94b1c38e8ae883b7694d9acb7ca7ac","rule:K8s Role/Clusterrole Deleted:e1c9ad8541abd0c2288c800476f481d7","rule:K8s Role/Clusterrolebinding Created:521a132bee8b9b8c5bd252a34c418993","rule:K8s Role/Clusterrolebinding Deleted:2ea15ff6f3d99c4042add233885ee485"],"type":"macro","hash":"29a7e96467b69a9f5a93332e29e9b0de"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L144,L145","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"secret","macro":"secret","condition":"ka.target.resource=secrets","tags":null,"enabled":"true","used_by":["rule:K8s Secret Created:0cfe5113b020e988115c63966a0096e3","rule:K8s Secret Deleted:5d9fab46ecddd2256510223c81935a65","rule:K8s Secret Get Successfully:cba1130d33330a09ee9ab90e949de28d","rule:K8s Secret Get Unsuccessfully Tried:a251a766f4420908cae668f0a0c08a08","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","macro:private_aws_credentials:9fcead5c6eef1bdbf3f1a4981a100df6"],"type":"macro","hash":"5ebe2294ecd0e0f08eab7690d2a6ee69"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L147,L148","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"health_endpoint","macro":"health_endpoint","condition":"ka.uri=/healthz","tags":null,"enabled":"true","used_by":["rule:Anonymous Request Allowed:b54c135ef6884ef1c33c68b4603ca7b9"],"type":"macro","hash":"be396e21558c50330d6d104f6910e7ab"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L150,L151","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"live_endpoint","macro":"live_endpoint","condition":"ka.uri=/livez","tags":null,"enabled":"true","used_by":["rule:Anonymous Request Allowed:b54c135ef6884ef1c33c68b4603ca7b9"],"type":"macro","hash":"3bc0977f9ebddaef348d08211fcb4ebd"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L153,L154","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"ready_endpoint","macro":"ready_endpoint","condition":"ka.uri=/readyz","tags":null,"enabled":"true","used_by":["rule:Anonymous Request Allowed:b54c135ef6884ef1c33c68b4603ca7b9"],"type":"macro","hash":"d1faf0c342855031e203911ebacec1b9"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L156,L163","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create Disallowed Pod","rule":"Create Disallowed Pod","condition":"kevt and pod and kcreate and not allowed_k8s_containers","desc":"Detect an attempt to start a pod with a container image outside of a list of allowed images.\n","output":"Pod started with container not in allowed list (user=%ka.user.name pod=%ka.resp.name ns=%ka.target.namespace images=%ka.req.pod.containers.image)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:allowed_k8s_containers:5d511025a0b51bc9c69d1f382f0d7b55","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:k8s_containers:d8bdacbfed1ae82231bffc00d31c49e3"],"type":"rule","hash":"8d71d5de24654fe16db931fbda68825e"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L165,L172","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create Privileged Pod","rule":"Create Privileged Pod","condition":"kevt and pod and kcreate and ka.req.pod.containers.privileged intersects (true) and not ka.req.pod.containers.image.repository in (falco_privileged_images)","desc":"Detect an attempt to start a pod with a privileged container\n","output":"Pod started with privileged container (user=%ka.user.name pod=%ka.resp.name resource=%ka.target.resource ns=%ka.target.namespace images=%ka.req.pod.containers.image)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:falco_privileged_images:fcbbd9234536bd53a20eb8d98e3fd443"],"type":"rule","hash":"70ca8c72d4fffc0c2f21c8aa705141fd"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L174,L175","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"sensitive_vol_mount","macro":"sensitive_vol_mount","condition":"(ka.req.pod.volumes.hostpath intersects (/proc, /var/run/docker.sock, /, /etc, /root, /var/run/crio/crio.sock, /run/containerd/containerd.sock, /home/admin, /var/lib/kubelet, /var/lib/kubelet/pki, /etc/kubernetes, /etc/kubernetes/manifests))\n","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["rule:Create Sensitive Mount Pod:754dc8b656feadac3eca6a1d5923ae2e"],"type":"macro","hash":"621cd5c512333ac20ba436785be6b179"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L178,L186","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create Sensitive Mount Pod","rule":"Create Sensitive Mount Pod","condition":"kevt and pod and kcreate and sensitive_vol_mount and not ka.req.pod.containers.image.repository in (falco_sensitive_mount_images)","desc":"Detect an attempt to start a pod with a volume from a sensitive host directory (i.e. /proc). Exceptions are made for known trusted images.\n","output":"Pod started with sensitive mount (user=%ka.user.name pod=%ka.resp.name ns=%ka.target.namespace resource=%ka.target.resource images=%ka.req.pod.containers.image volumes=%jevt.value[/requestObject/spec/volumes])","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:sensitive_vol_mount:621cd5c512333ac20ba436785be6b179","list:falco_sensitive_mount_images:b9e19fd16576e5fc4fbb3507fc7bc452","list:sensitive_mount:0137f89a3bc9f6d0ad2b73f4f983bf40"],"type":"rule","hash":"754dc8b656feadac3eca6a1d5923ae2e"},{"file_name":"k8s_audit_rules.yaml","comment":"# These container images are allowed to run with hostnetwork=true","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L189,L190","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"falco_hostnetwork_images","list":"falco_hostnetwork_images","items":["gcr.io/google-containers/prometheus-to-sd","gcr.io/projectcalico-org/typha","gcr.io/projectcalico-org/node","gke.gcr.io/gke-metadata-server","gke.gcr.io/kube-proxy","gke.gcr.io/netd-amd64","k8s.gcr.io/ip-masq-agent-amd64","k8s.gcr.io/prometheus-to-sd"],"tags":null,"enabled":"true","used_by":["rule:Create HostNetwork Pod:f1bc06aae08495b5910b365c31f77787"],"type":"list","hash":"3899dcaee3e8f1f3c73be3caaa3015bd"},{"file_name":"k8s_audit_rules.yaml","comment":"# Corresponds to K8s CIS Benchmark 1.7.4","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L202,L208","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create HostNetwork Pod","rule":"Create HostNetwork Pod","condition":"kevt and pod and kcreate and ka.req.pod.host_network intersects (true) and not ka.req.pod.containers.image.repository in (falco_hostnetwork_images)","desc":"Detect an attempt to start a pod using the host network.","output":"Pod started using host network (user=%ka.user.name pod=%ka.resp.name resource=%ka.target.resource ns=%ka.target.namespace images=%ka.req.pod.containers.image)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:falco_hostnetwork_images:3899dcaee3e8f1f3c73be3caaa3015bd"],"type":"rule","hash":"f1bc06aae08495b5910b365c31f77787"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L210,L211","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"falco_hostpid_images","list":"falco_hostpid_images","tags":null,"enabled":"true","used_by":["rule:Create HostPid Pod:e78d3d5d025c487cd9d015e2188fbfec"],"type":"list","hash":"8d95637c57c4b752fa9f88e76f9dddf7"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L213,L219","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create HostPid Pod","rule":"Create HostPid Pod","condition":"kevt and pod and kcreate and ka.req.pod.host_pid intersects (true) and not ka.req.pod.containers.image.repository in (falco_hostpid_images)","desc":"Detect an attempt to start a pod using the host pid namespace.","output":"Pod started using host pid namespace (user=%ka.user.name pod=%ka.resp.name resource=%ka.target.resource ns=%ka.target.namespace images=%ka.req.pod.containers.image)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:falco_hostpid_images:8d95637c57c4b752fa9f88e76f9dddf7"],"type":"rule","hash":"e78d3d5d025c487cd9d015e2188fbfec"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L221,L222","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"falco_hostipc_images","list":"falco_hostipc_images","tags":null,"enabled":"true","used_by":["rule:Create HostIPC Pod:8e8a237fa9fa5aa60170b0f32a0eb6c0"],"type":"list","hash":"5b9a60c5bf8a853e642336af09c58cc1"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L224,L230","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create HostIPC Pod","rule":"Create HostIPC Pod","condition":"kevt and pod and kcreate and ka.req.pod.host_ipc intersects (true) and not ka.req.pod.containers.image.repository in (falco_hostipc_images)","desc":"Detect an attempt to start a pod using the host ipc namespace.","output":"Pod started using host ipc namespace (user=%ka.user.name pod=%ka.resp.name resource=%ka.target.resource ns=%ka.target.namespace images=%ka.req.pod.containers.image)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:falco_hostipc_images:5b9a60c5bf8a853e642336af09c58cc1"],"type":"rule","hash":"8e8a237fa9fa5aa60170b0f32a0eb6c0"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L232,L233","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"user_known_node_port_service","macro":"user_known_node_port_service","condition":"(k8s_audit_never_true)","tags":null,"enabled":"true","dependencies":["macro:k8s_audit_never_true:9a704dd4f5279b6d5619cb257258825a","macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Create NodePort Service:783d7200e4293a462c47478e3efe1467"],"type":"macro","hash":"eef8c8cb2dddbde98acc0032c8437a1e"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L235,L242","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create NodePort Service","rule":"Create NodePort Service","condition":"kevt and service and kcreate and ka.req.service.type=NodePort and not user_known_node_port_service","desc":"Detect an attempt to start a service with a NodePort service type\n","output":"NodePort Service Created (user=%ka.user.name service=%ka.target.name resource=%ka.target.resource ns=%ka.target.namespace ports=%ka.req.service.ports)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:service:aaabf0d39951f3e6c3e8a7911df524c2","list:user_known_node_port_service:eef8c8cb2dddbde98acc0032c8437a1e","list:node:36c4536996ca5615dcf9911f068786dc"],"type":"rule","hash":"783d7200e4293a462c47478e3efe1467"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L244,L245","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"contains_private_credentials","macro":"contains_private_credentials","condition":"(ka.req.configmap.obj contains \"aws_access_key_id\" or\n ka.req.configmap.obj contains \"aws-access-key-id\" or\n ka.req.configmap.obj contains \"aws_s3_access_key_id\" or\n ka.req.configmap.obj contains \"aws-s3-access-key-id\" or\n ka.req.configmap.obj contains \"password\" or\n ka.req.configmap.obj contains \"passphrase\")\n","tags":null,"enabled":"true","used_by":["rule:Create/Modify Configmap With Private Credentials:ebb29c636783c42f1280e27e47cf3e95"],"type":"macro","hash":"ca44975e6e454da5b380ea34b5635e17"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L253,L260","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create/Modify Configmap With Private Credentials","rule":"Create/Modify Configmap With Private Credentials","condition":"kevt and configmap and kmodify and contains_private_credentials","desc":"Detect creating/modifying a configmap containing a private credential (aws key, password, etc.)\n","output":"K8s configmap with private credential (user=%ka.user.name verb=%ka.verb resource=%ka.target.resource configmap=%ka.req.configmap.name config=%ka.req.configmap.obj)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kmodify:1c3d2097993b597385dba443719c175f","list:configmap:0eda34eee3148f7899d7ef2d7f1b0238","list:contains_private_credentials:ca44975e6e454da5b380ea34b5635e17","list:modify:8f45a2644508b5282f57fe129f62d19a"],"type":"rule","hash":"ebb29c636783c42f1280e27e47cf3e95"},{"file_name":"k8s_audit_rules.yaml","comment":"# Corresponds to K8s CIS Benchmark, 1.1.1.","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L263,L270","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Anonymous Request Allowed","rule":"Anonymous Request Allowed","condition":"kevt and ka.user.name=system:anonymous and ka.auth.decision=\"allow\" and not health_endpoint and not live_endpoint and not ready_endpoint","desc":"Detect any request made by the anonymous user that was allowed\n","output":"Request by anonymous user allowed (user=%ka.user.name verb=%ka.verb uri=%ka.uri reason=%ka.auth.reason))","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:health_endpoint:be396e21558c50330d6d104f6910e7ab","list:live_endpoint:3bc0977f9ebddaef348d08211fcb4ebd","list:ready_endpoint:d1faf0c342855031e203911ebacec1b9"],"type":"rule","hash":"b54c135ef6884ef1c33c68b4603ca7b9"},{"file_name":"k8s_audit_rules.yaml","comment":"# Ideally, we'd add a more stringent rule that detects attaches/execs\n# to a privileged pod, but that requires the engine for k8s audit\n# events to be stateful, so it could know if a container named in an\n# attach request was created privileged or not. For now, we have a\n# less severe rule that detects attaches/execs to any pod.\n#\n# For the same reason, you can't use things like image names/prefixes,\n# as the event that creates the pod (which has the images) is a\n# separate event than the actual exec/attach to the pod.\n","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L285,L286","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"user_known_exec_pod_activities","macro":"user_known_exec_pod_activities","condition":"(k8s_audit_never_true)","tags":null,"enabled":"true","dependencies":["macro:k8s_audit_never_true:9a704dd4f5279b6d5619cb257258825a","macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Attach/Exec Pod:9f96af4ff812f6921ca7ef17e047bc7d"],"type":"macro","hash":"654a93971e99c9f7b3bb5a8614b96d7f"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L288,L295","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Attach/Exec Pod","rule":"Attach/Exec Pod","condition":"kevt_started and pod_subresource and kcreate and ka.target.subresource in (exec,attach) and not user_known_exec_pod_activities","desc":"Detect any attempt to attach/exec to a pod\n","output":"Attach/Exec to pod (user=%ka.user.name pod=%ka.target.name resource=%ka.target.resource ns=%ka.target.namespace action=%ka.target.subresource command=%ka.uri.param[command])","priority":"NOTICE","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kevt_started:7c5a087e527e36ae6c9f13252c5354ee","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:pod_subresource:ec74525d8de5f6ef77f0091dbe11f020","list:user_known_exec_pod_activities:654a93971e99c9f7b3bb5a8614b96d7f"],"type":"rule","hash":"9f96af4ff812f6921ca7ef17e047bc7d"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L297,L298","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"user_known_pod_debug_activities","macro":"user_known_pod_debug_activities","condition":"(k8s_audit_never_true)","tags":null,"enabled":"true","dependencies":["macro:k8s_audit_never_true:9a704dd4f5279b6d5619cb257258825a","macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:EphemeralContainers Created:17704f4c40a6f889fa7fc1b666857271"],"type":"macro","hash":"f680ce82ade487e7d4c6d0bcf300391a"},{"file_name":"k8s_audit_rules.yaml","comment":"# Only works when feature gate EphemeralContainers is enabled","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L301,L308","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"EphemeralContainers Created","rule":"EphemeralContainers Created","condition":"kevt and pod_subresource and kmodify and ka.target.subresource in (ephemeralcontainers) and not user_known_pod_debug_activities","desc":"Detect any ephemeral container created\n","output":"Ephemeral container is created in pod (user=%ka.user.name pod=%ka.target.name resource=%ka.target.resource ns=%ka.target.namespace ephemeral_container_name=%jevt.value[/requestObject/ephemeralContainers/0/name] ephemeral_container_image=%jevt.value[/requestObject/ephemeralContainers/0/image])","priority":"NOTICE","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kmodify:1c3d2097993b597385dba443719c175f","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:pod_subresource:ec74525d8de5f6ef77f0091dbe11f020","list:user_known_pod_debug_activities:f680ce82ade487e7d4c6d0bcf300391a","list:modify:8f45a2644508b5282f57fe129f62d19a","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"type":"rule","hash":"17704f4c40a6f889fa7fc1b666857271"},{"file_name":"k8s_audit_rules.yaml","comment":"# In a local/user rules fie, you can append to this list to add additional allowed namespaces","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L311,L312","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"allowed_namespaces","list":"allowed_namespaces","items":["kube-system","kube-public","default"],"tags":null,"enabled":"true","used_by":["rule:Create Disallowed Namespace:193dccbac92b3df8bc6c2c170eca7009"],"type":"list","hash":"7884a197e13487d6d8c732b8a8f4db2e"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L314,L320","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Create Disallowed Namespace","rule":"Create Disallowed Namespace","condition":"kevt and namespace and kcreate and not ka.target.name in (allowed_namespaces)","desc":"Detect any attempt to create a namespace outside of a set of known namespaces","output":"Disallowed namespace created (user=%ka.user.name ns=%ka.target.name resource=%ka.target.resource)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:namespace:89801e9e98979062e84647433a8ed3e9","list:allowed_namespaces:7884a197e13487d6d8c732b8a8f4db2e"],"type":"rule","hash":"193dccbac92b3df8bc6c2c170eca7009"},{"file_name":"k8s_audit_rules.yaml","comment":"# Only defined for backwards compatibility. Use the more specific\n# user_allowed_kube_namespace_image_list instead.","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L324,L325","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"user_trusted_image_list","list":"user_trusted_image_list","tags":null,"enabled":"true","type":"list","hash":"4e89accfde6b02b0502c995884d8b93a"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L327,L328","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"user_allowed_kube_namespace_image_list","list":"user_allowed_kube_namespace_image_list","items":["user_trusted_image_list"],"tags":null,"enabled":"true","used_by":["macro:allowed_kube_namespace_pods:4014ef1df33e20f9743117da689d7033"],"type":"list","hash":"2028cce60db33870f0a18a7ba8752d0c"},{"file_name":"k8s_audit_rules.yaml","comment":"# Only defined for backwards compatibility. Use the more specific\n# allowed_kube_namespace_image_list instead.","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L332,L333","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"k8s_image_list","list":"k8s_image_list","tags":null,"enabled":"true","type":"list","hash":"fe129c90c5991e7814454b403f9e8680"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L335,L336","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"allowed_kube_namespace_image_list","list":"allowed_kube_namespace_image_list","items":["gcr.io/google-containers/prometheus-to-sd","gcr.io/projectcalico-org/node","gke.gcr.io/addon-resizer","gke.gcr.io/heapster","gke.gcr.io/gke-metadata-server","k8s.gcr.io/ip-masq-agent-amd64","k8s.gcr.io/kube-apiserver","gke.gcr.io/kube-proxy","gke.gcr.io/netd-amd64","gke.gcr.io/watcher-daemonset","k8s.gcr.io/addon-resizer k8s.gcr.io/prometheus-to-sd","k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64","k8s.gcr.io/k8s-dns-kube-dns-amd64","k8s.gcr.io/k8s-dns-sidecar-amd64","k8s.gcr.io/metrics-server-amd64","kope/kube-apiserver-healthcheck","k8s_image_list"],"tags":null,"enabled":"true","used_by":["macro:allowed_kube_namespace_pods:4014ef1df33e20f9743117da689d7033"],"type":"list","hash":"fc5f9c19bfc7355b344f73fe45e1aaaa"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L357,L358","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"allowed_kube_namespace_pods","macro":"allowed_kube_namespace_pods","condition":"(ka.req.pod.containers.image.repository in (user_allowed_kube_namespace_image_list) or ka.req.pod.containers.image.repository in (allowed_kube_namespace_image_list))","tags":null,"enabled":"true","dependencies":["macro:namespace:89801e9e98979062e84647433a8ed3e9","list:user_allowed_kube_namespace_image_list:2028cce60db33870f0a18a7ba8752d0c","list:allowed_kube_namespace_image_list:fc5f9c19bfc7355b344f73fe45e1aaaa"],"used_by":["rule:Pod Created in Kube Namespace:651ea6360cb043d8640b29bb2da99ce1"],"type":"macro","hash":"4014ef1df33e20f9743117da689d7033"},{"file_name":"k8s_audit_rules.yaml","comment":"# Detect any new pod created in the kube-system namespace","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L362,L368","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Pod Created in Kube Namespace","rule":"Pod Created in Kube Namespace","condition":"kevt and pod and kcreate and ka.target.namespace in (kube-system, kube-public) and not allowed_kube_namespace_pods","desc":"Detect any attempt to create a pod in the kube-system or kube-public namespaces","output":"Pod created in kube namespace (user=%ka.user.name pod=%ka.resp.name resource=%ka.target.resource ns=%ka.target.namespace images=%ka.req.pod.containers.image)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:namespace:89801e9e98979062e84647433a8ed3e9","list:allowed_kube_namespace_pods:4014ef1df33e20f9743117da689d7033"],"type":"rule","hash":"651ea6360cb043d8640b29bb2da99ce1"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L370,L371","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"user_known_sa_list","list":"user_known_sa_list","tags":null,"enabled":"true","used_by":["macro:trusted_sa:f85f5c048bba1d62044726ad24c2317a"],"type":"list","hash":"2780d5a55020009896ad826e5731f1ba"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L373,L374","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"known_sa_list","list":"known_sa_list","items":["coredns","coredns-autoscaler","cronjob-controller","daemon-set-controller","deployment-controller","disruption-controller","endpoint-controller","endpointslice-controller","endpointslicemirroring-controller","generic-garbage-collector","horizontal-pod-autoscaler","job-controller","namespace-controller","node-controller","persistent-volume-binder","pod-garbage-collector","pv-protection-controller","pvc-protection-controller","replicaset-controller","resourcequota-controller","root-ca-cert-publisher","service-account-controller","statefulset-controller"],"tags":null,"enabled":"true","used_by":["macro:trusted_sa:f85f5c048bba1d62044726ad24c2317a"],"type":"list","hash":"2609cede5b398c9ceae918e9fe90a560"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L400,L401","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"trusted_sa","macro":"trusted_sa","condition":"(ka.target.name in (known_sa_list, user_known_sa_list))","tags":null,"enabled":"true","dependencies":["list:user_known_sa_list:2780d5a55020009896ad826e5731f1ba","list:known_sa_list:2609cede5b398c9ceae918e9fe90a560"],"used_by":["rule:Service Account Created in Kube Namespace:b5a8cad895c664de9e626483fe9bbc91"],"type":"macro","hash":"f85f5c048bba1d62044726ad24c2317a"},{"file_name":"k8s_audit_rules.yaml","comment":"# Detect creating a service account in the kube-system/kube-public namespace","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L404,L410","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Service Account Created in Kube Namespace","rule":"Service Account Created in Kube Namespace","condition":"kevt and serviceaccount and kcreate and ka.target.namespace in (kube-system, kube-public) and response_successful and not trusted_sa","desc":"Detect any attempt to create a serviceaccount in the kube-system or kube-public namespaces","output":"Service account created in kube namespace (user=%ka.user.name serviceaccount=%ka.target.name resource=%ka.target.resource ns=%ka.target.namespace)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:service:aaabf0d39951f3e6c3e8a7911df524c2","list:serviceaccount:618c2280ccb9083ae6152f4eaec58a86","list:trusted_sa:f85f5c048bba1d62044726ad24c2317a"],"type":"rule","hash":"b5a8cad895c664de9e626483fe9bbc91"},{"file_name":"k8s_audit_rules.yaml","comment":"# Detect any modify/delete to any ClusterRole starting with\n# \"system:\". \"system:coredns\" is excluded as changes are expected in\n# normal operation.","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L415,L422","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"System ClusterRole Modified/Deleted","rule":"System ClusterRole Modified/Deleted","condition":"kevt and (role or clusterrole) and (kmodify or kdelete) and (ka.target.name startswith \"system:\") and not ka.target.name in (system:coredns, system:managed-certificate-controller)","desc":"Detect any attempt to modify/delete a ClusterRole/Role starting with system","output":"System ClusterRole/Role modified or deleted (user=%ka.user.name role=%ka.target.name resource=%ka.target.resource ns=%ka.target.namespace action=%ka.verb)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kmodify:1c3d2097993b597385dba443719c175f","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:role:29a7e96467b69a9f5a93332e29e9b0de","list:modify:8f45a2644508b5282f57fe129f62d19a"],"type":"rule","hash":"a7ed236dedc9cd9ba73e7d75c0296cbe"},{"file_name":"k8s_audit_rules.yaml","comment":"# Detect any attempt to create a ClusterRoleBinding to the cluster-admin user\n# (expand this to any built-in cluster role that does \"sensitive\" things)","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L426,L432","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Attach to cluster-admin Role","rule":"Attach to cluster-admin Role","condition":"kevt and clusterrolebinding and kcreate and ka.req.binding.role=cluster-admin","desc":"Detect any attempt to create a ClusterRoleBinding to the cluster-admin user","output":"Cluster Role Binding to cluster-admin role (user=%ka.user.name subject=%ka.req.binding.subjects)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:clusterrolebinding:7c84785a0576aca333974b46f1be8056","list:role:29a7e96467b69a9f5a93332e29e9b0de"],"type":"rule","hash":"ebe83079283dd56ef5073890d897fbb3"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L434,L440","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"ClusterRole With Wildcard Created","rule":"ClusterRole With Wildcard Created","condition":"kevt and (role or clusterrole) and kcreate and (ka.req.role.rules.resources intersects (\"*\") or ka.req.role.rules.verbs intersects (\"*\"))","desc":"Detect any attempt to create a Role/ClusterRole with wildcard resources or verbs","output":"Created Role/ClusterRole with wildcard (user=%ka.user.name role=%ka.target.name resource=%ka.target.resource rules=%ka.req.role.rules)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:role:29a7e96467b69a9f5a93332e29e9b0de"],"type":"rule","hash":"072b1662de9d85736bfb01e667b95298"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L442,L443","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"writable_verbs","macro":"writable_verbs","condition":"(ka.req.role.rules.verbs intersects (create, update, patch, delete, deletecollection))\n","tags":null,"enabled":"true","used_by":["rule:ClusterRole With Write Privileges Created:d9b4ee032aa7d58587e3a94a2bd9b07b"],"type":"macro","hash":"21f7d1d7840cc63323d9a5c60e8d9cf2"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L446,L452","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"ClusterRole With Write Privileges Created","rule":"ClusterRole With Write Privileges Created","condition":"kevt and (role or clusterrole) and kcreate and writable_verbs","desc":"Detect any attempt to create a Role/ClusterRole that can perform write-related actions","output":"Created Role/ClusterRole with write privileges (user=%ka.user.name role=%ka.target.name resource=%ka.target.resource rules=%ka.req.role.rules)","priority":"NOTICE","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:role:29a7e96467b69a9f5a93332e29e9b0de","list:writable_verbs:21f7d1d7840cc63323d9a5c60e8d9cf2"],"type":"rule","hash":"d9b4ee032aa7d58587e3a94a2bd9b07b"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L454,L460","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"ClusterRole With Pod Exec Created","rule":"ClusterRole With Pod Exec Created","condition":"kevt and (role or clusterrole) and kcreate and ka.req.role.rules.resources intersects (\"pods/exec\")","desc":"Detect any attempt to create a Role/ClusterRole that can exec to pods","output":"Created Role/ClusterRole with pod exec privileges (user=%ka.user.name role=%ka.target.name resource=%ka.target.resource rules=%ka.req.role.rules)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:pod:dcc0caa97588ee058c2fcd764e5f919b","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:role:29a7e96467b69a9f5a93332e29e9b0de"],"type":"rule","hash":"850e0987ba6e01744124250f0436044e"},{"file_name":"k8s_audit_rules.yaml","comment":"# The rules below this point are less discriminatory and generally\n# represent a stream of activity for a cluster. If you wish to disable\n# these events, modify the following macro.","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L465,L466","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"consider_activity_events","macro":"consider_activity_events","condition":"(k8s_audit_always_true)","tags":null,"enabled":"true","dependencies":["macro:k8s_audit_always_true:21ef6651784861fced1315889d54de4f","macro:always_true:3810a10835140916e579520fac814823"],"used_by":["macro:kactivity:c039787987aab24bf4c158446153265c"],"type":"macro","hash":"89419f9eea00ed54a7e7dc8be73546e0"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L468,L469","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"kactivity","macro":"kactivity","condition":"(kevt and consider_activity_events)","tags":null,"enabled":"true","dependencies":["macro:kevt:3d34a33c12c8213012019ec4fa8cc532","macro:consider_activity_events:89419f9eea00ed54a7e7dc8be73546e0"],"used_by":["rule:K8s Deployment Created:baa16ce306ed06c0c7b8da5cbf5887de","rule:K8s Deployment Deleted:d421240865854432544241d569a04af5","rule:K8s Service Created:ae0e582f7f7279f82e5fb8d9a43c3f17","rule:K8s Service Deleted:a00592c93ed63f631e0376c58e82ab9a","rule:K8s ConfigMap Created:497ce34a8a3ca7b1db976f491905bb5f","rule:K8s ConfigMap Deleted:250b126545e2f71142c4fa7044a47c85","rule:K8s Namespace Created:fd2791e0d74bc33826b59a6938c5acd3","rule:K8s Namespace Deleted:32d046d86731ba73014ef4a3e6982de3","rule:K8s Serviceaccount Created:94c6f61206c9d18c1414b83951f00810","rule:K8s Serviceaccount Deleted:f0c361075797201bf27630d538b63608","rule:K8s Role/Clusterrole Created:cd94b1c38e8ae883b7694d9acb7ca7ac","rule:K8s Role/Clusterrole Deleted:e1c9ad8541abd0c2288c800476f481d7","rule:K8s Role/Clusterrolebinding Created:521a132bee8b9b8c5bd252a34c418993","rule:K8s Role/Clusterrolebinding Deleted:2ea15ff6f3d99c4042add233885ee485","rule:K8s Secret Created:0cfe5113b020e988115c63966a0096e3","rule:K8s Secret Deleted:5d9fab46ecddd2256510223c81935a65","rule:K8s Secret Get Successfully:cba1130d33330a09ee9ab90e949de28d","rule:K8s Secret Get Unsuccessfully Tried:a251a766f4420908cae668f0a0c08a08","rule:Ingress Object without TLS Certificate Created:f31d97edc305ecc002c782965508c07c"],"type":"macro","hash":"c039787987aab24bf4c158446153265c"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L471,L477","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Deployment Created","rule":"K8s Deployment Created","condition":"(kactivity and kcreate and deployment and response_successful)","desc":"Detect any attempt to create a deployment","output":"K8s Deployment Created (user=%ka.user.name deployment=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:deployment:06e5c0d0f9eabd9525e5f9dc4f6f37cf","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"baa16ce306ed06c0c7b8da5cbf5887de"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L479,L485","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Deployment Deleted","rule":"K8s Deployment Deleted","condition":"(kactivity and kdelete and deployment and response_successful)","desc":"Detect any attempt to delete a deployment","output":"K8s Deployment Deleted (user=%ka.user.name deployment=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:deployment:06e5c0d0f9eabd9525e5f9dc4f6f37cf","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"d421240865854432544241d569a04af5"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L487,L493","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Service Created","rule":"K8s Service Created","condition":"(kactivity and kcreate and service and response_successful)","desc":"Detect any attempt to create a service","output":"K8s Service Created (user=%ka.user.name service=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:service:aaabf0d39951f3e6c3e8a7911df524c2","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"ae0e582f7f7279f82e5fb8d9a43c3f17"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L495,L501","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Service Deleted","rule":"K8s Service Deleted","condition":"(kactivity and kdelete and service and response_successful)","desc":"Detect any attempt to delete a service","output":"K8s Service Deleted (user=%ka.user.name service=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:service:aaabf0d39951f3e6c3e8a7911df524c2","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"a00592c93ed63f631e0376c58e82ab9a"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L503,L509","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s ConfigMap Created","rule":"K8s ConfigMap Created","condition":"(kactivity and kcreate and configmap and response_successful)","desc":"Detect any attempt to create a configmap","output":"K8s ConfigMap Created (user=%ka.user.name configmap=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:configmap:0eda34eee3148f7899d7ef2d7f1b0238","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"497ce34a8a3ca7b1db976f491905bb5f"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L511,L517","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s ConfigMap Deleted","rule":"K8s ConfigMap Deleted","condition":"(kactivity and kdelete and configmap and response_successful)","desc":"Detect any attempt to delete a configmap","output":"K8s ConfigMap Deleted (user=%ka.user.name configmap=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:configmap:0eda34eee3148f7899d7ef2d7f1b0238","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"250b126545e2f71142c4fa7044a47c85"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L519,L525","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Namespace Created","rule":"K8s Namespace Created","condition":"(kactivity and kcreate and namespace and response_successful)","desc":"Detect any attempt to create a namespace","output":"K8s Namespace Created (user=%ka.user.name namespace=%ka.target.name resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:namespace:89801e9e98979062e84647433a8ed3e9","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"fd2791e0d74bc33826b59a6938c5acd3"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L527,L533","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Namespace Deleted","rule":"K8s Namespace Deleted","condition":"(kactivity and non_system_user and kdelete and namespace and response_successful)","desc":"Detect any attempt to delete a namespace","output":"K8s Namespace Deleted (user=%ka.user.name namespace=%ka.target.name resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:non_system_user:ea1dd8f878301676703a9f8cae5270c7","list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:namespace:89801e9e98979062e84647433a8ed3e9","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"32d046d86731ba73014ef4a3e6982de3"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L535,L541","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Serviceaccount Created","rule":"K8s Serviceaccount Created","condition":"(kactivity and kcreate and serviceaccount and response_successful)","desc":"Detect any attempt to create a service account","output":"K8s Serviceaccount Created (user=%ka.user.name serviceaccount=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:service:aaabf0d39951f3e6c3e8a7911df524c2","list:serviceaccount:618c2280ccb9083ae6152f4eaec58a86","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"94c6f61206c9d18c1414b83951f00810"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L543,L549","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Serviceaccount Deleted","rule":"K8s Serviceaccount Deleted","condition":"(kactivity and kdelete and serviceaccount and response_successful)","desc":"Detect any attempt to delete a service account","output":"K8s Serviceaccount Deleted (user=%ka.user.name serviceaccount=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:service:aaabf0d39951f3e6c3e8a7911df524c2","list:serviceaccount:618c2280ccb9083ae6152f4eaec58a86","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"f0c361075797201bf27630d538b63608"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L551,L557","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Role/Clusterrole Created","rule":"K8s Role/Clusterrole Created","condition":"(kactivity and kcreate and (clusterrole or role) and response_successful)","desc":"Detect any attempt to create a cluster role/role","output":"K8s Cluster Role Created (user=%ka.user.name role=%ka.target.name resource=%ka.target.resource rules=%ka.req.role.rules resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:role:29a7e96467b69a9f5a93332e29e9b0de","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"cd94b1c38e8ae883b7694d9acb7ca7ac"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L559,L565","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Role/Clusterrole Deleted","rule":"K8s Role/Clusterrole Deleted","condition":"(kactivity and kdelete and (clusterrole or role) and response_successful)","desc":"Detect any attempt to delete a cluster role/role","output":"K8s Cluster Role Deleted (user=%ka.user.name role=%ka.target.name resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:role:29a7e96467b69a9f5a93332e29e9b0de","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"e1c9ad8541abd0c2288c800476f481d7"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L567,L573","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Role/Clusterrolebinding Created","rule":"K8s Role/Clusterrolebinding Created","condition":"(kactivity and kcreate and clusterrolebinding and response_successful)","desc":"Detect any attempt to create a clusterrolebinding","output":"K8s Cluster Role Binding Created (user=%ka.user.name binding=%ka.target.name resource=%ka.target.resource subjects=%ka.req.binding.subjects role=%ka.req.binding.role resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:clusterrolebinding:7c84785a0576aca333974b46f1be8056","list:role:29a7e96467b69a9f5a93332e29e9b0de","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"521a132bee8b9b8c5bd252a34c418993"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L575,L581","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Role/Clusterrolebinding Deleted","rule":"K8s Role/Clusterrolebinding Deleted","condition":"(kactivity and kdelete and clusterrolebinding and response_successful)","desc":"Detect any attempt to delete a clusterrolebinding","output":"K8s Cluster Role Binding Deleted (user=%ka.user.name binding=%ka.target.name resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:clusterrole:e094bcef29e4ca88c66ca030934e97a8","list:clusterrolebinding:7c84785a0576aca333974b46f1be8056","list:role:29a7e96467b69a9f5a93332e29e9b0de","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"2ea15ff6f3d99c4042add233885ee485"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L583,L589","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Secret Created","rule":"K8s Secret Created","condition":"(kactivity and kcreate and secret and ka.target.namespace!=kube-system and non_system_user and response_successful)","desc":"Detect any attempt to create a secret. Service account tokens are excluded.","output":"K8s Secret Created (user=%ka.user.name secret=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:non_system_user:ea1dd8f878301676703a9f8cae5270c7","list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:secret:5ebe2294ecd0e0f08eab7690d2a6ee69","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"0cfe5113b020e988115c63966a0096e3"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L591,L597","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Secret Deleted","rule":"K8s Secret Deleted","condition":"(kactivity and kdelete and secret and ka.target.namespace!=kube-system and non_system_user and response_successful)","desc":"Detect any attempt to delete a secret. Service account tokens are excluded.","output":"K8s Secret Deleted (user=%ka.user.name secret=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"INFO","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:non_system_user:ea1dd8f878301676703a9f8cae5270c7","list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kdelete:c0bbea75a56d965e6085f0f12ec2d5d9","list:secret:5ebe2294ecd0e0f08eab7690d2a6ee69","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"5d9fab46ecddd2256510223c81935a65"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L599,L609","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Secret Get Successfully","rule":"K8s Secret Get Successfully","condition":"secret and kget and kactivity and response_successful\n","desc":"Detect any attempt to get a secret. Service account tokens are excluded.\n","output":"K8s Secret Get Successfully (user=%ka.user.name secret=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"ERROR","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kget:1551c63ba750fc9be9eebe12e7007d58","list:secret:5ebe2294ecd0e0f08eab7690d2a6ee69","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"cba1130d33330a09ee9ab90e949de28d"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L611,L621","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"K8s Secret Get Unsuccessfully Tried","rule":"K8s Secret Get Unsuccessfully Tried","condition":"secret and kget and kactivity and not response_successful\n","desc":"Detect an unsuccessful attempt to get the secret. Service account tokens are excluded.\n","output":"K8s Secret Get Unsuccessfully Tried (user=%ka.user.name secret=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kget:1551c63ba750fc9be9eebe12e7007d58","list:secret:5ebe2294ecd0e0f08eab7690d2a6ee69","list:kactivity:c039787987aab24bf4c158446153265c"],"type":"rule","hash":"a251a766f4420908cae668f0a0c08a08"},{"file_name":"k8s_audit_rules.yaml","comment":"# This rule generally matches all events, and as a result is disabled\n# by default. If you wish to enable these events, modify the\n# following macro.\n#  condition: (jevt.rawtime exists)","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L627,L628","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"consider_all_events","macro":"consider_all_events","condition":"(k8s_audit_never_true)","tags":null,"enabled":"true","dependencies":["macro:k8s_audit_never_true:9a704dd4f5279b6d5619cb257258825a","macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["macro:kall:49eca81243ca4a3913e6eeb4ced49ab4"],"type":"macro","hash":"38d89891d1f279c05021c92e24eee45a"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L630,L631","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"kall","macro":"kall","condition":"(kevt and consider_all_events)","tags":null,"enabled":"true","dependencies":["macro:kevt:3d34a33c12c8213012019ec4fa8cc532","macro:consider_all_events:38d89891d1f279c05021c92e24eee45a"],"used_by":["rule:All K8s Audit Events:b75a7e2bc66eb128e92ce522de7bec02"],"type":"macro","hash":"49eca81243ca4a3913e6eeb4ced49ab4"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L633,L639","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"All K8s Audit Events","rule":"All K8s Audit Events","condition":"kall","desc":"Match all K8s Audit Events","output":"K8s Audit Event received (user=%ka.user.name verb=%ka.verb uri=%ka.uri obj=%jevt.obj)","priority":"DEBUG","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kall:49eca81243ca4a3913e6eeb4ced49ab4"],"type":"rule","hash":"b75a7e2bc66eb128e92ce522de7bec02"},{"file_name":"k8s_audit_rules.yaml","comment":"# This macro disables following rule, change to k8s_audit_never_true to enable it","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L643,L644","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"allowed_full_admin_users","macro":"allowed_full_admin_users","condition":"(k8s_audit_always_true)","tags":null,"enabled":"true","dependencies":["macro:k8s_audit_always_true:21ef6651784861fced1315889d54de4f","macro:always_true:3810a10835140916e579520fac814823"],"used_by":["rule:Full K8s Administrative Access:fdc73e7ea6f6062e87e06bc3a197bbba"],"type":"macro","hash":"7b1c241c01498a54f103f3d91c24fd5f"},{"file_name":"k8s_audit_rules.yaml","comment":"# This list includes some of the default user names for an administrator in several K8s installations","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L647,L648","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"full_admin_k8s_users","list":"full_admin_k8s_users","items":["admin","kubernetes-admin","kubernetes-admin@kubernetes","kubernetes-admin@cluster.local","minikube-user"],"tags":null,"enabled":"true","used_by":["rule:Full K8s Administrative Access:fdc73e7ea6f6062e87e06bc3a197bbba"],"type":"list","hash":"ac0f6f2c7cee80830da2d588560ef529"},{"file_name":"k8s_audit_rules.yaml","comment":"# # How to test:\n# # Execute any kubectl command connected using default cluster user, as:\n# kubectl create namespace rule-test\n","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L661,L671","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Full K8s Administrative Access","rule":"Full K8s Administrative Access","condition":"kevt and non_system_user and ka.user.name in (full_admin_k8s_users) and not allowed_full_admin_users\n","desc":"Detect any k8s operation by a user name that may be an administrator with full access.","output":"K8s Operation performed by full admin user (user=%ka.user.name target=%ka.target.name/%ka.target.resource verb=%ka.verb uri=%ka.uri resp=%ka.response.code)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:non_system_user:ea1dd8f878301676703a9f8cae5270c7","list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:allowed_full_admin_users:7b1c241c01498a54f103f3d91c24fd5f","list:full_admin_k8s_users:ac0f6f2c7cee80830da2d588560ef529"],"type":"rule","hash":"fdc73e7ea6f6062e87e06bc3a197bbba"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L673,L674","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"ingress","macro":"ingress","condition":"ka.target.resource=ingresses","tags":null,"enabled":"true","used_by":["rule:Ingress Object without TLS Certificate Created:f31d97edc305ecc002c782965508c07c","macro:nginx_writing_conf:f33ce7381e87ec371ee3892c2f4d6cbc","macro:k8s_containers:d8bdacbfed1ae82231bffc00d31c49e3","macro:ingress_remote_file_copy_procs:0b484aafac3e4358917b2200ea0c3db6","rule:Launch Ingress Remote File Copy Tools in Container:bceeb580cbb40da58fb1e3045bea84a5"],"type":"macro","hash":"17f1d7a64442cda6863a4251c2eaf2ee"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L676,L677","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"ingress_tls","macro":"ingress_tls","condition":"(jevt.value[/requestObject/spec/tls] exists)","tags":null,"enabled":"true","used_by":["rule:Ingress Object without TLS Certificate Created:f31d97edc305ecc002c782965508c07c"],"type":"macro","hash":"88b4652cf5ccbf525497128da22c70d9"},{"file_name":"k8s_audit_rules.yaml","comment":"# # How to test:\n# # Create an ingress.yaml file with content:\n# apiVersion: networking.k8s.io/v1beta1\n# kind: Ingress\n# metadata:\n#   name: test-ingress\n#   annotations:\n#     nginx.ingress.kubernetes.io/rewrite-target: /\n# spec:\n#   rules:\n#   - http:\n#       paths:\n#       - path: /testpath\n#         backend:\n#           serviceName: test\n#           servicePort: 80\n# # Execute: kubectl apply -f ingress.yaml\n","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L697,L706","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Ingress Object without TLS Certificate Created","rule":"Ingress Object without TLS Certificate Created","condition":"(kactivity and kcreate and ingress and response_successful and not ingress_tls)\n","desc":"Detect any attempt to create an ingress without TLS certification.","output":"K8s Ingress Without TLS Cert Created (user=%ka.user.name ingress=%ka.target.name namespace=%ka.target.namespace resource=%ka.target.resource)\n","priority":"WARNING","source":"k8s_audit","tags":["k8s","network"],"enabled":"true","dependencies":["list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:kactivity:c039787987aab24bf4c158446153265c","list:ingress:17f1d7a64442cda6863a4251c2eaf2ee","list:ingress_tls:88b4652cf5ccbf525497128da22c70d9"],"type":"rule","hash":"f31d97edc305ecc002c782965508c07c"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L708,L709","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"node","macro":"node","condition":"ka.target.resource=nodes","tags":null,"enabled":"true","used_by":["rule:Create NodePort Service:783d7200e4293a462c47478e3efe1467","rule:Untrusted Node Successfully Joined the Cluster:35e82364277453c3ce626b5f5c3585fc","rule:Untrusted Node Unsuccessfully Tried to Join the Cluster:3d7bdfd28a7d480013104a5ef2723a57","macro:countly_writing_nginx_conf:9f036fc92d9d76325370070d05d88fb7","macro:calico_writing_envvars:a1d9219fdd79e0c59e841ab828134502","macro:calico_writing_conf:fb5d431d5974e4f9d0fa2072d97d0b35","macro:openshift_writing_conf:df511403cf15d1a11797346f6cf6efd0","macro:calico_node:0c80dcb500a0a30309af5fd40e9971fa","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","macro:known_root_conditions:c3eb88c06b723b2c8512606e49498c5d","rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61","macro:possibly_node_in_container:513181c67b31a65f5956a1911a700134","macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f","rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15","macro:openshift_image:a963c49d809c7db284d12a2020ad26b8","rule:Unexpected K8s NodePort Connection:102da798591e75d1c7fc9ec3e9370169"],"type":"macro","hash":"36c4536996ca5615dcf9911f068786dc"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L711,L712","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"allow_all_k8s_nodes","macro":"allow_all_k8s_nodes","condition":"(k8s_audit_always_true)","tags":null,"enabled":"true","dependencies":["macro:k8s_audit_always_true:21ef6651784861fced1315889d54de4f","macro:always_true:3810a10835140916e579520fac814823"],"used_by":["rule:Untrusted Node Successfully Joined the Cluster:35e82364277453c3ce626b5f5c3585fc","rule:Untrusted Node Unsuccessfully Tried to Join the Cluster:3d7bdfd28a7d480013104a5ef2723a57"],"type":"macro","hash":"dcfaad7a677bccbcaee9df174560a2af"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L714,L715","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"allowed_k8s_nodes","list":"allowed_k8s_nodes","tags":null,"enabled":"true","used_by":["rule:Untrusted Node Successfully Joined the Cluster:35e82364277453c3ce626b5f5c3585fc","rule:Untrusted Node Unsuccessfully Tried to Join the Cluster:3d7bdfd28a7d480013104a5ef2723a57"],"type":"list","hash":"8a35ef2aa9204abef6798f14eb17ab4e"},{"file_name":"k8s_audit_rules.yaml","comment":"# # How to test:\n# # Create a Falco monitored cluster with Kops\n# # Increase the number of minimum nodes with:\n# kops edit ig nodes\n# kops apply --yes\n","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L723,L735","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Untrusted Node Successfully Joined the Cluster","rule":"Untrusted Node Successfully Joined the Cluster","condition":"kevt and node and kcreate and response_successful and not allow_all_k8s_nodes and not ka.target.name in (allowed_k8s_nodes)\n","desc":"Detect a node successfully joined the cluster outside of the list of allowed nodes.\n","output":"Node not in allowed list successfully joined the cluster (user=%ka.user.name node=%ka.target.name resource=%ka.target.resource)","priority":"ERROR","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:node:36c4536996ca5615dcf9911f068786dc","list:allow_all_k8s_nodes:dcfaad7a677bccbcaee9df174560a2af","list:allowed_k8s_nodes:8a35ef2aa9204abef6798f14eb17ab4e"],"type":"rule","hash":"35e82364277453c3ce626b5f5c3585fc"},{"file_name":"k8s_audit_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/plugins/blob/master/plugins/k8saudit/rules/k8s_audit_rules.yaml#L737,L749","required_engine_version":"15","required_plugin_versions":[{"name":"k8saudit","version":"0.5.0"},{"name":"json","version":"0.6.0"}],"name":"Untrusted Node Unsuccessfully Tried to Join the Cluster","rule":"Untrusted Node Unsuccessfully Tried to Join the Cluster","condition":"kevt and node and kcreate and not response_successful and not allow_all_k8s_nodes and not ka.target.name in (allowed_k8s_nodes)\n","desc":"Detect an unsuccessful attempt to join the cluster for a node not in the list of allowed nodes.\n","output":"Node not in allowed list tried unsuccessfully to join the cluster  (user=%ka.user.name node=%ka.target.name reason=%ka.response.reason resource=%ka.target.resource)","priority":"WARNING","source":"k8s_audit","tags":["k8s"],"enabled":"true","dependencies":["list:kevt:3d34a33c12c8213012019ec4fa8cc532","list:response_successful:bc99c7e7262b779ed500f70e56121743","list:kcreate:37c7fc423d74cded348b39b4d2784eb4","list:node:36c4536996ca5615dcf9911f068786dc","list:allow_all_k8s_nodes:dcfaad7a677bccbcaee9df174560a2af","list:allowed_k8s_nodes:8a35ef2aa9204abef6798f14eb17ab4e"],"type":"rule","hash":"3d7bdfd28a7d480013104a5ef2723a57"},{"file_name":"falco_rules.yaml","comment":"# Information about rules tags and fields can be found here: https://falco.org/docs/rules/#tags-for-current-falco-ruleset\n# `tags` fields also include information about the type of workload inspection, Mitre Attack killchain phases and Mitre TTP code(s)\n# Mitre Attack References:\n# [1] https://attack.mitre.org/tactics/enterprise/\n# [2] https://raw.githubusercontent.com/mitre/cti/master/enterprise-attack/enterprise-attack.json\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L36,L37","required_engine_version":"13","name":"open_write","macro":"open_write","condition":"(evt.type in (open,openat,openat2) and evt.is_open_write=true and fd.typechar='f' and fd.num\u003e=0)","tags":null,"enabled":"true","used_by":["rule:Modify Shell Configuration File:1b94739671e7836a3321a1f2a3720133","rule:Schedule Cron Jobs:8dac86f3c89ab2eebddfaef6b307f842","rule:Update Package Repository:aa330ca219f2fbf3fa0b6bf13c3eb9ad","rule:Write below binary dir:03b03b01f1c97dd7200fc23d49003971","rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Write below root:160ac2096b913f3a2ab1891192cd68e4","rule:Write below rpm database:6c69bfa0636d717f06c4913931ad8d95","rule:Clear Log Activities:791121642c2a993b9c4b71e1dc53dcf4","macro:truncate_shell_history:ac78bdcd5d832a2f504b6e3ce03a6868","rule:Delete Bash History:61cb065cf149676f587b8a8205863cc9","rule:Create Hidden Files or Directories:11d6e72bcaca173e61a9239889053a84","rule:Detect release_agent File Container Escapes:d55778da6b1e973e75c07a0379882547","rule:Modify Container Entrypoint:ee4335b2203d324d5dec85969f5177c3"],"type":"macro","hash":"43a1a1a71582531905f162ae8757ecda"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L39,L40","required_engine_version":"13","name":"open_read","macro":"open_read","condition":"(evt.type in (open,openat,openat2) and evt.is_open_read=true and fd.typechar='f' and fd.num\u003e=0)","tags":null,"enabled":"true","used_by":["rule:Read Shell Configuration File:7a5c3150bd06401c28d7ffdf198cde56","rule:Directory traversal monitored file read:7c55139e8c139d003d1c3355efc40c3f","rule:Read ssh information:f7e1f0c358b9f4fb13fdb68885cf19d2","rule:Read sensitive file trusted after startup:b75aa41834466514724e394b6983a5e6","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Read environment variable from /proc files:e91c2ad7d9bb08b8cbaae183f91bf00c"],"type":"macro","hash":"fada70dac63821c34b095b962e02cb36"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L42,L43","required_engine_version":"13","name":"open_directory","macro":"open_directory","condition":"(evt.type in (open,openat,openat2) and evt.is_open_read=true and fd.typechar='d' and fd.num\u003e=0)","tags":null,"enabled":"true","used_by":["rule:Read ssh information:f7e1f0c358b9f4fb13fdb68885cf19d2"],"type":"macro","hash":"33881afcd207d86e9ec883f45c4afaf7"},{"file_name":"falco_rules.yaml","comment":"# Failed file open attempts, useful to detect threat actors making mistakes\n# https://man7.org/linux/man-pages/man3/errno.3.html\n# evt.res=ENOENT - No such file or directory\n# evt.res=EACCESS - Permission denied","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L49,L50","required_engine_version":"13","name":"open_file_failed","macro":"open_file_failed","condition":"(evt.type in (open,openat,openat2) and fd.typechar='f' and fd.num=-1 and evt.res startswith E)","tags":null,"enabled":"true","used_by":["rule:Directory traversal monitored file read:7c55139e8c139d003d1c3355efc40c3f"],"type":"macro","hash":"79b6d9042977e497bec0d62841125fa4"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L52,L53","required_engine_version":"13","name":"never_true","macro":"never_true","condition":"(evt.num=0)","tags":null,"enabled":"true","used_by":["macro:user_known_node_port_service:eef8c8cb2dddbde98acc0032c8437a1e","macro:user_known_exec_pod_activities:654a93971e99c9f7b3bb5a8614b96d7f","macro:user_known_pod_debug_activities:f680ce82ade487e7d4c6d0bcf300391a","macro:consider_all_events:38d89891d1f279c05021c92e24eee45a","macro:user_known_shell_config_modifiers:6b8f57e70346a317add4e1e9046c3660","macro:user_known_cron_jobs:e19053b1c16c7ae8df45015aafbe5355","macro:user_known_update_package_registry:9e4592918895a4946eeab7a831fd4c7c","macro:user_known_write_below_binary_dir_activities:e9327cc6148dd2254c56add6bdca831d","macro:user_known_write_monitored_dir_conditions:08d473341b14e4bbae4157a75faab7f7","macro:user_known_read_ssh_information_activities:66b9d639d9ffb5e4aec0837ef7b1a7f2","macro:user_known_write_below_etc_activities:1481c66148493216582035ff05ba2863","macro:user_known_write_below_root_activities:b1f944844634ff62884377a1e56fca2a","macro:user_known_read_sensitive_files_activities:93013fdd38f628311bbd04ebd0e01436","macro:user_known_write_rpm_database_activities:c772da1c64ba873faf57a17e5c0af342","macro:user_known_db_spawned_processes:e9782b773c4c9b7a5b5c0c30a23a0662","macro:user_known_modify_bin_dir_activities:22c60c5fe87a748d783a1bf606652cd6","macro:user_known_mkdir_bin_dir_activities:07904727e6d103f3e4cec0b46f15466d","macro:user_known_change_thread_namespace_activities:be737247cfb371d8c20ef23aab8bed09","macro:possibly_node_in_container:513181c67b31a65f5956a1911a700134","macro:possibly_parent_java_running_tomcat:ff2e34a96a3a090dab697eb7bef460f0","macro:user_trusted_containers:83dc258d4e778da799e1d75b6582f967","macro:user_privileged_containers:605f400a686e1bec4f1e18414be552c5","macro:user_sensitive_mount_containers:f0bae3b600b45943c88848d69ff0511b","macro:user_known_system_user_login:c220c191248c206685113a98cf6cc4f4","macro:user_expected_terminal_shell_in_container_conditions:506bd5cc090648cf6e9411357909e53d","macro:user_shell_container_exclusions:f0b59b425c9d3204fb50ec6e436e8cd7","macro:user_expected_system_procs_network_activity_conditions:2c633a138f025b38353d5ed0477bfd72","macro:user_known_user_management_activities:23d1a029d115829da2c3d05ddc8ba459","macro:user_known_create_files_below_dev_activities:e252bfb734f01b620917e7724e620572","macro:user_known_contact_k8s_api_server_activities:4c6ed813572d74073bccdf798a240244","macro:user_known_package_manager_in_container:e9db6635f0430b51de8b303990f927a7","macro:user_known_network_tool_activities:9b807c4e0d8ba042426b117cdced8023","macro:consider_network_tools_on_host:038f6bb7e765ebcbc1d449520d508cb5","macro:grep_more:1f162d2b9d80645c0c17e19656463e53","macro:allowed_clear_log_files:27cabc017fb347048c5906d368af02da","macro:user_known_remove_data_activities:82aeff15fb6a39dfd18eb8a0aa4490b2","macro:user_known_set_setuid_or_setgid_bit_conditions:8d6a4ea3d29f9754bb194645d6826e7e","macro:user_known_create_hidden_file_activities:c604f50751c1133a076f8194b9f04921","macro:user_known_remote_file_copy_activities:5847045134b24363470fbdeb3e4ddbdf","macro:user_known_stand_streams_redirect_activities:c2f8c69b4ec7a2b55cd5ce0381586875","macro:user_known_mount_in_privileged_containers:aeaf73de6e782cca5767eccf444dfc86","macro:user_known_ingress_remote_file_copy_activities:4e472f54aebecefce22864525e76104b"],"type":"macro","hash":"7fdab030a488289fce9f593757b50ba3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L55,L56","required_engine_version":"13","name":"always_true","macro":"always_true","condition":"(evt.num\u003e=0)","tags":null,"enabled":"true","used_by":["macro:allowed_k8s_containers:5d511025a0b51bc9c69d1f382f0d7b55","macro:consider_activity_events:89419f9eea00ed54a7e7dc8be73546e0","macro:allowed_full_admin_users:7b1c241c01498a54f103f3d91c24fd5f","macro:allow_all_k8s_nodes:dcfaad7a677bccbcaee9df174560a2af","macro:allowed_ssh_proxy_env:ee1096508e1dd9b7b7b2a990d6fd1cb5","macro:user_known_container_drift_activities:46ac0d3ff6fcf7d1fec5e687faf159f5"],"type":"macro","hash":"3810a10835140916e579520fac814823"},{"file_name":"falco_rules.yaml","comment":"# In some cases, such as dropped system call events, information about\n# the process name may be missing. For some rules that really depend\n# on the identity of the process performing an action such as opening\n# a file, etc., we require that the process name be known.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L62,L63","required_engine_version":"13","name":"proc_name_exists","macro":"proc_name_exists","condition":"(proc.name!=\"\u003cNA\u003e\")","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Write below root:160ac2096b913f3a2ab1891192cd68e4","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61","rule:PTRACE attached to process:061f25635ba16ec4c05dec23396e4a6d"],"type":"macro","hash":"453387eaa91c2ac2bd725502766ed7d3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L65,L66","required_engine_version":"13","name":"rename","macro":"rename","condition":"(evt.type in (rename, renameat, renameat2))","tags":null,"enabled":"true","used_by":["macro:modify:8f45a2644508b5282f57fe129f62d19a","rule:Modify binary dirs:da761eca8eb4f7b26076d0f4b139f079"],"type":"macro","hash":"d7fba04fc8e17bcfc603b318a85b762c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L68,L69","required_engine_version":"13","name":"mkdir","macro":"mkdir","condition":"(evt.type in (mkdir, mkdirat))","tags":null,"enabled":"true","used_by":["rule:Mkdir binary dirs:d7977f4987d5627ea9f04e1b0d946f2c","rule:Create Hidden Files or Directories:11d6e72bcaca173e61a9239889053a84"],"type":"macro","hash":"d1c89dbbd2e4ef759c37d3e0b94e7327"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L71,L72","required_engine_version":"13","name":"remove","macro":"remove","condition":"(evt.type in (rmdir, unlink, unlinkat))","tags":null,"enabled":"true","used_by":["rule:Remove Collaborator from Repository:943741810bf68993058924c0fa203405","macro:modify:8f45a2644508b5282f57fe129f62d19a","macro:clear_data_procs:d1a24b75738d164999774767fb52b175","rule:Remove Bulk Data from Disk:ee50daeb936f1d2a3ecf9211b963d206"],"type":"macro","hash":"0f6969d7052da9261e31ddb6e88c136e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L74,L75","required_engine_version":"13","name":"modify","macro":"modify","condition":"(rename or remove)","tags":null,"enabled":"true","dependencies":["macro:rename:d7fba04fc8e17bcfc603b318a85b762c","macro:remove:0f6969d7052da9261e31ddb6e88c136e"],"used_by":["rule:Create/Modify Configmap With Private Credentials:ebb29c636783c42f1280e27e47cf3e95","rule:EphemeralContainers Created:17704f4c40a6f889fa7fc1b666857271","rule:System ClusterRole Modified/Deleted:a7ed236dedc9cd9ba73e7d75c0296cbe","rule:Update Package Repository:aa330ca219f2fbf3fa0b6bf13c3eb9ad","rule:Modify binary dirs:da761eca8eb4f7b26076d0f4b139f079","macro:modify_shell_history:a4caae82528f2d3e827266ba74a3e115","rule:Delete or rename shell history:3fc83e2b9ee1f13d8fbba5e9ef385ffc","rule:Create Hidden Files or Directories:11d6e72bcaca173e61a9239889053a84"],"type":"macro","hash":"8f45a2644508b5282f57fe129f62d19a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L77,L78","required_engine_version":"13","name":"spawned_process","macro":"spawned_process","condition":"(evt.type in (execve, execveat) and evt.dir=\u003c)","tags":null,"enabled":"true","used_by":["rule:Schedule Cron Jobs:8dac86f3c89ab2eebddfaef6b307f842","macro:container_started:9c5e39660ca4df75897d1230d8dbae77","rule:DB program spawned process:a277852022c3734da76c948e8bfdfaf7","rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15","rule:System user interactive:5bdbd778450a0e3fa8c0b9c8261f5326","rule:Terminal shell in container:1a24c2ccf3a790d0c04e3858f7439ab4","rule:Program run with disallowed http proxy env:cf0f7f713bd9ca1baa7ef93da5ca1a3a","rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898","rule:Launch Package Management Process in Container:2acaeee8988b0854328b0fbe8c9cf63f","rule:Netcat Remote Code Execution in Container:b1be8adba840b7e237a11c3744fc2a3e","rule:Launch Suspicious Network Tool in Container:40dd680345890489ed62556af30c3fb2","rule:Launch Suspicious Network Tool on Host:d37b5ddbe83eb9c31c805ae5973d2553","rule:Search Private Keys or Passwords:55941ff25a7d8c6253b5a17e4ed20d30","rule:Remove Bulk Data from Disk:ee50daeb936f1d2a3ecf9211b963d206","rule:Delete Bash History:61cb065cf149676f587b8a8205863cc9","rule:Launch Remote File Copy Tools in Container:a5e84b7971a3ef1f4e58af94ed66f4a1","rule:Detect crypto miners using the Stratum protocol:b22719ac071b8de3c7e0ec92dcab21cb","rule:The docker client is executed in a container:044858ea9498fb6c38e72ced0fcd53de","rule:Linux Kernel Module Injection Detected:41258ebe4f0565b8c3c1ddd96663c1a6","rule:Container Run as Root User:353fe5313eb9fe14878f7eaae04550a3","rule:Sudo Potential Privilege Escalation:f1e70442dbd3656e78ceb11d3863b239","rule:Debugfs Launched in Privileged Container:6a074afb1d46b7c8e242bf8390fc101c","rule:Mount Launched in Privileged Container:311052adcd61d744123971225f1ccd80","rule:Launch Ingress Remote File Copy Tools in Container:bceeb580cbb40da58fb1e3045bea84a5","rule:Polkit Local Privilege Escalation Vulnerability (CVE-2021-4034):5bc83b5d4fdd9b976dabc965dfe05fee","rule:Find AWS Credentials:6f600d3da731ed8b36a42b3e6edc613a","rule:Execution from /dev/shm:d11fc15d58c80066743faeab957a1684"],"type":"macro","hash":"b684ebf37c34399a595a3791398d95b2"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L80,L81","required_engine_version":"13","name":"create_symlink","macro":"create_symlink","condition":"(evt.type in (symlink, symlinkat) and evt.dir=\u003c)","tags":null,"enabled":"true","used_by":["rule:Create Symlink Over Sensitive Files:2bcdd8e246ad13d6937576a2d5cbce01"],"type":"macro","hash":"35e03553351704bb106cfe6792249297"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L83,L84","required_engine_version":"13","name":"create_hardlink","macro":"create_hardlink","condition":"(evt.type in (link, linkat) and evt.dir=\u003c)","tags":null,"enabled":"true","used_by":["rule:Create Hardlink Over Sensitive Files:44f504a9337c5c86699a0cb02a0a355d"],"type":"macro","hash":"8793cb40375e36decc9d0527e9a044db"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L86,L87","required_engine_version":"13","name":"chmod","macro":"chmod","condition":"(evt.type in (chmod, fchmod, fchmodat) and evt.dir=\u003c)","tags":null,"enabled":"true","used_by":["rule:Set Setuid or Setgid bit:8642f04ca66468a481a4ce95f4047433","rule:Container Drift Detected (chmod):70996cf27c16da0916ae631a52ca0dd6"],"type":"macro","hash":"417e248f80c35ca0d471575a5fb951f5"},{"file_name":"falco_rules.yaml","comment":"# File categories","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L90,L91","required_engine_version":"13","name":"bin_dir","macro":"bin_dir","condition":"(fd.directory in (/bin, /sbin, /usr/bin, /usr/sbin))","tags":null,"enabled":"true","used_by":["rule:Write below binary dir:03b03b01f1c97dd7200fc23d49003971","rule:Modify binary dirs:da761eca8eb4f7b26076d0f4b139f079","rule:Mkdir binary dirs:d7977f4987d5627ea9f04e1b0d946f2c"],"type":"macro","hash":"d23b8731e3efa0dfa8e2c20d76fbe442"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L93,L94","required_engine_version":"13","name":"bin_dir_mkdir","macro":"bin_dir_mkdir","condition":"(evt.arg.path startswith /bin/ or evt.arg.path startswith /sbin/ or evt.arg.path startswith /usr/bin/ or evt.arg.path startswith /usr/sbin/)\n","tags":null,"enabled":"true","used_by":["rule:Mkdir binary dirs:d7977f4987d5627ea9f04e1b0d946f2c"],"type":"macro","hash":"f3dd593d07dba89f9350e450a35eef6b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L100,L101","required_engine_version":"13","name":"bin_dir_rename","macro":"bin_dir_rename","condition":"(evt.arg.path startswith /bin/ or evt.arg.path startswith /sbin/ or evt.arg.path startswith /usr/bin/ or evt.arg.path startswith /usr/sbin/ or evt.arg.name startswith /bin/ or evt.arg.name startswith /sbin/ or evt.arg.name startswith /usr/bin/ or evt.arg.name startswith /usr/sbin/ or evt.arg.oldpath startswith /bin/ or evt.arg.oldpath startswith /sbin/ or evt.arg.oldpath startswith /usr/bin/ or evt.arg.oldpath startswith /usr/sbin/ or evt.arg.newpath startswith /bin/ or evt.arg.newpath startswith /sbin/ or evt.arg.newpath startswith /usr/bin/ or evt.arg.newpath startswith /usr/sbin/)\n","tags":null,"enabled":"true","used_by":["rule:Modify binary dirs:da761eca8eb4f7b26076d0f4b139f079"],"type":"macro","hash":"b186b1e54a4d9e1f1c2b31f0628253db"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L119,L120","required_engine_version":"13","name":"etc_dir","macro":"etc_dir","condition":"(fd.name startswith /etc/)","tags":null,"enabled":"true","used_by":["rule:Directory traversal monitored file read:7c55139e8c139d003d1c3355efc40c3f","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"e750c953eb53022a0b566477ad6e8090"},{"file_name":"falco_rules.yaml","comment":"# This detects writes immediately below / or any write anywhere below /root","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L123,L124","required_engine_version":"13","name":"root_dir","macro":"root_dir","condition":"(fd.directory=/ or fd.name startswith /root/)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"2e9c111d3f1a2373f6f2a661b4d0d49d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L126,L127","required_engine_version":"13","name":"shell_binaries","list":"shell_binaries","items":["ash","bash","csh","ksh","sh","tcsh","zsh","dash"],"tags":null,"enabled":"true","used_by":["macro:shell_procs:8907863a6a74678a4246f35930a29fe1","rule:Modify Shell Configuration File:1b94739671e7836a3321a1f2a3720133","rule:Read Shell Configuration File:7a5c3150bd06401c28d7ffdf198cde56","rule:Directory traversal monitored file read:7c55139e8c139d003d1c3355efc40c3f","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15","rule:System procs network activity:ebe3e03115e4eb21a30e0e5b9e6a9f55"],"type":"list","hash":"af03e5f14f4aa2d1505ec180e1c58caf"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L129,L130","required_engine_version":"13","name":"ssh_binaries","list":"ssh_binaries","items":["sshd","sftp-server","ssh-agent","ssh","scp","sftp","ssh-keygen","ssh-keysign","ssh-keyscan","ssh-add"],"tags":null,"enabled":"true","used_by":["rule:Read ssh information:f7e1f0c358b9f4fb13fdb68885cf19d2"],"type":"list","hash":"ec2d0b20ba5fdce37cbef587b8e2675f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L136,L137","required_engine_version":"13","name":"shell_mgmt_binaries","list":"shell_mgmt_binaries","items":["add-shell","remove-shell"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"list","hash":"2aa25fb259f9af8c31404e0549391a25"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L139,L140","required_engine_version":"13","name":"shell_procs","macro":"shell_procs","condition":"proc.name in (shell_binaries)","tags":null,"enabled":"true","dependencies":["list:shell_binaries:af03e5f14f4aa2d1505ec180e1c58caf"],"used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15","rule:Terminal shell in container:1a24c2ccf3a790d0c04e3858f7439ab4","rule:Execution from /dev/shm:d11fc15d58c80066743faeab957a1684"],"type":"macro","hash":"8907863a6a74678a4246f35930a29fe1"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L142,L143","required_engine_version":"13","name":"coreutils_binaries","list":"coreutils_binaries","items":["truncate","sha1sum","numfmt","fmt","fold","uniq","cut","who","groups","csplit","sort","expand","printf","printenv","unlink","tee","chcon","stat","basename","split","nice","yes","whoami","sha224sum","hostid","users","stdbuf","base64","unexpand","cksum","od","paste","nproc","pathchk","sha256sum","wc","test","comm","arch","du","factor","sha512sum","md5sum","tr","runcon","env","dirname","tsort","join","shuf","install","logname","pinky","nohup","expr","pr","tty","timeout","tail","[","seq","sha384sum","nl","head","id","mkfifo","sum","dircolors","ptx","shred","tac","link","chroot","vdir","chown","touch","ls","dd","uname","true","pwd","date","chgrp","chmod","mktemp","cat","mknod","sync","ln","false","rm","mv","cp","echo","readlink","sleep","stty","mkdir","df","dir","rmdir","touch"],"tags":null,"enabled":"true","used_by":["macro:system_procs:1626c650eb514b1780d01d83b1609b2f"],"type":"list","hash":"951ddcc867d00ecc5c13e9a6796c47db"},{"file_name":"falco_rules.yaml","comment":"# dpkg -L login | grep bin | xargs ls -ld | grep -v '^d' | awk '{print $9}' | xargs -L 1 basename | tr \"\\\\n\" \",\"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L157,L158","required_engine_version":"13","name":"login_binaries","list":"login_binaries","items":["login","systemd","\"(systemd)\"","systemd-logind","su","nologin","faillog","lastlog","newgrp","sg"],"tags":null,"enabled":"true","type":"list","hash":"dedbc650e5df9d28c764ee3aedae7db9"},{"file_name":"falco_rules.yaml","comment":"# dpkg -L passwd | grep bin | xargs ls -ld | grep -v '^d' | awk '{print $9}' | xargs -L 1 basename | tr \"\\\\n\" \",\"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L164,L165","required_engine_version":"13","name":"passwd_binaries","list":"passwd_binaries","items":["shadowconfig","grpck","pwunconv","grpconv","pwck","groupmod","vipw","pwconv","useradd","newusers","cppw","chpasswd","usermod","groupadd","groupdel","grpunconv","chgpasswd","userdel","chage","chsh","gpasswd","chfn","expiry","passwd","vigr","cpgr","adduser","addgroup","deluser","delgroup"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"list","hash":"11d902c686355a4df0580d2b954301da"},{"file_name":"falco_rules.yaml","comment":"# repoquery -l shadow-utils | grep bin | xargs ls -ld | grep -v '^d' |\n#     awk '{print $9}' | xargs -L 1 basename | tr \"\\\\n\" \",\"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L174,L175","required_engine_version":"13","name":"shadowutils_binaries","list":"shadowutils_binaries","items":["chage","gpasswd","lastlog","newgrp","sg","adduser","deluser","chpasswd","groupadd","groupdel","addgroup","delgroup","groupmems","groupmod","grpck","grpconv","grpunconv","newusers","pwck","pwconv","pwunconv","useradd","userdel","usermod","vigr","vipw","unix_chkpwd"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"list","hash":"dd53fb0d2784a8a52ac3c20ab275de72"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L181,L182","required_engine_version":"13","name":"sysdigcloud_binaries","list":"sysdigcloud_binaries","items":["setup-backend","dragent","sdchecks"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"list","hash":"5cd4a552978d2b6ed446f11f8a294cbf"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L184,L185","required_engine_version":"13","name":"docker_binaries","list":"docker_binaries","items":["docker","dockerd","exe","docker-compose","docker-entrypoi","docker-runc-cur","docker-current","dockerd-current"],"tags":null,"enabled":"true","used_by":["macro:server_procs:b0b2aee9b1b742b7be027fd5c2ac590e","rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61","rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63","rule:Delete or rename shell history:3fc83e2b9ee1f13d8fbba5e9ef385ffc","macro:docker_procs:26fc5da2b4808fa032d520b261d62d9d"],"type":"list","hash":"663cca84b425c42a03acc1f2ee04be85"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L187,L188","required_engine_version":"13","name":"k8s_binaries","list":"k8s_binaries","items":["hyperkube","skydns","kube2sky","exechealthz","weave-net","loopback","bridge","openshift-sdn","openshift"],"tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"list","hash":"52eba9972841f1a5acc644f595824d65"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L190,L191","required_engine_version":"13","name":"lxd_binaries","list":"lxd_binaries","items":["lxd","lxcfs"],"tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"list","hash":"9f8fa9ebc7ba17e064657b840faf1603"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L193,L194","required_engine_version":"13","name":"http_server_binaries","list":"http_server_binaries","items":["nginx","httpd","httpd-foregroun","lighttpd","apache","apache2"],"tags":null,"enabled":"true","used_by":["macro:server_procs:b0b2aee9b1b742b7be027fd5c2ac590e"],"type":"list","hash":"61646da82f5fbac9590c38bfb846ce10"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L196,L197","required_engine_version":"13","name":"db_server_binaries","list":"db_server_binaries","items":["mysqld","postgres","sqlplus"],"tags":null,"enabled":"true","used_by":["macro:server_procs:b0b2aee9b1b742b7be027fd5c2ac590e","rule:DB program spawned process:a277852022c3734da76c948e8bfdfaf7"],"type":"list","hash":"449619792d4c73357d92287273fbd164"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L199,L200","required_engine_version":"13","name":"postgres_mgmt_binaries","list":"postgres_mgmt_binaries","items":["pg_dumpall","pg_ctl","pg_lsclusters","pg_ctlcluster"],"tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"list","hash":"983f83fafcd16f2c180fc70666c34845"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L202,L203","required_engine_version":"13","name":"nosql_server_binaries","list":"nosql_server_binaries","items":["couchdb","memcached","redis-server","rabbitmq-server","mongod"],"tags":null,"enabled":"true","type":"list","hash":"724523f554919e254cb89a80c8e74efd"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L205,L206","required_engine_version":"13","name":"gitlab_binaries","list":"gitlab_binaries","items":["gitlab-shell","gitlab-mon","gitlab-runner-b","git"],"tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"list","hash":"93a3755022112947842484415a332c0b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L208,L209","required_engine_version":"13","name":"interpreted_binaries","list":"interpreted_binaries","items":["lua","node","perl","perl5","perl6","php","python","python2","python3","ruby","tcl"],"tags":null,"enabled":"true","used_by":["macro:interpreted_procs:da079be04ff9eb76c2091349ef2a40c3"],"type":"list","hash":"1b759b731251f17c488fd348c604ab1c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L211,L212","required_engine_version":"13","name":"interpreted_procs","macro":"interpreted_procs","condition":"(proc.name in (interpreted_binaries))\n","tags":null,"enabled":"true","dependencies":["list:interpreted_binaries:1b759b731251f17c488fd348c604ab1c"],"used_by":["rule:Interpreted procs inbound network activity:692f4100b04d58b3f8aed51afb8b51cd","rule:Interpreted procs outbound network activity:f44c77a690d44b9d8004d3283a63cb92"],"type":"macro","hash":"da079be04ff9eb76c2091349ef2a40c3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L215,L216","required_engine_version":"13","name":"server_procs","macro":"server_procs","condition":"proc.name in (http_server_binaries, db_server_binaries, docker_binaries, sshd)","tags":null,"enabled":"true","dependencies":["list:docker_binaries:663cca84b425c42a03acc1f2ee04be85","list:http_server_binaries:61646da82f5fbac9590c38bfb846ce10","list:db_server_binaries:449619792d4c73357d92287273fbd164","list:docker_binaries:663cca84b425c42a03acc1f2ee04be85"],"used_by":["rule:Read sensitive file trusted after startup:b75aa41834466514724e394b6983a5e6"],"type":"macro","hash":"b0b2aee9b1b742b7be027fd5c2ac590e"},{"file_name":"falco_rules.yaml","comment":"# The explicit quotes are needed to avoid the - characters being\n# interpreted by the filter expression.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L220,L221","required_engine_version":"13","name":"rpm_binaries","list":"rpm_binaries","items":["dnf","rpm","rpmkey","yum","\"75-system-updat\"","rhsmcertd-worke","rhsmcertd","subscription-ma","repoquery","rpmkeys","rpmq","yum-cron","yum-config-mana","yum-debug-dump","abrt-action-sav","rpmdb_stat","microdnf","rhn_check","yumdb"],"tags":null,"enabled":"true","used_by":["macro:rpm_procs:4af559147e158d724c3273c0cf781a9f"],"type":"list","hash":"7ee4dcdb218ac951a864e29417a8177c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L225,L226","required_engine_version":"13","name":"openscap_rpm_binaries","list":"openscap_rpm_binaries","items":["probe_rpminfo","probe_rpmverify","probe_rpmverifyfile","probe_rpmverifypackage"],"tags":null,"enabled":"true","used_by":["macro:rpm_procs:4af559147e158d724c3273c0cf781a9f"],"type":"list","hash":"be20ee993f4afee9e24466e3049127fa"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L228,L229","required_engine_version":"13","name":"rpm_procs","macro":"rpm_procs","condition":"(proc.name in (rpm_binaries, openscap_rpm_binaries) or proc.name in (salt-call, salt-minion))","tags":null,"enabled":"true","dependencies":["list:rpm_binaries:7ee4dcdb218ac951a864e29417a8177c","list:openscap_rpm_binaries:be20ee993f4afee9e24466e3049127fa"],"used_by":["rule:Write below rpm database:6c69bfa0636d717f06c4913931ad8d95"],"type":"macro","hash":"4af559147e158d724c3273c0cf781a9f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L231,L232","required_engine_version":"13","name":"deb_binaries","list":"deb_binaries","items":["dpkg","dpkg-preconfigu","dpkg-reconfigur","dpkg-divert","apt","apt-get","aptitude","frontend","preinst","add-apt-reposit","apt-auto-remova","apt-key","apt-listchanges","unattended-upgr","apt-add-reposit","apt-cache","apt.systemd.dai"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"list","hash":"69ab88691c72177ecff691379ff122c4"},{"file_name":"falco_rules.yaml","comment":"# The truncated dpkg-preconfigu is intentional, process names are\n# truncated at the falcosecurity-libs level.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L239,L240","required_engine_version":"13","name":"package_mgmt_binaries","list":"package_mgmt_binaries","items":["rpm_binaries","deb_binaries","update-alternat","gem","npm","pip","pip3","sane-utils.post","alternatives","chef-client","apk","snapd"],"tags":null,"enabled":"true","used_by":["macro:package_mgmt_procs:a69d5abbdc29f4dde6b8ec5c7d0209d6","macro:package_mgmt_ancestor_procs:b5f7b9871403d1f16226b65c823c46de","macro:run_by_package_mgmt_binaries:330b541f474e818efb55c808d9f9ec6f","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"list","hash":"cbd791c45a9d5d51118aaf6c9ce6b934"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L242,L243","required_engine_version":"13","name":"package_mgmt_procs","macro":"package_mgmt_procs","condition":"proc.name in (package_mgmt_binaries)","tags":null,"enabled":"true","dependencies":["list:package_mgmt_binaries:cbd791c45a9d5d51118aaf6c9ce6b934"],"used_by":["rule:Update Package Repository:aa330ca219f2fbf3fa0b6bf13c3eb9ad","rule:Write below binary dir:03b03b01f1c97dd7200fc23d49003971","rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672","rule:Modify binary dirs:da761eca8eb4f7b26076d0f4b139f079","rule:Mkdir binary dirs:d7977f4987d5627ea9f04e1b0d946f2c","rule:Launch Package Management Process in Container:2acaeee8988b0854328b0fbe8c9cf63f"],"type":"macro","hash":"a69d5abbdc29f4dde6b8ec5c7d0209d6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L245,L246","required_engine_version":"13","name":"package_mgmt_ancestor_procs","macro":"package_mgmt_ancestor_procs","condition":"proc.pname in (package_mgmt_binaries) or proc.aname[2] in (package_mgmt_binaries) or proc.aname[3] in (package_mgmt_binaries) or proc.aname[4] in (package_mgmt_binaries)","tags":null,"enabled":"true","dependencies":["list:package_mgmt_binaries:cbd791c45a9d5d51118aaf6c9ce6b934"],"used_by":["rule:Update Package Repository:aa330ca219f2fbf3fa0b6bf13c3eb9ad","rule:Launch Package Management Process in Container:2acaeee8988b0854328b0fbe8c9cf63f"],"type":"macro","hash":"b5f7b9871403d1f16226b65c823c46de"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L251,L252","required_engine_version":"13","name":"coreos_write_ssh_dir","macro":"coreos_write_ssh_dir","condition":"(proc.name=update-ssh-keys and fd.name startswith /home/core/.ssh)","tags":null,"enabled":"true","used_by":["rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672"],"type":"macro","hash":"b0061811cd9141284dcf12fa0f09a835"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L254,L255","required_engine_version":"13","name":"run_by_package_mgmt_binaries","macro":"run_by_package_mgmt_binaries","condition":"proc.aname in (package_mgmt_binaries, needrestart)","tags":null,"enabled":"true","dependencies":["list:package_mgmt_binaries:cbd791c45a9d5d51118aaf6c9ce6b934"],"used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"330b541f474e818efb55c808d9f9ec6f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L257,L258","required_engine_version":"13","name":"ssl_mgmt_binaries","list":"ssl_mgmt_binaries","items":["ca-certificates"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"list","hash":"e0e9a45ab08f5ea27e6fe93ae471d074"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L260,L261","required_engine_version":"13","name":"dhcp_binaries","list":"dhcp_binaries","items":["dhclient","dhclient-script","11-dhclient"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"list","hash":"e590b0b0424c28ab433a99a955c907bb"},{"file_name":"falco_rules.yaml","comment":"# A canonical set of processes that run other programs with different\n# privileges or as a different user.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L265,L266","required_engine_version":"13","name":"userexec_binaries","list":"userexec_binaries","items":["sudo","su","suexec","critical-stack","dzdo"],"tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"list","hash":"a565f19993c396a912312fc67ef23f02"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L268,L269","required_engine_version":"13","name":"known_setuid_binaries","list":"known_setuid_binaries","items":["sshd","dbus-daemon-lau","ping","ping6","critical-stack-","pmmcli","filemng","PassengerAgent","bwrap","osdetect","nginxmng","sw-engine-fpm","start-stop-daem"],"tags":null,"enabled":"true","used_by":["rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"list","hash":"6bcf294bfeb0e3ca956e1278b8c1d47d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L275,L276","required_engine_version":"13","name":"user_mgmt_binaries","list":"user_mgmt_binaries","items":["login_binaries","passwd_binaries","shadowutils_binaries"],"tags":null,"enabled":"true","used_by":["macro:system_procs:1626c650eb514b1780d01d83b1609b2f","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"list","hash":"2b8476e193b6319359b8500841101a95"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L278,L279","required_engine_version":"13","name":"dev_creation_binaries","list":"dev_creation_binaries","items":["blkid","rename_device","update_engine","sgdisk"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Create files below dev:c1ac5692e9c9d8be0dd8c387ee3fe192"],"type":"list","hash":"2de5fcfae70913478022a9d4bd879f48"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L281,L282","required_engine_version":"13","name":"hids_binaries","list":"hids_binaries","items":["aide","aide.wrapper","update-aide.con","logcheck","syslog-summary","osqueryd","ossec-syscheckd"],"tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"list","hash":"2e2257f901952e8f1c71c6433859164d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L284,L285","required_engine_version":"13","name":"vpn_binaries","list":"vpn_binaries","items":["openvpn"],"tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"list","hash":"f977d9a09aad2ea83fffbd3a7a869c2d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L287,L288","required_engine_version":"13","name":"nomachine_binaries","list":"nomachine_binaries","items":["nxexec","nxnode.bin","nxserver.bin","nxclient.bin"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"list","hash":"be10dcfdff8f673dfb82d8bed97c68b9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L290,L291","required_engine_version":"13","name":"system_procs","macro":"system_procs","condition":"proc.name in (coreutils_binaries, user_mgmt_binaries)","tags":null,"enabled":"true","dependencies":["list:coreutils_binaries:951ddcc867d00ecc5c13e9a6796c47db","list:user_mgmt_binaries:2b8476e193b6319359b8500841101a95"],"used_by":["rule:System procs network activity:ebe3e03115e4eb21a30e0e5b9e6a9f55"],"type":"macro","hash":"1626c650eb514b1780d01d83b1609b2f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L293,L294","required_engine_version":"13","name":"mail_binaries","list":"mail_binaries","items":["sendmail","sendmail-msp","postfix","procmail","exim4","pickup","showq","mailq","dovecot","imap-login","imap","mailmng-core","pop3-login","dovecot-lda","pop3"],"tags":null,"enabled":"true","used_by":["rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"list","hash":"e80bc600472c458a1eb834ef6cc3608d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L300,L301","required_engine_version":"13","name":"mail_config_binaries","list":"mail_config_binaries","items":["update_conf","parse_mc","makemap_hash","newaliases","update_mk","update_tlsm4","update_db","update_mc","ssmtp.postinst","mailq","postalias","postfix.config.","postfix.config","postfix-script","postconf"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"list","hash":"b7be6fc7d0d3734f0bdfda0a81accc5f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L307,L308","required_engine_version":"13","name":"sensitive_file_names","list":"sensitive_file_names","items":["/etc/shadow","/etc/sudoers","/etc/pam.conf","/etc/security/pwquality.conf"],"tags":null,"enabled":"true","used_by":["macro:sensitive_files:bc813752062be252ca253cee28ddbbae","rule:Create Symlink Over Sensitive Files:2bcdd8e246ad13d6937576a2d5cbce01","rule:Create Hardlink Over Sensitive Files:44f504a9337c5c86699a0cb02a0a355d"],"type":"list","hash":"e54197be4a07891d91c98ea756ac113d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L310,L311","required_engine_version":"13","name":"sensitive_directory_names","list":"sensitive_directory_names","items":["/","/etc","/etc/","/root","/root/"],"tags":null,"enabled":"true","used_by":["rule:Create Symlink Over Sensitive Files:2bcdd8e246ad13d6937576a2d5cbce01"],"type":"list","hash":"fa2eee2cc3ead2d99ca3d4789e90621c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L313,L314","required_engine_version":"13","name":"sensitive_files","macro":"sensitive_files","condition":"fd.name startswith /etc and (fd.name in (sensitive_file_names)\n or fd.directory in (/etc/sudoers.d, /etc/pam.d))\n","tags":null,"enabled":"true","dependencies":["list:sensitive_file_names:e54197be4a07891d91c98ea756ac113d"],"used_by":["rule:Read sensitive file trusted after startup:b75aa41834466514724e394b6983a5e6","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"bc813752062be252ca253cee28ddbbae"},{"file_name":"falco_rules.yaml","comment":"# Indicates that the process is new. Currently detected using time\n# since process was started, using a threshold of 5 seconds.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L321,L322","required_engine_version":"13","name":"proc_is_new","macro":"proc_is_new","condition":"proc.duration \u003c= 5000000000","tags":null,"enabled":"true","used_by":["rule:Read sensitive file trusted after startup:b75aa41834466514724e394b6983a5e6"],"type":"macro","hash":"9bcebd514bbad53f4298328825d0d4c2"},{"file_name":"falco_rules.yaml","comment":"# Network","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L325,L326","required_engine_version":"13","name":"inbound","macro":"inbound","condition":"(((evt.type in (accept,listen) and evt.dir=\u003c) or\n  (evt.type in (recvfrom,recvmsg) and evt.dir=\u003c and\n   fd.l4proto != tcp and fd.connected=false and fd.name_changed=true)) and\n (fd.typechar = 4 or fd.typechar = 6) and\n (fd.ip != \"0.0.0.0\" and fd.net != \"127.0.0.0/8\") and\n (evt.rawres \u003e= 0 or evt.res = EINPROGRESS))\n","tags":null,"enabled":"true","used_by":["rule:Disallowed SSH Connection:d3247243209b5c0eed8058526c9888e1","rule:Unexpected inbound connection source:dd871cffb0f21f49cc20b71ea033700d","rule:System procs network activity:ebe3e03115e4eb21a30e0e5b9e6a9f55","rule:Interpreted procs inbound network activity:692f4100b04d58b3f8aed51afb8b51cd","rule:Unexpected UDP Traffic:c56289ee4fb60625edda0baff211e42b","rule:Unexpected K8s NodePort Connection:102da798591e75d1c7fc9ec3e9370169","rule:Network Connection outside Local Subnet:206cb97c10e38d639e03767466f289e0","rule:Outbound or Inbound Traffic not to Authorized Server Process and Port:157fc7053dfa89b079c6d322a0272978"],"type":"macro","hash":"a8e6fe5b9e68f30a146cefebaa7edcc3"},{"file_name":"falco_rules.yaml","comment":"# RFC1918 addresses were assigned for private network usage","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L335,L336","required_engine_version":"13","name":"rfc_1918_addresses","list":"rfc_1918_addresses","items":["\"10.0.0.0/8\"","\"172.16.0.0/12\"","\"192.168.0.0/16\""],"tags":null,"enabled":"true","used_by":["macro:outbound:b5229dfdd9136d1c772f9070f3095016","macro:net_miner_pool:b9fc9175ce3dc6b857d0b77567a05ccc","macro:network_local_subnet:7c4dcd18fe7bc3092fbc897963b579e1"],"type":"list","hash":"748492cefb06210e27885e76e1ab8f7a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L338,L339","required_engine_version":"13","name":"outbound","macro":"outbound","condition":"(((evt.type = connect and evt.dir=\u003c) or\n  (evt.type in (sendto,sendmsg) and evt.dir=\u003c and\n   fd.l4proto != tcp and fd.connected=false and fd.name_changed=true)) and\n (fd.typechar = 4 or fd.typechar = 6) and\n (fd.ip != \"0.0.0.0\" and fd.net != \"127.0.0.0/8\" and not fd.snet in (rfc_1918_addresses)) and\n (evt.rawres \u003e= 0 or evt.res = EINPROGRESS))\n","tags":null,"enabled":"true","dependencies":["list:rfc_1918_addresses:748492cefb06210e27885e76e1ab8f7a"],"used_by":["rule:Disallowed SSH Connection:d3247243209b5c0eed8058526c9888e1","rule:Unexpected outbound connection destination:8737710b2ecff31abe493a9496a76939","rule:System procs network activity:ebe3e03115e4eb21a30e0e5b9e6a9f55","rule:Interpreted procs outbound network activity:f44c77a690d44b9d8004d3283a63cb92","rule:Unexpected UDP Traffic:c56289ee4fb60625edda0baff211e42b","rule:Contact EC2 Instance Metadata Service From Container:ba11587ae5bd52a9b3873b053ab19802","rule:Contact cloud metadata service from container:8fb7d622c5da0bd431e4d6d7f7da0f9d","rule:Unexpected K8s NodePort Connection:102da798591e75d1c7fc9ec3e9370169","rule:Network Connection outside Local Subnet:206cb97c10e38d639e03767466f289e0","rule:Outbound or Inbound Traffic not to Authorized Server Process and Port:157fc7053dfa89b079c6d322a0272978","rule:Outbound Connection to C2 Servers:0d2e8a0dd3369a030f7acfaab682ad92"],"type":"macro","hash":"b5229dfdd9136d1c772f9070f3095016"},{"file_name":"falco_rules.yaml","comment":"# Very similar to inbound/outbound, but combines the tests together\n# for efficiency.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L349,L350","required_engine_version":"13","name":"inbound_outbound","macro":"inbound_outbound","condition":"((((evt.type in (accept,listen,connect) and evt.dir=\u003c)) and\n (fd.typechar = 4 or fd.typechar = 6)) and\n (fd.ip != \"0.0.0.0\" and fd.net != \"127.0.0.0/8\") and\n (evt.rawres \u003e= 0 or evt.res = EINPROGRESS))\n","tags":null,"enabled":"true","used_by":["rule:Disallowed SSH Connection:d3247243209b5c0eed8058526c9888e1","rule:System procs network activity:ebe3e03115e4eb21a30e0e5b9e6a9f55","rule:Unexpected UDP Traffic:c56289ee4fb60625edda0baff211e42b","rule:Unexpected K8s NodePort Connection:102da798591e75d1c7fc9ec3e9370169","rule:Network Connection outside Local Subnet:206cb97c10e38d639e03767466f289e0","rule:Outbound or Inbound Traffic not to Authorized Server Process and Port:157fc7053dfa89b079c6d322a0272978"],"type":"macro","hash":"5b954dcc69c9cfaf014ba8fbebce7921"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L356,L357","required_engine_version":"13","name":"ssh_port","macro":"ssh_port","condition":"fd.sport=22","tags":null,"enabled":"true","used_by":["macro:allowed_ssh_hosts:8704347e5de8e74ac6e0dd382f10e8f5","rule:Disallowed SSH Connection:d3247243209b5c0eed8058526c9888e1"],"type":"macro","hash":"f70cf716fe4abaa2e6217d870561a16c"},{"file_name":"falco_rules.yaml","comment":"# In a local/user rules file, you could override this macro to\n# enumerate the servers for which ssh connections are allowed. For\n# example, you might have a ssh gateway host for which ssh connections\n# are allowed.\n#\n# In the main falco rules file, there isn't any way to know the\n# specific hosts for which ssh access is allowed, so this macro just\n# repeats ssh_port, which effectively allows ssh from all hosts. In\n# the overridden macro, the condition would look something like\n# \"fd.sip=\"a.b.c.d\" or fd.sip=\"e.f.g.h\" or ...\"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L369,L370","required_engine_version":"13","name":"allowed_ssh_hosts","macro":"allowed_ssh_hosts","condition":"ssh_port","tags":null,"enabled":"true","dependencies":["macro:ssh_port:f70cf716fe4abaa2e6217d870561a16c"],"used_by":["rule:Disallowed SSH Connection:d3247243209b5c0eed8058526c9888e1"],"type":"macro","hash":"8704347e5de8e74ac6e0dd382f10e8f5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L372,L378","required_engine_version":"13","name":"Disallowed SSH Connection","rule":"Disallowed SSH Connection","condition":"(inbound_outbound) and ssh_port and not allowed_ssh_hosts","desc":"Detect any new ssh connection to a host other than those in an allowed group of hosts","output":"Disallowed SSH Connection (command=%proc.cmdline pid=%proc.pid connection=%fd.name user=%user.name user_loginuid=%user.loginuid container_id=%container.id image=%container.image.repository)","priority":"NOTICE","source":"syscalls","tags":["host","container","network","mitre_command_and_control","mitre_lateral_movement","T1021.004"],"enabled":"false","dependencies":["list:inbound:a8e6fe5b9e68f30a146cefebaa7edcc3","list:outbound:b5229dfdd9136d1c772f9070f3095016","list:inbound_outbound:5b954dcc69c9cfaf014ba8fbebce7921","list:ssh_port:f70cf716fe4abaa2e6217d870561a16c","list:allowed_ssh_hosts:8704347e5de8e74ac6e0dd382f10e8f5"],"type":"rule","hash":"d3247243209b5c0eed8058526c9888e1"},{"file_name":"falco_rules.yaml","comment":"# Note that this can be either individual IPs or netmasks","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L389,L390","required_engine_version":"13","name":"allowed_outbound_destination_ipaddrs","list":"allowed_outbound_destination_ipaddrs","items":["\"127.0.0.1\"","\"8.8.8.8\""],"tags":null,"enabled":"true","used_by":["rule:Unexpected outbound connection destination:8737710b2ecff31abe493a9496a76939"],"type":"list","hash":"c12b92fb4341bbce022f45d0cf732b74"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L392,L393","required_engine_version":"13","name":"allowed_outbound_destination_networks","list":"allowed_outbound_destination_networks","items":["\"127.0.0.1/8\""],"tags":null,"enabled":"true","used_by":["rule:Unexpected outbound connection destination:8737710b2ecff31abe493a9496a76939"],"type":"list","hash":"c5d2fb35132f16d6cf09e62d0d3325c9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L395,L396","required_engine_version":"13","name":"allowed_outbound_destination_domains","list":"allowed_outbound_destination_domains","items":["google.com","www.yahoo.com"],"tags":null,"enabled":"true","used_by":["rule:Unexpected outbound connection destination:8737710b2ecff31abe493a9496a76939"],"type":"list","hash":"ae8a726500563d09a3293e12b9669bf5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L398,L408","required_engine_version":"13","name":"Unexpected outbound connection destination","rule":"Unexpected outbound connection destination","condition":"outbound and not ((fd.sip in (allowed_outbound_destination_ipaddrs)) or\n (fd.snet in (allowed_outbound_destination_networks)) or\n (fd.sip.name in (allowed_outbound_destination_domains)))\n","desc":"Detect any outbound connection to a destination outside of an allowed set of ips, networks, or domain names","output":"Disallowed outbound connection destination (command=%proc.cmdline pid=%proc.pid connection=%fd.name user=%user.name user_loginuid=%user.loginuid container_id=%container.id image=%container.image.repository)","priority":"NOTICE","source":"syscalls","tags":["host","container","network","mitre_command_and_control","TA0011"],"enabled":"false","dependencies":["list:outbound:b5229dfdd9136d1c772f9070f3095016","list:allowed_outbound_destination_ipaddrs:c12b92fb4341bbce022f45d0cf732b74","list:allowed_outbound_destination_networks:c5d2fb35132f16d6cf09e62d0d3325c9","list:allowed_outbound_destination_domains:ae8a726500563d09a3293e12b9669bf5"],"type":"rule","hash":"8737710b2ecff31abe493a9496a76939"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L410,L411","required_engine_version":"13","name":"allowed_inbound_source_ipaddrs","list":"allowed_inbound_source_ipaddrs","items":["\"127.0.0.1\""],"tags":null,"enabled":"true","used_by":["rule:Unexpected inbound connection source:dd871cffb0f21f49cc20b71ea033700d"],"type":"list","hash":"e438534edc23bd0b03a66b7f2ff7b4ce"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L413,L414","required_engine_version":"13","name":"allowed_inbound_source_networks","list":"allowed_inbound_source_networks","items":["\"127.0.0.1/8\"","\"10.0.0.0/8\""],"tags":null,"enabled":"true","used_by":["rule:Unexpected inbound connection source:dd871cffb0f21f49cc20b71ea033700d"],"type":"list","hash":"b18e6f6bcbe2968bda5d0717042f285b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L416,L417","required_engine_version":"13","name":"allowed_inbound_source_domains","list":"allowed_inbound_source_domains","items":["google.com"],"tags":null,"enabled":"true","used_by":["rule:Unexpected inbound connection source:dd871cffb0f21f49cc20b71ea033700d"],"type":"list","hash":"7cce24857d861af6aefb62df36686cae"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L419,L429","required_engine_version":"13","name":"Unexpected inbound connection source","rule":"Unexpected inbound connection source","condition":"inbound and not ((fd.cip in (allowed_inbound_source_ipaddrs)) or\n (fd.cnet in (allowed_inbound_source_networks)) or\n (fd.cip.name in (allowed_inbound_source_domains)))\n","desc":"Detect any inbound connection from a source outside of an allowed set of ips, networks, or domain names","output":"Disallowed inbound connection source (command=%proc.cmdline pid=%proc.pid connection=%fd.name user=%user.name user_loginuid=%user.loginuid container_id=%container.id image=%container.image.repository)","priority":"NOTICE","source":"syscalls","tags":["host","container","network","mitre_command_and_control","TA0011"],"enabled":"false","dependencies":["list:inbound:a8e6fe5b9e68f30a146cefebaa7edcc3","list:allowed_inbound_source_ipaddrs:e438534edc23bd0b03a66b7f2ff7b4ce","list:allowed_inbound_source_networks:b18e6f6bcbe2968bda5d0717042f285b","list:allowed_inbound_source_domains:7cce24857d861af6aefb62df36686cae"],"type":"rule","hash":"dd871cffb0f21f49cc20b71ea033700d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L431,L432","required_engine_version":"13","name":"bash_config_filenames","list":"bash_config_filenames","items":[".bashrc",".bash_profile",".bash_history",".bash_login",".bash_logout",".inputrc",".profile"],"tags":null,"enabled":"true","type":"list","hash":"db913d561c87670025faa7fc7396b70c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L434,L435","required_engine_version":"13","name":"bash_config_files","list":"bash_config_files","items":["/etc/profile","/etc/bashrc"],"tags":null,"enabled":"true","type":"list","hash":"0b7b8e1f3e524019209f61ac4619a676"},{"file_name":"falco_rules.yaml","comment":"# Covers both csh and tcsh","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L438,L439","required_engine_version":"13","name":"csh_config_filenames","list":"csh_config_filenames","items":[".cshrc",".login",".logout",".history",".tcshrc",".cshdirs"],"tags":null,"enabled":"true","type":"list","hash":"a869e10df8d46cc3b09978b58aea1ed0"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L441,L442","required_engine_version":"13","name":"csh_config_files","list":"csh_config_files","items":["/etc/csh.cshrc","/etc/csh.login"],"tags":null,"enabled":"true","type":"list","hash":"91f60a0ac21cc0e0bb708943c58935b6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L444,L445","required_engine_version":"13","name":"zsh_config_filenames","list":"zsh_config_filenames","items":[".zshenv",".zprofile",".zshrc",".zlogin",".zlogout"],"tags":null,"enabled":"true","type":"list","hash":"9fefc4e5753ca35077feb17387946a7d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L447,L448","required_engine_version":"13","name":"shell_config_filenames","list":"shell_config_filenames","items":["bash_config_filenames","csh_config_filenames","zsh_config_filenames"],"tags":null,"enabled":"true","used_by":["rule:Modify Shell Configuration File:1b94739671e7836a3321a1f2a3720133","rule:Read Shell Configuration File:7a5c3150bd06401c28d7ffdf198cde56"],"type":"list","hash":"9a1cc70e3d80e9c985b9dc47127279c7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L450,L451","required_engine_version":"13","name":"shell_config_files","list":"shell_config_files","items":["bash_config_files","csh_config_files"],"tags":null,"enabled":"true","used_by":["rule:Modify Shell Configuration File:1b94739671e7836a3321a1f2a3720133","rule:Read Shell Configuration File:7a5c3150bd06401c28d7ffdf198cde56"],"type":"list","hash":"55240f881e56a7081450b9163ca1ea28"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L453,L454","required_engine_version":"13","name":"shell_config_directories","list":"shell_config_directories","items":["/etc/zsh"],"tags":null,"enabled":"true","used_by":["rule:Modify Shell Configuration File:1b94739671e7836a3321a1f2a3720133","rule:Read Shell Configuration File:7a5c3150bd06401c28d7ffdf198cde56"],"type":"list","hash":"cc7eb8ab2529db0fa344a822e8499e15"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L456,L457","required_engine_version":"13","name":"user_known_shell_config_modifiers","macro":"user_known_shell_config_modifiers","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Modify Shell Configuration File:1b94739671e7836a3321a1f2a3720133"],"type":"macro","hash":"6b8f57e70346a317add4e1e9046c3660"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L459,L473","required_engine_version":"13","name":"Modify Shell Configuration File","rule":"Modify Shell Configuration File","condition":"open_write and (fd.filename in (shell_config_filenames) or\n fd.name in (shell_config_files) or\n fd.directory in (shell_config_directories))\nand not proc.name in (shell_binaries) and not exe_running_docker_save and not user_known_shell_config_modifiers\n","desc":"Detect attempt to modify shell configuration files","output":"a shell configuration file has been modified (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid pcmdline=%proc.pcmdline file=%fd.name container_id=%container.id image=%container.image.repository)\n","priority":"WARNING","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1546.004"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:shell_binaries:af03e5f14f4aa2d1505ec180e1c58caf","list:shell_config_filenames:9a1cc70e3d80e9c985b9dc47127279c7","list:shell_config_files:55240f881e56a7081450b9163ca1ea28","list:shell_config_directories:cc7eb8ab2529db0fa344a822e8499e15","list:user_known_shell_config_modifiers:6b8f57e70346a317add4e1e9046c3660","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386"],"type":"rule","hash":"1b94739671e7836a3321a1f2a3720133"},{"file_name":"falco_rules.yaml","comment":"# This rule is not enabled by default, as there are many legitimate\n# readers of shell config files.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L478,L491","required_engine_version":"13","name":"Read Shell Configuration File","rule":"Read Shell Configuration File","condition":"open_read and (fd.filename in (shell_config_filenames) or\n fd.name in (shell_config_files) or\n fd.directory in (shell_config_directories)) and\n(not proc.name in (shell_binaries))\n","desc":"Detect attempts to read shell configuration files by non-shell programs","output":"a shell configuration file was read by a non-shell program (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name container_id=%container.id image=%container.image.repository)\n","priority":"WARNING","source":"syscalls","tags":["host","container","filesystem","mitre_discovery","T1546.004"],"enabled":"false","dependencies":["list:open_read:fada70dac63821c34b095b962e02cb36","list:shell_binaries:af03e5f14f4aa2d1505ec180e1c58caf","list:shell_config_filenames:9a1cc70e3d80e9c985b9dc47127279c7","list:shell_config_files:55240f881e56a7081450b9163ca1ea28","list:shell_config_directories:cc7eb8ab2529db0fa344a822e8499e15"],"type":"rule","hash":"7a5c3150bd06401c28d7ffdf198cde56"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L493,L494","required_engine_version":"13","name":"user_known_cron_jobs","macro":"user_known_cron_jobs","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Schedule Cron Jobs:8dac86f3c89ab2eebddfaef6b307f842"],"type":"macro","hash":"e19053b1c16c7ae8df45015aafbe5355"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L496,L508","required_engine_version":"13","name":"Schedule Cron Jobs","rule":"Schedule Cron Jobs","condition":"((open_write and fd.name startswith /etc/cron) or\n (spawned_process and proc.name = \"crontab\")) and\nnot user_known_cron_jobs\n","desc":"Detect cron jobs scheduled","output":"Cron jobs were scheduled to run (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1053.003"],"enabled":"false","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:user_known_cron_jobs:e19053b1c16c7ae8df45015aafbe5355"],"type":"rule","hash":"8dac86f3c89ab2eebddfaef6b307f842"},{"file_name":"falco_rules.yaml","comment":"# When displaying container information in the output field, use\n# %container.info, without any leading term (file=%fd.name\n# %container.info user=%user.name user_loginuid=%user.loginuid, and not file=%fd.name\n# container=%container.info user=%user.name user_loginuid=%user.loginuid). The output will change\n# based on the context and whether or not -pk/-pm/-pc was specified on\n# the command line.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L518,L519","required_engine_version":"13","name":"container","macro":"container","condition":"(container.id != host)","tags":null,"enabled":"true","used_by":["rule:Create Disallowed Pod:8d71d5de24654fe16db931fbda68825e","macro:sensitive_vol_mount:621cd5c512333ac20ba436785be6b179","rule:EphemeralContainers Created:17704f4c40a6f889fa7fc1b666857271","macro:container_started:9c5e39660ca4df75897d1230d8dbae77","macro:jboss_in_container_writing_passwd:e104575a302efede918aaae611ba6fac","macro:etcd_manager_updating_dns:b7185f0f1766ee6887147bf0d00c4500","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","macro:user_read_sensitive_file_containers:e8df79ecac70e22ac5ac4f683bb13d24","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61","macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f","rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15","macro:falco_privileged_containers:9b4ba98f48c4031d87b99b489d62ca74","macro:falco_sensitive_mount_containers:cb4f45a3a0c7e25807950729fa0583e9","rule:Launch Privileged Container:b2519a12fb87e0645a80043bd931f62f","rule:Launch Excessively Capable Container:8091ae198eef3f103d229b04597684aa","macro:sensitive_mount:0137f89a3bc9f6d0ad2b73f4f983bf40","rule:Launch Sensitive Mount Container:25f080f38071f3f9f37a2475ddee8017","rule:Launch Disallowed Container:ae4f6c0ee9508cea28f4a8b9b2034b49","rule:Terminal shell in container:1a24c2ccf3a790d0c04e3858f7439ab4","macro:known_user_in_container:068a3f594dcb9921289b7525ef804824","rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63","rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898","macro:ec2_metadata_containers:d5f0dfcd1bb7ef57fab8910ab3796682","rule:Contact EC2 Instance Metadata Service From Container:ba11587ae5bd52a9b3873b053ab19802","rule:Contact cloud metadata service from container:8fb7d622c5da0bd431e4d6d7f7da0f9d","macro:k8s_containers:d8bdacbfed1ae82231bffc00d31c49e3","rule:Contact K8S API Server From Container:d067eb11f0680c4f94e83770bd307c27","macro:nodeport_containers:d08e4abe1246be2869449a98762daa05","rule:Unexpected K8s NodePort Connection:102da798591e75d1c7fc9ec3e9370169","rule:Launch Package Management Process in Container:2acaeee8988b0854328b0fbe8c9cf63f","rule:Netcat Remote Code Execution in Container:b1be8adba840b7e237a11c3744fc2a3e","rule:Launch Suspicious Network Tool in Container:40dd680345890489ed62556af30c3fb2","rule:Launch Suspicious Network Tool on Host:d37b5ddbe83eb9c31c805ae5973d2553","macro:trusted_logging_images:321c1a70d9796565640a81b9f3701e42","rule:Launch Remote File Copy Tools in Container:a5e84b7971a3ef1f4e58af94ed66f4a1","macro:trusted_images_query_miner_domain_dns:09520dcb5b734826bb1a346b6e5d8be3","macro:user_known_k8s_client_container_parens:2fdfd506ad251627b22d33c77dee9957","rule:The docker client is executed in a container:044858ea9498fb6c38e72ced0fcd53de","rule:Packet socket created in container:59e21c1607722fe0bee894eff26d9025","rule:Network Connection outside Local Subnet:206cb97c10e38d639e03767466f289e0","rule:Outbound or Inbound Traffic not to Authorized Server Process and Port:157fc7053dfa89b079c6d322a0272978","rule:Redirect STDOUT/STDIN to Network Connection in Container:3448315ac2834f28f611653e79764663","rule:Container Drift Detected (chmod):70996cf27c16da0916ae631a52ca0dd6","rule:Container Drift Detected (open+create):e32f7f179a97e8ff06bae061e2a07e22","rule:Linux Kernel Module Injection Detected:41258ebe4f0565b8c3c1ddd96663c1a6","rule:Container Run as Root User:353fe5313eb9fe14878f7eaae04550a3","rule:Debugfs Launched in Privileged Container:6a074afb1d46b7c8e242bf8390fc101c","rule:Mount Launched in Privileged Container:311052adcd61d744123971225f1ccd80","rule:Launch Ingress Remote File Copy Tools in Container:bceeb580cbb40da58fb1e3045bea84a5","rule:Detect release_agent File Container Escapes:d55778da6b1e973e75c07a0379882547","rule:Modify Container Entrypoint:ee4335b2203d324d5dec85969f5177c3","rule:Read environment variable from /proc files:e91c2ad7d9bb08b8cbaae183f91bf00c"],"type":"macro","hash":"5f0b6ebc4bea10285ba2b8a6ce78b863"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L521,L522","required_engine_version":"13","name":"container_started","macro":"container_started","condition":"((evt.type = container or\n (spawned_process and proc.vpid=1)) and\n container.image.repository != incomplete)\n","tags":null,"enabled":"true","dependencies":["macro:spawned_process:b684ebf37c34399a595a3791398d95b2","macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["rule:Launch Privileged Container:b2519a12fb87e0645a80043bd931f62f","rule:Launch Excessively Capable Container:8091ae198eef3f103d229b04597684aa","rule:Launch Sensitive Mount Container:25f080f38071f3f9f37a2475ddee8017","rule:Launch Disallowed Container:ae4f6c0ee9508cea28f4a8b9b2034b49"],"type":"macro","hash":"9c5e39660ca4df75897d1230d8dbae77"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L527,L528","required_engine_version":"13","name":"interactive","macro":"interactive","condition":"((proc.aname=sshd and proc.name != sshd) or proc.name=systemd-logind or proc.name=login)\n","tags":null,"enabled":"true","used_by":["rule:System user interactive:5bdbd778450a0e3fa8c0b9c8261f5326"],"type":"macro","hash":"fe88c03a1958b4259f0c51d68eed3213"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L532,L533","required_engine_version":"13","name":"cron_binaries","list":"cron_binaries","items":["anacron","cron","crond","crontab"],"tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15","rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"list","hash":"6f1f66d014c874287d9333b0ee22b125"},{"file_name":"falco_rules.yaml","comment":"# https://github.com/liske/needrestart","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L536,L537","required_engine_version":"13","name":"needrestart_binaries","list":"needrestart_binaries","items":["needrestart","10-dpkg","20-rpm","30-pacman"],"tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"list","hash":"6e00b59826ab685a4964571124be5622"},{"file_name":"falco_rules.yaml","comment":"# Possible scripts run by sshkit","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L540,L541","required_engine_version":"13","name":"sshkit_script_binaries","list":"sshkit_script_binaries","items":["10_etc_sudoers.","10_passwd_group"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"list","hash":"ce44254edc701be4dd47f06f9052328d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L543,L544","required_engine_version":"13","name":"plesk_binaries","list":"plesk_binaries","items":["sw-engine","sw-engine-fpm","sw-engine-kv","filemng","f2bmng"],"tags":null,"enabled":"true","used_by":["macro:plesk_writing_keys:4da16c23c5ff08f7d7d5746a31b4c73f","macro:plesk_running_mktemp:8a74ab2db773d17eb5f84197a8845e82"],"type":"list","hash":"2bb4a140a43b81a2b7ec6a6e601a2e07"},{"file_name":"falco_rules.yaml","comment":"# System users that should never log into a system. Consider adding your own\n# service users (e.g. 'apache' or 'mysqld') here.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L548,L549","required_engine_version":"13","name":"system_users","macro":"system_users","condition":"user.name in (bin, daemon, games, lp, mail, nobody, sshd, sync, uucp, www-data)","tags":null,"enabled":"true","used_by":["rule:System user interactive:5bdbd778450a0e3fa8c0b9c8261f5326"],"type":"macro","hash":"ae2ad3d3da10c2072175ce20624812d4"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L551,L552","required_engine_version":"13","name":"httpd_writing_ssl_conf","macro":"httpd_writing_ssl_conf","condition":"(proc.pname=run-httpd and\n (proc.cmdline startswith \"sed -ri\" or proc.cmdline startswith \"sed -i\") and\n (fd.name startswith /etc/httpd/conf.d/ or fd.name startswith /etc/httpd/conf))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"7717b6e122b01d443ae2430e68910510"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L557,L558","required_engine_version":"13","name":"userhelper_writing_etc_security","macro":"userhelper_writing_etc_security","condition":"(proc.name=userhelper and fd.name startswith /etc/security)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"5b54daec63358f270e55637b64058af8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L560,L561","required_engine_version":"13","name":"ansible_running_python","macro":"ansible_running_python","condition":"(proc.name in (python, pypy, python3) and proc.cmdline contains ansible)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:Write below rpm database:6c69bfa0636d717f06c4913931ad8d95"],"type":"macro","hash":"32953f9f3a0f3f017f72d291abad0fd5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L563,L564","required_engine_version":"13","name":"python_running_chef","macro":"python_running_chef","condition":"(proc.name=python and (proc.cmdline contains yum-dump.py or proc.cmdline=\"python /usr/bin/chef-monitor.py\"))","tags":null,"enabled":"true","used_by":["rule:Write below rpm database:6c69bfa0636d717f06c4913931ad8d95"],"type":"macro","hash":"73eaeb68ecea5a4c89f0489e055d5c08"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L566,L567","required_engine_version":"13","name":"python_running_denyhosts","macro":"python_running_denyhosts","condition":"(proc.name=python and (proc.cmdline contains /usr/sbin/denyhosts or\n proc.cmdline contains /usr/local/bin/denyhosts.py))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"fc718637fdaec732d1d810a48d8d21a2"},{"file_name":"falco_rules.yaml","comment":"# Qualys seems to run a variety of shell subprocesses, at various\n# levels. This checks at a few levels without the cost of a full\n# proc.aname, which traverses the full parent hierarchy.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L575,L576","required_engine_version":"13","name":"run_by_qualys","macro":"run_by_qualys","condition":"(proc.pname=qualys-cloud-ag or\n proc.aname[2]=qualys-cloud-ag or\n proc.aname[3]=qualys-cloud-ag or\n proc.aname[4]=qualys-cloud-ag)\n","tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"macro","hash":"a778e5b0cc0d78490f59b07c87278a0f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L582,L583","required_engine_version":"13","name":"run_by_sumologic_securefiles","macro":"run_by_sumologic_securefiles","condition":"((proc.cmdline=\"usermod -a -G sumologic_collector\" or\n  proc.cmdline=\"groupadd sumologic_collector\") and\n (proc.pname=secureFiles.sh and proc.aname[2]=java))\n","tags":null,"enabled":"true","used_by":["rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"macro","hash":"7c02e7e682f4b70adfa6973fbca21120"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L588,L589","required_engine_version":"13","name":"run_by_yum","macro":"run_by_yum","condition":"((proc.pname=sh and proc.aname[2]=yum) or (proc.aname[2]=sh and proc.aname[3]=yum))","tags":null,"enabled":"true","used_by":["rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"macro","hash":"3330026229d460e4080c1843ca1aef1a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L592,L593","required_engine_version":"13","name":"run_by_ms_oms","macro":"run_by_ms_oms","condition":"(proc.aname[3] startswith omsagent- or\n proc.aname[3] startswith scx-)\n","tags":null,"enabled":"true","used_by":["rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"macro","hash":"e1538843cd208c4f97c10b5ad2d3f7b9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L597,L598","required_engine_version":"13","name":"run_by_google_accounts_daemon","macro":"run_by_google_accounts_daemon","condition":"(proc.aname[1] startswith google_accounts or\n proc.aname[2] startswith google_accounts or\n proc.aname[3] startswith google_accounts)\n","tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315","rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"macro","hash":"d6ec884ac09a5dcfa8a67fa1a5232233"},{"file_name":"falco_rules.yaml","comment":"# Chef is similar.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L604,L605","required_engine_version":"13","name":"run_by_chef","macro":"run_by_chef","condition":"(proc.aname[2]=chef_command_wr or proc.aname[3]=chef_command_wr or proc.aname[2]=chef-client or proc.aname[3]=chef-client or proc.name=chef-client)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"e3aec37896453ee7f73bca485d8c4ef1"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L609,L610","required_engine_version":"13","name":"run_by_adclient","macro":"run_by_adclient","condition":"(proc.aname[2]=adclient or proc.aname[3]=adclient or proc.aname[4]=adclient)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"b9538321da350a8ebba6eeca9441af8c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L612,L613","required_engine_version":"13","name":"run_by_centrify","macro":"run_by_centrify","condition":"(proc.aname[2]=centrify or proc.aname[3]=centrify or proc.aname[4]=centrify)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"317d5a77526cd1786085501d5e019590"},{"file_name":"falco_rules.yaml","comment":"# Also handles running semi-indirectly via scl","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L616,L617","required_engine_version":"13","name":"run_by_foreman","macro":"run_by_foreman","condition":"(user.name=foreman and\n ((proc.pname in (rake, ruby, scl) and proc.aname[5] in (tfm-rake,tfm-ruby)) or\n (proc.pname=scl and proc.aname[2] in (tfm-rake,tfm-ruby))))\n","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"d08847b65ce4993a0c38c52bab29f8b9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L622,L623","required_engine_version":"13","name":"java_running_sdjagent","macro":"java_running_sdjagent","condition":"proc.name=java and proc.cmdline contains sdjagent.jar","tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61","rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"macro","hash":"481dfc4260e33ac79bc9965859a6da56"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L625,L626","required_engine_version":"13","name":"kubelet_running_loopback","macro":"kubelet_running_loopback","condition":"(proc.pname=kubelet and proc.name=loopback)","tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"macro","hash":"d9fae580000bd7262c976a96da5ebcfa"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L628,L629","required_engine_version":"13","name":"python_mesos_marathon_scripting","macro":"python_mesos_marathon_scripting","condition":"(proc.pcmdline startswith \"python3 /marathon-lb/marathon_lb.py\")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"e1ba57442586f49f842c17f052c2c842"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L631,L632","required_engine_version":"13","name":"splunk_running_forwarder","macro":"splunk_running_forwarder","condition":"(proc.pname=splunkd and proc.cmdline startswith \"sh -c /opt/splunkforwarder\")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"a755be42eb6a029167dfccc9a0d550e8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L634,L635","required_engine_version":"13","name":"parent_supervise_running_multilog","macro":"parent_supervise_running_multilog","condition":"(proc.name=multilog and proc.pname=supervise)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"b21cbc58e8ae87e459675a159a044c55"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L637,L638","required_engine_version":"13","name":"supervise_writing_status","macro":"supervise_writing_status","condition":"(proc.name in (supervise,svc) and fd.name startswith \"/etc/sb/\")","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"6da103ad88e2609cb304cc6a45a9c68e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L640,L641","required_engine_version":"13","name":"pki_realm_writing_realms","macro":"pki_realm_writing_realms","condition":"(proc.cmdline startswith \"bash /usr/local/lib/pki/pki-realm\" and fd.name startswith /etc/pki/realms)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"01852a4c5ee43c97951446afa9e29845"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L643,L644","required_engine_version":"13","name":"htpasswd_writing_passwd","macro":"htpasswd_writing_passwd","condition":"(proc.name=htpasswd and fd.name=/etc/nginx/.htpasswd)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"6f77f31249e611d878bfe1fc7b6442e6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L646,L647","required_engine_version":"13","name":"lvprogs_writing_conf","macro":"lvprogs_writing_conf","condition":"(proc.name in (dmeventd,lvcreate,pvscan,lvs) and\n (fd.name startswith /etc/lvm/archive or\n  fd.name startswith /etc/lvm/backup or\n  fd.name startswith /etc/lvm/cache))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"82d246081a521d9cb8e300313391dfa8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L653,L654","required_engine_version":"13","name":"ovsdb_writing_openvswitch","macro":"ovsdb_writing_openvswitch","condition":"(proc.name=ovsdb-server and fd.directory=/etc/openvswitch)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"b2d310885a097b33ff0d871f1f3c0d3c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L656,L657","required_engine_version":"13","name":"perl_running_plesk","macro":"perl_running_plesk","condition":"(proc.cmdline startswith \"perl /opt/psa/admin/bin/plesk_agent_manager\" or proc.pcmdline startswith \"perl /opt/psa/admin/bin/plesk_agent_manager\")","tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"2b0e5df74d6eb443338b26da9b136f87"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L660,L661","required_engine_version":"13","name":"perl_running_updmap","macro":"perl_running_updmap","condition":"(proc.cmdline startswith \"perl /usr/bin/updmap\")","tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"589a4f8cbb574b765bb9d8f5823401e1"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L663,L664","required_engine_version":"13","name":"perl_running_centrifydc","macro":"perl_running_centrifydc","condition":"(proc.cmdline startswith \"perl /usr/share/centrifydc\")","tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"1d8351cb0ee455690fd0ad293929f012"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L666,L667","required_engine_version":"13","name":"runuser_reading_pam","macro":"runuser_reading_pam","condition":"(proc.name=runuser and fd.directory=/etc/pam.d)","tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"3aa78dff367e96705b5f16a8fd8771e9"},{"file_name":"falco_rules.yaml","comment":"# CIS Linux Benchmark program","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L670,L671","required_engine_version":"13","name":"linux_bench_reading_etc_shadow","macro":"linux_bench_reading_etc_shadow","condition":"((proc.aname[2]=linux-bench and proc.name in (awk,cut,grep)) and (fd.name=/etc/shadow or fd.directory=/etc/pam.d))","tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"33ae527a98b2b3ef94e0b006097440fd"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L676,L677","required_engine_version":"13","name":"parent_ucf_writing_conf","macro":"parent_ucf_writing_conf","condition":"(proc.pname=ucf and proc.aname[2]=frontend)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"70f4b154b854dd439720ac1d4bc64455"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L679,L680","required_engine_version":"13","name":"consul_template_writing_conf","macro":"consul_template_writing_conf","condition":"((proc.name=consul-template and fd.name startswith /etc/haproxy) or\n (proc.name=reload.sh and proc.aname[2]=consul-template and fd.name startswith /etc/ssl))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"2dfcdb71f28b194e3ec22c43e2c8615e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L684,L685","required_engine_version":"13","name":"countly_writing_nginx_conf","macro":"countly_writing_nginx_conf","condition":"(proc.cmdline startswith \"nodejs /opt/countly/bin\" and fd.name startswith /etc/nginx)","tags":null,"enabled":"true","dependencies":["macro:node:36c4536996ca5615dcf9911f068786dc"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"9f036fc92d9d76325370070d05d88fb7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L687,L688","required_engine_version":"13","name":"ms_oms_binaries","list":"ms_oms_binaries","items":["omi.postinst","omsconfig.posti","scx.postinst","omsadmin.sh","omiagent"],"tags":null,"enabled":"true","used_by":["macro:ms_oms_writing_conf:f2738c65b1491db569e64832b156a9ee"],"type":"list","hash":"6e2e333b8d6e5a41c98d7049885db9e6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L690,L691","required_engine_version":"13","name":"ms_oms_writing_conf","macro":"ms_oms_writing_conf","condition":"((proc.name in (omiagent,omsagent,in_heartbeat_r*,omsadmin.sh,PerformInventor,dsc_host)\n   or proc.pname in (ms_oms_binaries)\n   or proc.aname[2] in (ms_oms_binaries))\n and (fd.name startswith /etc/opt/omi or fd.name startswith /etc/opt/microsoft/omsagent))\n","tags":null,"enabled":"true","dependencies":["list:ms_oms_binaries:6e2e333b8d6e5a41c98d7049885db9e6"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"f2738c65b1491db569e64832b156a9ee"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L697,L698","required_engine_version":"13","name":"ms_scx_writing_conf","macro":"ms_scx_writing_conf","condition":"(proc.name in (GetLinuxOS.sh) and fd.name startswith /etc/opt/microsoft/scx)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"8a6043ec2a3e7a50cd250515c22d60b4"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L700,L701","required_engine_version":"13","name":"azure_scripts_writing_conf","macro":"azure_scripts_writing_conf","condition":"(proc.pname startswith \"bash /var/lib/waagent/\" and fd.name startswith /etc/azure)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"cd53fa26b221d483142cd4dfa1f3fb6f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L703,L704","required_engine_version":"13","name":"azure_networkwatcher_writing_conf","macro":"azure_networkwatcher_writing_conf","condition":"(proc.name in (NetworkWatcherA) and fd.name=/etc/init.d/AzureNetworkWatcherAgent)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"c2a3e488810dc8a28b0127329946eaf8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L706,L707","required_engine_version":"13","name":"couchdb_writing_conf","macro":"couchdb_writing_conf","condition":"(proc.name=beam.smp and proc.cmdline contains couchdb and fd.name startswith /etc/couchdb)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"508faea2c7a0bdad8e813f9bf5698bb7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L709,L710","required_engine_version":"13","name":"update_texmf_writing_conf","macro":"update_texmf_writing_conf","condition":"(proc.name=update-texmf and fd.name startswith /etc/texmf)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"f49be0b28965ef5c2d1fa3bf265317bf"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L712,L713","required_engine_version":"13","name":"slapadd_writing_conf","macro":"slapadd_writing_conf","condition":"(proc.name=slapadd and fd.name startswith /etc/ldap)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"7d6b890322d361fbc828a93304a2450e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L715,L716","required_engine_version":"13","name":"openldap_writing_conf","macro":"openldap_writing_conf","condition":"(proc.pname=run-openldap.sh and fd.name startswith /etc/openldap)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"9f5ee55505c0b31fbfd6556343cc2c5a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L718,L719","required_engine_version":"13","name":"ucpagent_writing_conf","macro":"ucpagent_writing_conf","condition":"(proc.name=apiserver and container.image.repository=docker/ucp-agent and fd.name=/etc/authorization_config.cfg)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"2572465a9fd53c70a26f6e87b70267bb"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L721,L722","required_engine_version":"13","name":"iscsi_writing_conf","macro":"iscsi_writing_conf","condition":"(proc.name=iscsiadm and fd.name startswith /etc/iscsi)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"560f8cfa3cb01ba4c67a54ab0006a07b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L724,L725","required_engine_version":"13","name":"istio_writing_conf","macro":"istio_writing_conf","condition":"(proc.name=pilot-agent and fd.name startswith /etc/istio)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"67a1b2bc6b0ef2f677d05a2a2d5351d6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L727,L728","required_engine_version":"13","name":"symantec_writing_conf","macro":"symantec_writing_conf","condition":"((proc.name=symcfgd and fd.name startswith /etc/symantec) or\n (proc.name=navdefutil and fd.name=/etc/symc-defutils.conf))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"9cfb24ca20d7b9d3b5ce575ff8234278"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L732,L733","required_engine_version":"13","name":"liveupdate_writing_conf","macro":"liveupdate_writing_conf","condition":"(proc.cmdline startswith \"java LiveUpdate\" and fd.name in (/etc/liveupdate.conf, /etc/Product.Catalog.JavaLiveUpdate))","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"e4c9b34ef4563531a648d2d56a06651f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L735,L736","required_engine_version":"13","name":"rancher_agent","macro":"rancher_agent","condition":"(proc.name=agent and container.image.repository contains \"rancher/agent\")","tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"macro","hash":"7e51aa1b4e43b0fbcf3f497f19d31ee6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L738,L739","required_engine_version":"13","name":"rancher_network_manager","macro":"rancher_network_manager","condition":"(proc.name=rancher-bridge and container.image.repository contains \"rancher/network-manager\")","tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"macro","hash":"66300ea84d87d0be9404127579c110e8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L741,L742","required_engine_version":"13","name":"sosreport_writing_files","macro":"sosreport_writing_files","condition":"(proc.name=urlgrabber-ext- and proc.aname[3]=sosreport and\n (fd.name startswith /etc/pkt/nssdb or fd.name startswith /etc/pki/nssdb))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"bf1147eeb6acc741699e7491043b7f76"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L746,L747","required_engine_version":"13","name":"pkgmgmt_progs_writing_pki","macro":"pkgmgmt_progs_writing_pki","condition":"(proc.name=urlgrabber-ext- and proc.pname in (yum, yum-cron, repoquery) and\n (fd.name startswith /etc/pkt/nssdb or fd.name startswith /etc/pki/nssdb))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"ff9f2c85b3bcbae333e2aef5592cdd5c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L751,L752","required_engine_version":"13","name":"update_ca_trust_writing_pki","macro":"update_ca_trust_writing_pki","condition":"(proc.pname=update-ca-trust and proc.name=trust and fd.name startswith /etc/pki)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"72ae981865076595ab733f6186c786dd"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L754,L755","required_engine_version":"13","name":"brandbot_writing_os_release","macro":"brandbot_writing_os_release","condition":"proc.name=brandbot and fd.name=/etc/os-release","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"1d4ce89967a2889d5b5ef1859927bef8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L757,L758","required_engine_version":"13","name":"selinux_writing_conf","macro":"selinux_writing_conf","condition":"(proc.name in (semodule,genhomedircon,sefcontext_comp) and fd.name startswith /etc/selinux)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"ed2fd71ea501c9fd97255024435b7639"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L760,L761","required_engine_version":"13","name":"veritas_binaries","list":"veritas_binaries","items":["vxconfigd","sfcache","vxclustadm","vxdctl","vxprint","vxdmpadm","vxdisk","vxdg","vxassist","vxtune"],"tags":null,"enabled":"true","used_by":["macro:veritas_progs:2c0c8010c4e0e4adb53d4dec2e5be024"],"type":"list","hash":"c5a2d9d80f115c32b97159687ff6af1d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L763,L764","required_engine_version":"13","name":"veritas_driver_script","macro":"veritas_driver_script","condition":"(proc.cmdline startswith \"perl /opt/VRTSsfmh/bin/mh_driver.pl\")","tags":null,"enabled":"true","used_by":["macro:veritas_progs:2c0c8010c4e0e4adb53d4dec2e5be024","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"289a40694621cf340ededcb65e4c6d3b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L766,L767","required_engine_version":"13","name":"veritas_progs","macro":"veritas_progs","condition":"(proc.name in (veritas_binaries) or veritas_driver_script)","tags":null,"enabled":"true","dependencies":["list:veritas_binaries:c5a2d9d80f115c32b97159687ff6af1d","macro:veritas_driver_script:289a40694621cf340ededcb65e4c6d3b"],"used_by":["macro:veritas_writing_config:42f6753f53d60fcb82cd743a945acdc6"],"type":"macro","hash":"2c0c8010c4e0e4adb53d4dec2e5be024"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L769,L770","required_engine_version":"13","name":"veritas_writing_config","macro":"veritas_writing_config","condition":"(veritas_progs and (fd.name startswith /etc/vx or fd.name startswith /etc/opt/VRTS or fd.name startswith /etc/vom))","tags":null,"enabled":"true","dependencies":["macro:veritas_progs:2c0c8010c4e0e4adb53d4dec2e5be024"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"42f6753f53d60fcb82cd743a945acdc6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L772,L773","required_engine_version":"13","name":"nginx_writing_conf","macro":"nginx_writing_conf","condition":"(proc.name in (nginx,nginx-ingress-c,nginx-ingress) and (fd.name startswith /etc/nginx or fd.name startswith /etc/ingress-controller))","tags":null,"enabled":"true","dependencies":["macro:ingress:17f1d7a64442cda6863a4251c2eaf2ee"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"f33ce7381e87ec371ee3892c2f4d6cbc"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L775,L776","required_engine_version":"13","name":"nginx_writing_certs","macro":"nginx_writing_certs","condition":"(((proc.name=openssl and proc.pname=nginx-launch.sh) or proc.name=nginx-launch.sh) and fd.name startswith /etc/nginx/certs)\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"ba187a3491276839d106d7782397efa9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L779,L780","required_engine_version":"13","name":"chef_client_writing_conf","macro":"chef_client_writing_conf","condition":"(proc.pcmdline startswith \"chef-client /opt/gitlab\" and fd.name startswith /etc/gitlab)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"22505d8038e267d010c12cbfa342ebd7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L782,L783","required_engine_version":"13","name":"centrify_writing_krb","macro":"centrify_writing_krb","condition":"(proc.name in (adjoin,addns) and fd.name startswith /etc/krb5)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"9602026ca828beabf63e4ca0d7c1b161"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L785,L786","required_engine_version":"13","name":"sssd_writing_krb","macro":"sssd_writing_krb","condition":"(proc.name=adcli and proc.aname[2]=sssd and fd.name startswith /etc/krb5)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"2f70fea669d4fd29a1bf3f4f88cab857"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L788,L789","required_engine_version":"13","name":"cockpit_writing_conf","macro":"cockpit_writing_conf","condition":"((proc.pname=cockpit-kube-la or proc.aname[2]=cockpit-kube-la)\n and fd.name startswith /etc/cockpit)\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"2920d2837bdec4fb86f1c80206ea5ef3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L793,L794","required_engine_version":"13","name":"ipsec_writing_conf","macro":"ipsec_writing_conf","condition":"(proc.name=start-ipsec.sh and fd.directory=/etc/ipsec)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"ecf6783879f0d8b479cbf0b1ee887b3d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L796,L797","required_engine_version":"13","name":"exe_running_docker_save","macro":"exe_running_docker_save","condition":"proc.name = \"exe\" and (proc.cmdline contains \"/var/lib/docker\" or proc.cmdline contains \"/var/run/docker\") and proc.pname in (dockerd, docker, dockerd-current, docker-current)\n","tags":null,"enabled":"true","used_by":["rule:Modify Shell Configuration File:1b94739671e7836a3321a1f2a3720133","rule:Update Package Repository:aa330ca219f2fbf3fa0b6bf13c3eb9ad","rule:Write below binary dir:03b03b01f1c97dd7200fc23d49003971","rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Write below root:160ac2096b913f3a2ab1891192cd68e4","rule:Write below rpm database:6c69bfa0636d717f06c4913931ad8d95","rule:Modify binary dirs:da761eca8eb4f7b26076d0f4b139f079","rule:Mkdir binary dirs:d7977f4987d5627ea9f04e1b0d946f2c","rule:Set Setuid or Setgid bit:8642f04ca66468a481a4ce95f4047433","rule:Create Hidden Files or Directories:11d6e72bcaca173e61a9239889053a84"],"type":"macro","hash":"3870d01b317a519c449ba80c75fa2386"},{"file_name":"falco_rules.yaml","comment":"# Ideally we'd have a length check here as well but\n# filterchecks don't have operators like len()","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L805,L806","required_engine_version":"13","name":"sed_temporary_file","macro":"sed_temporary_file","condition":"(proc.name=sed and fd.name startswith \"/etc/sed\")","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"3fcd003bf8b6c46f2514dcc68b96a647"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L808,L809","required_engine_version":"13","name":"python_running_get_pip","macro":"python_running_get_pip","condition":"(proc.cmdline startswith \"python get-pip.py\")","tags":null,"enabled":"true","used_by":["rule:Write below binary dir:03b03b01f1c97dd7200fc23d49003971","rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672"],"type":"macro","hash":"21da1ad49b484af942265ce077c901a3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L811,L812","required_engine_version":"13","name":"python_running_ms_oms","macro":"python_running_ms_oms","condition":"(proc.cmdline startswith \"python /var/lib/waagent/\")","tags":null,"enabled":"true","used_by":["rule:Write below binary dir:03b03b01f1c97dd7200fc23d49003971","rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672"],"type":"macro","hash":"2da890ae6a700678d7e222629fe8a522"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L814,L815","required_engine_version":"13","name":"gugent_writing_guestagent_log","macro":"gugent_writing_guestagent_log","condition":"(proc.name=gugent and fd.name=GuestAgent.log)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"732313d0524586dd1df2b07b7f95d918"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L817,L818","required_engine_version":"13","name":"dse_writing_tmp","macro":"dse_writing_tmp","condition":"(proc.name=dse-entrypoint and fd.name=/root/tmp__)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"23d387a1dee0900bb17e8f6e09b3ec2d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L820,L821","required_engine_version":"13","name":"zap_writing_state","macro":"zap_writing_state","condition":"(proc.name=java and proc.cmdline contains \"jar /zap\" and fd.name startswith /root/.ZAP)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"2609644f099cd058da317521636e7835"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L823,L824","required_engine_version":"13","name":"airflow_writing_state","macro":"airflow_writing_state","condition":"(proc.name=airflow and fd.name startswith /root/airflow)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"11df0d8eeaffbf5bee34cad073a6ceae"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L826,L827","required_engine_version":"13","name":"rpm_writing_root_rpmdb","macro":"rpm_writing_root_rpmdb","condition":"(proc.name=rpm and fd.directory=/root/.rpmdb)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"1191964954c946fe2f5ad7d598a4bd7a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L829,L830","required_engine_version":"13","name":"maven_writing_groovy","macro":"maven_writing_groovy","condition":"(proc.name=java and proc.cmdline contains \"classpath /usr/local/apache-maven\" and fd.name startswith /root/.groovy)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"16e9f1ef0343f1839fb9b3deb7c4a98b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L832,L833","required_engine_version":"13","name":"chef_writing_conf","macro":"chef_writing_conf","condition":"(proc.name=chef-client and fd.name startswith /root/.chef)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"80fe25029c408ef56a9c70d77b9b2704"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L835,L836","required_engine_version":"13","name":"kubectl_writing_state","macro":"kubectl_writing_state","condition":"(proc.name in (kubectl,oc) and fd.name startswith /root/.kube)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"1957e60e3aaac0e9c51f09481a82a016"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L838,L839","required_engine_version":"13","name":"java_running_cassandra","macro":"java_running_cassandra","condition":"(proc.name=java and proc.cmdline contains \"cassandra.jar\")","tags":null,"enabled":"true","used_by":["macro:cassandra_writing_state:a25a8f9fb7ff7b5377a8aff172c6450d","macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"4007e4b4c8d21c944cab57c742f7544e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L841,L842","required_engine_version":"13","name":"cassandra_writing_state","macro":"cassandra_writing_state","condition":"(java_running_cassandra and fd.directory=/root/.cassandra)","tags":null,"enabled":"true","dependencies":["macro:java_running_cassandra:4007e4b4c8d21c944cab57c742f7544e"],"used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"a25a8f9fb7ff7b5377a8aff172c6450d"},{"file_name":"falco_rules.yaml","comment":"# Istio","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L845,L846","required_engine_version":"13","name":"galley_writing_state","macro":"galley_writing_state","condition":"(proc.name=galley and fd.name in (known_istio_files))","tags":null,"enabled":"true","dependencies":["list:known_istio_files:3a21006d883897d6dd31d3bc30c656b3"],"used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"c21e33532a7a909818b76a705a359186"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L848,L849","required_engine_version":"13","name":"known_istio_files","list":"known_istio_files","items":["/healthready","/healthliveness"],"tags":null,"enabled":"true","used_by":["macro:galley_writing_state:c21e33532a7a909818b76a705a359186"],"type":"list","hash":"3a21006d883897d6dd31d3bc30c656b3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L851,L852","required_engine_version":"13","name":"calico_writing_state","macro":"calico_writing_state","condition":"(proc.name=kube-controller and fd.name startswith /status.json and k8s.pod.name startswith calico)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"28f51d87e4222736e8be77a05e18897e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L854,L855","required_engine_version":"13","name":"calico_writing_envvars","macro":"calico_writing_envvars","condition":"(proc.name=start_runit and fd.name startswith \"/etc/envvars\" and container.image.repository endswith \"calico/node\")","tags":null,"enabled":"true","dependencies":["macro:node:36c4536996ca5615dcf9911f068786dc"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"a1d9219fdd79e0c59e841ab828134502"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L857,L858","required_engine_version":"13","name":"repository_files","list":"repository_files","items":["sources.list"],"tags":null,"enabled":"true","used_by":["macro:access_repositories:bd582307256c69d8ce3281d92fe6a3a0"],"type":"list","hash":"5e745ef1bd8517731d8223c490782202"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L860,L861","required_engine_version":"13","name":"repository_directories","list":"repository_directories","items":["/etc/apt/sources.list.d","/etc/yum.repos.d","/etc/apt"],"tags":null,"enabled":"true","used_by":["macro:access_repositories:bd582307256c69d8ce3281d92fe6a3a0","macro:modify_repositories:681d18f94ead757b085b96d9ce501ea8"],"type":"list","hash":"02cb4704f9f994ab8e7fe6089d04610d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L863,L864","required_engine_version":"13","name":"access_repositories","macro":"access_repositories","condition":"(fd.directory in (repository_directories) or (fd.name pmatch (repository_directories) and fd.filename in (repository_files)))","tags":null,"enabled":"true","dependencies":["list:repository_files:5e745ef1bd8517731d8223c490782202","list:repository_directories:02cb4704f9f994ab8e7fe6089d04610d"],"used_by":["rule:Update Package Repository:aa330ca219f2fbf3fa0b6bf13c3eb9ad"],"type":"macro","hash":"bd582307256c69d8ce3281d92fe6a3a0"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L868,L869","required_engine_version":"13","name":"modify_repositories","macro":"modify_repositories","condition":"(evt.arg.newpath pmatch (repository_directories))","tags":null,"enabled":"true","dependencies":["list:repository_directories:02cb4704f9f994ab8e7fe6089d04610d"],"used_by":["rule:Update Package Repository:aa330ca219f2fbf3fa0b6bf13c3eb9ad"],"type":"macro","hash":"681d18f94ead757b085b96d9ce501ea8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L871,L872","required_engine_version":"13","name":"user_known_update_package_registry","macro":"user_known_update_package_registry","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Update Package Repository:aa330ca219f2fbf3fa0b6bf13c3eb9ad"],"type":"macro","hash":"9e4592918895a4946eeab7a831fd4c7c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L874,L886","required_engine_version":"13","name":"Update Package Repository","rule":"Update Package Repository","condition":"((open_write and access_repositories) or (modify and modify_repositories)) and not package_mgmt_procs and not package_mgmt_ancestor_procs and not exe_running_docker_save and not user_known_update_package_registry\n","desc":"Detect package repositories get updated","output":"Repository files get updated (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid pcmdline=%proc.pcmdline file=%fd.name newpath=%evt.arg.newpath container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1072"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:modify:8f45a2644508b5282f57fe129f62d19a","list:package_mgmt_procs:a69d5abbdc29f4dde6b8ec5c7d0209d6","list:package_mgmt_ancestor_procs:b5f7b9871403d1f16226b65c823c46de","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:access_repositories:bd582307256c69d8ce3281d92fe6a3a0","list:modify_repositories:681d18f94ead757b085b96d9ce501ea8","list:user_known_update_package_registry:9e4592918895a4946eeab7a831fd4c7c"],"type":"rule","hash":"aa330ca219f2fbf3fa0b6bf13c3eb9ad"},{"file_name":"falco_rules.yaml","comment":"# Users should overwrite this macro to specify conditions under which a\n# write under the binary dir is ignored. For example, it may be okay to\n# install a binary in the context of a ci/cd build.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L891,L892","required_engine_version":"13","name":"user_known_write_below_binary_dir_activities","macro":"user_known_write_below_binary_dir_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Write below binary dir:03b03b01f1c97dd7200fc23d49003971"],"type":"macro","hash":"e9327cc6148dd2254c56add6bdca831d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L894,L907","required_engine_version":"13","name":"Write below binary dir","rule":"Write below binary dir","condition":"bin_dir and evt.dir = \u003c and open_write and not package_mgmt_procs and not exe_running_docker_save and not python_running_get_pip and not python_running_ms_oms and not user_known_write_below_binary_dir_activities\n","desc":"an attempt to write to any file below a set of binary directories","output":"File below a known binary directory opened for writing (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] container_id=%container.id image=%container.image.repository)\n","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1543"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:bin_dir:d23b8731e3efa0dfa8e2c20d76fbe442","list:package_mgmt_procs:a69d5abbdc29f4dde6b8ec5c7d0209d6","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:python_running_get_pip:21da1ad49b484af942265ce077c901a3","list:python_running_ms_oms:2da890ae6a700678d7e222629fe8a522","list:user_known_write_below_binary_dir_activities:e9327cc6148dd2254c56add6bdca831d"],"type":"rule","hash":"03b03b01f1c97dd7200fc23d49003971"},{"file_name":"falco_rules.yaml","comment":"# If you'd like to generally monitor a wider set of directories on top\n# of the ones covered by the rule Write below binary dir, you can use\n# the following rule and lists.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L913,L914","required_engine_version":"13","name":"monitored_directories","list":"monitored_directories","items":["/boot","/lib","/lib64","/usr/lib","/usr/local/lib","/usr/local/sbin","/usr/local/bin","/root/.ssh"],"tags":null,"enabled":"true","used_by":["macro:monitored_dir:91ff7b477466d2d58de50a490a7a8093"],"type":"list","hash":"56738cb6512762b3030762420cf280d0"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L916,L917","required_engine_version":"13","name":"user_ssh_directory","macro":"user_ssh_directory","condition":"(fd.name contains '/.ssh/' and fd.name glob '/home/*/.ssh/*')","tags":null,"enabled":"true","used_by":["macro:google_accounts_daemon_writing_ssh:2b6db0ba0430fd8423be766536193b3c","macro:cloud_init_writing_ssh:4bf6d26e36510c3b6e49059baad4d129","macro:monitored_dir:91ff7b477466d2d58de50a490a7a8093","rule:Directory traversal monitored file read:7c55139e8c139d003d1c3355efc40c3f","rule:Read ssh information:f7e1f0c358b9f4fb13fdb68885cf19d2"],"type":"macro","hash":"2cd1d449c2270b4de4a69a70a37f69fb"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L919,L920","required_engine_version":"13","name":"directory_traversal","macro":"directory_traversal","condition":"(fd.nameraw contains '../' and fd.nameraw glob '*../*../*')","tags":null,"enabled":"true","used_by":["rule:Directory traversal monitored file read:7c55139e8c139d003d1c3355efc40c3f"],"type":"macro","hash":"72aa068e80fb98fafcad214d92ee0d2b"},{"file_name":"falco_rules.yaml","comment":"# google_accounts_(daemon)","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L923,L924","required_engine_version":"13","name":"google_accounts_daemon_writing_ssh","macro":"google_accounts_daemon_writing_ssh","condition":"(proc.name=google_accounts and user_ssh_directory)","tags":null,"enabled":"true","dependencies":["macro:user_ssh_directory:2cd1d449c2270b4de4a69a70a37f69fb"],"used_by":["rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672"],"type":"macro","hash":"2b6db0ba0430fd8423be766536193b3c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L926,L927","required_engine_version":"13","name":"cloud_init_writing_ssh","macro":"cloud_init_writing_ssh","condition":"(proc.name=cloud-init and user_ssh_directory)","tags":null,"enabled":"true","dependencies":["macro:user_ssh_directory:2cd1d449c2270b4de4a69a70a37f69fb"],"used_by":["rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672"],"type":"macro","hash":"4bf6d26e36510c3b6e49059baad4d129"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L929,L930","required_engine_version":"13","name":"mkinitramfs_writing_boot","macro":"mkinitramfs_writing_boot","condition":"(proc.pname in (mkinitramfs, update-initramf) and fd.directory=/boot)","tags":null,"enabled":"true","used_by":["macro:monitored_dir:91ff7b477466d2d58de50a490a7a8093"],"type":"macro","hash":"0369c954206c68c6675e23c2c906d9d9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L932,L933","required_engine_version":"13","name":"monitored_dir","macro":"monitored_dir","condition":"(fd.directory in (monitored_directories)\n or user_ssh_directory)\nand not mkinitramfs_writing_boot\n","tags":null,"enabled":"true","dependencies":["list:monitored_directories:56738cb6512762b3030762420cf280d0","macro:user_ssh_directory:2cd1d449c2270b4de4a69a70a37f69fb","macro:mkinitramfs_writing_boot:0369c954206c68c6675e23c2c906d9d9"],"used_by":["rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672"],"type":"macro","hash":"91ff7b477466d2d58de50a490a7a8093"},{"file_name":"falco_rules.yaml","comment":"# Add conditions to this macro (probably in a separate file,\n# overwriting this macro) to allow for specific combinations of\n# programs writing below monitored directories.\n#\n# Its default value is an expression that always is false, which\n# becomes true when the \"not ...\" in the rule is applied.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L944,L945","required_engine_version":"13","name":"user_known_write_monitored_dir_conditions","macro":"user_known_write_monitored_dir_conditions","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Write below monitored dir:311a06226782dbc56d6e23a3aa921672"],"type":"macro","hash":"08d473341b14e4bbae4157a75faab7f7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L947,L963","required_engine_version":"13","name":"Write below monitored dir","rule":"Write below monitored dir","condition":"evt.dir = \u003c and open_write and monitored_dir and not package_mgmt_procs and not coreos_write_ssh_dir and not exe_running_docker_save and not python_running_get_pip and not python_running_ms_oms and not google_accounts_daemon_writing_ssh and not cloud_init_writing_ssh and not user_known_write_monitored_dir_conditions\n","desc":"an attempt to write to any file below a set of monitored directories","output":"File below a monitored directory opened for writing (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline gparent=%proc.aname[2] container_id=%container.id image=%container.image.repository)\n","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1543"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:package_mgmt_procs:a69d5abbdc29f4dde6b8ec5c7d0209d6","list:coreos_write_ssh_dir:b0061811cd9141284dcf12fa0f09a835","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:python_running_get_pip:21da1ad49b484af942265ce077c901a3","list:python_running_ms_oms:2da890ae6a700678d7e222629fe8a522","list:google_accounts_daemon_writing_ssh:2b6db0ba0430fd8423be766536193b3c","list:cloud_init_writing_ssh:4bf6d26e36510c3b6e49059baad4d129","list:monitored_dir:91ff7b477466d2d58de50a490a7a8093","list:user_known_write_monitored_dir_conditions:08d473341b14e4bbae4157a75faab7f7"],"type":"rule","hash":"311a06226782dbc56d6e23a3aa921672"},{"file_name":"falco_rules.yaml","comment":"# ******************************************************************************\n# * \"Directory traversal monitored file read\" requires FALCO_ENGINE_VERSION 13 *\n# ******************************************************************************\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L969,L981","required_engine_version":"13","name":"Directory traversal monitored file read","rule":"Directory traversal monitored file read","condition":"(open_read or open_file_failed) and (etc_dir or user_ssh_directory or fd.name startswith /root/.ssh or fd.name contains \"id_rsa\") and directory_traversal and not proc.pname in (shell_binaries)","desc":"Web applications can be vulnerable to directory traversal attacks that allow accessing files outside of the web app's root directory (e.g. Arbitrary File Read bugs). System directories like /etc are typically accessed via absolute paths. Access patterns outside of this (here path traversal) can be regarded as suspicious. This rule includes failed file open attempts.\n","output":"Read monitored file via directory traversal (username=%user.name useruid=%user.uid user_loginuid=%user.loginuid program=%proc.name exe=%proc.exepath command=%proc.cmdline pid=%proc.pid parent=%proc.pname file=%fd.name fileraw=%fd.nameraw parent=%proc.pname gparent=%proc.aname[2] container_id=%container.id image=%container.image.repository returncode=%evt.res cwd=%proc.cwd)\n","priority":"WARNING","source":"syscalls","tags":["host","container","filesystem","mitre_discovery","mitre_exfiltration","mitre_credential_access","T1555","T1212","T1020","T1552","T1083"],"enabled":"true","dependencies":["list:open_read:fada70dac63821c34b095b962e02cb36","list:open_file_failed:79b6d9042977e497bec0d62841125fa4","list:etc_dir:e750c953eb53022a0b566477ad6e8090","list:shell_binaries:af03e5f14f4aa2d1505ec180e1c58caf","list:user_ssh_directory:2cd1d449c2270b4de4a69a70a37f69fb","list:directory_traversal:72aa068e80fb98fafcad214d92ee0d2b"],"type":"rule","hash":"7c55139e8c139d003d1c3355efc40c3f"},{"file_name":"falco_rules.yaml","comment":"# This rule is disabled by default as many system management tools\n# like ansible, etc can read these files/paths. Enable it using this macro.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L986,L987","required_engine_version":"13","name":"user_known_read_ssh_information_activities","macro":"user_known_read_ssh_information_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Read ssh information:f7e1f0c358b9f4fb13fdb68885cf19d2"],"type":"macro","hash":"66b9d639d9ffb5e4aec0837ef7b1a7f2"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L989,L1001","required_engine_version":"13","name":"Read ssh information","rule":"Read ssh information","condition":"((open_read or open_directory) and\n (user_ssh_directory or fd.name startswith /root/.ssh) and\n not user_known_read_ssh_information_activities and\n not proc.name in (ssh_binaries))\n","desc":"Any attempt to read files below ssh directories by non-ssh programs","output":"ssh-related file/directory read by non-ssh program (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline container_id=%container.id image=%container.image.repository)\n","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","mitre_discovery","T1005"],"enabled":"false","dependencies":["list:open_read:fada70dac63821c34b095b962e02cb36","list:open_directory:33881afcd207d86e9ec883f45c4afaf7","list:ssh_binaries:ec2d0b20ba5fdce37cbef587b8e2675f","list:user_ssh_directory:2cd1d449c2270b4de4a69a70a37f69fb","list:user_known_read_ssh_information_activities:66b9d639d9ffb5e4aec0837ef7b1a7f2"],"type":"rule","hash":"f7e1f0c358b9f4fb13fdb68885cf19d2"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1003,L1004","required_engine_version":"13","name":"safe_etc_dirs","list":"safe_etc_dirs","items":["/etc/cassandra","/etc/ssl/certs/java","/etc/logstash","/etc/nginx/conf.d","/etc/container_environment","/etc/hrmconfig","/etc/fluent/configs.d"],"tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"list","hash":"19f15eda5a54bfa6551c446d53bb6d7d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1006,L1007","required_engine_version":"13","name":"fluentd_writing_conf_files","macro":"fluentd_writing_conf_files","condition":"(proc.name=start-fluentd and fd.name in (/etc/fluent/fluent.conf, /etc/td-agent/td-agent.conf))","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"21b48348dea7e566495ec1d15951129d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1009,L1010","required_engine_version":"13","name":"qualys_writing_conf_files","macro":"qualys_writing_conf_files","condition":"(proc.name=qualys-cloud-ag and fd.name=/etc/qualys/cloud-agent/qagent-log.conf)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"274ba8802a00652cb183bcfc751318c9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1012,L1013","required_engine_version":"13","name":"git_writing_nssdb","macro":"git_writing_nssdb","condition":"(proc.name=git-remote-http and fd.directory=/etc/pki/nssdb)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"a02f6f8e8f04ad4d8bda39383ea0eac9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1015,L1016","required_engine_version":"13","name":"plesk_writing_keys","macro":"plesk_writing_keys","condition":"(proc.name in (plesk_binaries) and fd.name startswith /etc/sw/keys)","tags":null,"enabled":"true","dependencies":["list:plesk_binaries:2bb4a140a43b81a2b7ec6a6e601a2e07"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"4da16c23c5ff08f7d7d5746a31b4c73f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1018,L1019","required_engine_version":"13","name":"plesk_install_writing_apache_conf","macro":"plesk_install_writing_apache_conf","condition":"(proc.cmdline startswith \"bash -hB /usr/lib/plesk-9.0/services/webserver.apache configure\" and fd.name=\"/etc/apache2/apache2.conf.tmp\")","tags":null,"enabled":"true","dependencies":["macro:service:aaabf0d39951f3e6c3e8a7911df524c2"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"b1645f2efd8de69398708897f91f9684"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1022,L1023","required_engine_version":"13","name":"plesk_running_mktemp","macro":"plesk_running_mktemp","condition":"(proc.name=mktemp and proc.aname[3] in (plesk_binaries))","tags":null,"enabled":"true","dependencies":["list:plesk_binaries:2bb4a140a43b81a2b7ec6a6e601a2e07"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"8a74ab2db773d17eb5f84197a8845e82"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1025,L1026","required_engine_version":"13","name":"networkmanager_writing_resolv_conf","macro":"networkmanager_writing_resolv_conf","condition":"proc.aname[2]=nm-dispatcher and fd.name=/etc/resolv.conf","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"81b1d609f080d36d693367ea4fd9747b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1028,L1029","required_engine_version":"13","name":"add_shell_writing_shells_tmp","macro":"add_shell_writing_shells_tmp","condition":"(proc.name=add-shell and fd.name=/etc/shells.tmp)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"db49b924fa80a852f8b7cbd1c2ce3c05"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1031,L1032","required_engine_version":"13","name":"duply_writing_exclude_files","macro":"duply_writing_exclude_files","condition":"(proc.name=touch and proc.pcmdline startswith \"bash /usr/bin/duply\" and fd.name startswith \"/etc/duply\")","tags":null,"enabled":"true","dependencies":["macro:dup:0e9f1e8e40bb79e800b0cc9433830cf4"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"7e582f2eb2af9630a1c3cfd1c715fd18"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1034,L1035","required_engine_version":"13","name":"xmlcatalog_writing_files","macro":"xmlcatalog_writing_files","condition":"(proc.name=update-xmlcatal and fd.directory=/etc/xml)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"30103ce6f9bed986c1da7c3909bb9197"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1037,L1038","required_engine_version":"13","name":"datadog_writing_conf","macro":"datadog_writing_conf","condition":"((proc.cmdline startswith \"python /opt/datadog-agent\" or proc.cmdline startswith \"entrypoint.sh /entrypoint.sh datadog start\" or proc.cmdline startswith \"agent.py /opt/datadog-agent\") and fd.name startswith \"/etc/dd-agent\")","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"ab0b00093dfe41fcd2e23ba0f6ee9f3f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1043,L1044","required_engine_version":"13","name":"rancher_writing_conf","macro":"rancher_writing_conf","condition":"((proc.name in (healthcheck, lb-controller, rancher-dns)) and (container.image.repository contains \"rancher/healthcheck\" or container.image.repository contains \"rancher/lb-service-haproxy\" or container.image.repository contains \"rancher/dns\") and (fd.name startswith \"/etc/haproxy\" or fd.name startswith \"/etc/rancher-dns\"))","tags":null,"enabled":"true","dependencies":["macro:service:aaabf0d39951f3e6c3e8a7911df524c2"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"8b1f4bfa74e091fb880570e839ff8d41"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1050,L1051","required_engine_version":"13","name":"rancher_writing_root","macro":"rancher_writing_root","condition":"(proc.name=rancher-metadat and (container.image.repository contains \"rancher/metadata\" or container.image.repository contains \"rancher/lb-service-haproxy\") and fd.name startswith \"/answers.json\")","tags":null,"enabled":"true","dependencies":["macro:service:aaabf0d39951f3e6c3e8a7911df524c2"],"used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"687f66c964ff5e546b31a18570c553a2"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1055,L1056","required_engine_version":"13","name":"checkpoint_writing_state","macro":"checkpoint_writing_state","condition":"(proc.name=checkpoint and container.image.repository contains \"coreos/pod-checkpointer\" and fd.name startswith \"/etc/kubernetes\")","tags":null,"enabled":"true","dependencies":["macro:pod:dcc0caa97588ee058c2fcd764e5f919b"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"030543659efa642294c18d47aa7fcc40"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1060,L1061","required_engine_version":"13","name":"jboss_in_container_writing_passwd","macro":"jboss_in_container_writing_passwd","condition":"((proc.cmdline=\"run-java.sh /opt/jboss/container/java/run/run-java.sh\"\n  or proc.cmdline=\"run-java.sh /opt/run-java/run-java.sh\")\n and container\n and fd.name=/etc/passwd)\n","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"e104575a302efede918aaae611ba6fac"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1067,L1068","required_engine_version":"13","name":"curl_writing_pki_db","macro":"curl_writing_pki_db","condition":"(proc.name=curl and fd.directory=/etc/pki/nssdb)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"561df73ccb5172d7164ad7e42b7ffe71"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1070,L1071","required_engine_version":"13","name":"haproxy_writing_conf","macro":"haproxy_writing_conf","condition":"((proc.name in (update-haproxy-,haproxy_reload.) or proc.pname in (update-haproxy-,haproxy_reload,haproxy_reload.)) and (fd.name=/etc/openvpn/client.map or fd.name startswith /etc/haproxy))","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"b66d59f8de2e3a3f6fa9f1f9b70c3e80"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1074,L1075","required_engine_version":"13","name":"java_writing_conf","macro":"java_writing_conf","condition":"(proc.name=java and fd.name=/etc/.java/.systemPrefs/.system.lock)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"7d99db523f6d601218d16d4ebcc4b5c5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1077,L1078","required_engine_version":"13","name":"rabbitmq_writing_conf","macro":"rabbitmq_writing_conf","condition":"(proc.name=rabbitmq-server and fd.directory=/etc/rabbitmq)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"06d81ac4ca65ddadf3444e1714a51da5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1080,L1081","required_engine_version":"13","name":"rook_writing_conf","macro":"rook_writing_conf","condition":"(proc.name=toolbox.sh and container.image.repository=rook/toolbox and fd.directory=/etc/ceph)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"614afd80c1f79ead045f455f66c921a2"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1084,L1085","required_engine_version":"13","name":"httpd_writing_conf_logs","macro":"httpd_writing_conf_logs","condition":"(proc.name=httpd and fd.name startswith /etc/httpd/)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"818ee313d210d65a9dbeee107fb66d90"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1087,L1088","required_engine_version":"13","name":"mysql_writing_conf","macro":"mysql_writing_conf","condition":"((proc.name in (start-mysql.sh, run-mysqld) or proc.pname=start-mysql.sh) and\n (fd.name startswith /etc/mysql or fd.directory=/etc/my.cnf.d))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"625dd47184b82bf4bec3d566962dd430"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1092,L1093","required_engine_version":"13","name":"redis_writing_conf","macro":"redis_writing_conf","condition":"(proc.name in (run-redis, redis-launcher.) and (fd.name=/etc/redis.conf or fd.name startswith /etc/redis))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"a901edd045ee0e7597eef5fcf133043b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1096,L1097","required_engine_version":"13","name":"openvpn_writing_conf","macro":"openvpn_writing_conf","condition":"(proc.name in (openvpn,openvpn-entrypo) and fd.name startswith /etc/openvpn)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"d428826792d22085abee4a5b7fb96195"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1099,L1100","required_engine_version":"13","name":"php_handlers_writing_conf","macro":"php_handlers_writing_conf","condition":"(proc.name=php_handlers_co and fd.name=/etc/psa/php_versions.json)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"5e0d13ac7f509af8cff0ce9cb268fb0f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1102,L1103","required_engine_version":"13","name":"sed_writing_temp_file","macro":"sed_writing_temp_file","condition":"((proc.aname[3]=cron_start.sh and fd.name startswith /etc/security/sed) or\n (proc.name=sed and (fd.name startswith /etc/apt/sources.list.d/sed or\n                     fd.name startswith /etc/apt/sed or\n                     fd.name startswith /etc/apt/apt.conf.d/sed)))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"685fed60dc978304a1e497788d4d71a7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1109,L1110","required_engine_version":"13","name":"cron_start_writing_pam_env","macro":"cron_start_writing_pam_env","condition":"(proc.cmdline=\"bash /usr/sbin/start-cron\" and fd.name=/etc/security/pam_env.conf)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"a1ce9663b50cdb8d111513a092015386"},{"file_name":"falco_rules.yaml","comment":"# In some cases dpkg-reconfigur runs commands that modify /etc. Not\n# putting the full set of package management programs yet.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1114,L1115","required_engine_version":"13","name":"dpkg_scripting","macro":"dpkg_scripting","condition":"(proc.aname[2] in (dpkg-reconfigur, dpkg-preconfigu))","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"3553acf980466204b4c57a6f426865e9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1117,L1118","required_engine_version":"13","name":"ufw_writing_conf","macro":"ufw_writing_conf","condition":"(proc.name=ufw and fd.directory=/etc/ufw)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"04ade91384da94d9c65985422829393b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1120,L1121","required_engine_version":"13","name":"calico_writing_conf","macro":"calico_writing_conf","condition":"(((proc.name = calico-node) or\n  (container.image.repository=gcr.io/projectcalico-org/node and proc.name in (start_runit, cp)) or\n  (container.image.repository=gcr.io/projectcalico-org/cni and proc.name=sed))\n and fd.name startswith /etc/calico)\n","tags":null,"enabled":"true","dependencies":["macro:node:36c4536996ca5615dcf9911f068786dc"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"fb5d431d5974e4f9d0fa2072d97d0b35"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1127,L1128","required_engine_version":"13","name":"prometheus_conf_writing_conf","macro":"prometheus_conf_writing_conf","condition":"(proc.name=prometheus-conf and fd.name startswith /etc/prometheus/config_out)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"da4dd39078c116ddaf157d974182c2c3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1130,L1131","required_engine_version":"13","name":"openshift_writing_conf","macro":"openshift_writing_conf","condition":"(proc.name=oc and fd.name startswith /etc/origin/node)","tags":null,"enabled":"true","dependencies":["macro:node:36c4536996ca5615dcf9911f068786dc"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"df511403cf15d1a11797346f6cf6efd0"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1133,L1134","required_engine_version":"13","name":"keepalived_writing_conf","macro":"keepalived_writing_conf","condition":"(proc.name in (keepalived, kube-keepalived) and fd.name=/etc/keepalived/keepalived.conf)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"c5484c875db4d3a493f0c2899110e2e8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1136,L1137","required_engine_version":"13","name":"etcd_manager_updating_dns","macro":"etcd_manager_updating_dns","condition":"(container and proc.name=etcd-manager and fd.name=/etc/hosts)","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"b7185f0f1766ee6887147bf0d00c4500"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1139,L1140","required_engine_version":"13","name":"automount_using_mtab","macro":"automount_using_mtab","condition":"(proc.pname = automount and fd.name startswith /etc/mtab)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"55d040454646420d840cafa7184e1c3e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1142,L1143","required_engine_version":"13","name":"mcafee_writing_cma_d","macro":"mcafee_writing_cma_d","condition":"(proc.name=macompatsvc and fd.directory=/etc/cma.d)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"0b753f47d192cab4ca77b3f8fffd6bcc"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1145,L1146","required_engine_version":"13","name":"avinetworks_supervisor_writing_ssh","macro":"avinetworks_supervisor_writing_ssh","condition":"(proc.cmdline=\"se_supervisor.p /opt/avi/scripts/se_supervisor.py -d\" and\n  (fd.name startswith /etc/ssh/known_host_ or\n   fd.name startswith /etc/ssh/ssh_monitor_config_ or\n   fd.name startswith /etc/ssh/ssh_config_))\n","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"5104f9e306a250e9bd681bbabc24b416"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1152,L1153","required_engine_version":"13","name":"multipath_writing_conf","macro":"multipath_writing_conf","condition":"(proc.name = multipath and fd.name startswith /etc/multipath/)","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"a41f372e44d66f6251083d6a6b345835"},{"file_name":"falco_rules.yaml","comment":"# Add conditions to this macro (probably in a separate file,\n# overwriting this macro) to allow for specific combinations of\n# programs writing below specific directories below\n# /etc. fluentd_writing_conf_files is a good example to follow, as it\n# specifies both the program doing the writing as well as the specific\n# files it is allowed to modify.\n#\n# In this file, it just takes one of the programs in the base macro\n# and repeats it.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1165,L1166","required_engine_version":"13","name":"user_known_write_etc_conditions","macro":"user_known_write_etc_conditions","condition":"proc.name=confd","tags":null,"enabled":"true","used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"1048595dcb5c5925590a8ef893eeef36"},{"file_name":"falco_rules.yaml","comment":"# This is a placeholder for user to extend the whitelist for write below etc rule","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1169,L1170","required_engine_version":"13","name":"user_known_write_below_etc_activities","macro":"user_known_write_below_etc_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"macro","hash":"1481c66148493216582035ff05ba2863"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1172,L1173","required_engine_version":"13","name":"calico_node","macro":"calico_node","condition":"(container.image.repository endswith calico/node and proc.name=calico-node)","tags":null,"enabled":"true","dependencies":["macro:node:36c4536996ca5615dcf9911f068786dc"],"used_by":["macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"macro","hash":"0c80dcb500a0a30309af5fd40e9971fa"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1175,L1176","required_engine_version":"13","name":"write_etc_common","macro":"write_etc_common","condition":"etc_dir and evt.dir = \u003c and open_write and proc_name_exists and not proc.name in (passwd_binaries, shadowutils_binaries, sysdigcloud_binaries,\n                      package_mgmt_binaries, ssl_mgmt_binaries, dhcp_binaries,\n                      dev_creation_binaries, shell_mgmt_binaries,\n                      mail_config_binaries,\n                      sshkit_script_binaries,\n                      ldconfig.real, ldconfig, confd, gpg, insserv,\n                      apparmor_parser, update-mime, tzdata.config, tzdata.postinst,\n                      systemd, systemd-machine, systemd-sysuser,\n                      debconf-show, rollerd, bind9.postinst, sv,\n                      gen_resolvconf., update-ca-certi, certbot, runsv,\n                      qualys-cloud-ag, locales.postins, nomachine_binaries,\n                      adclient, certutil, crlutil, pam-auth-update, parallels_insta,\n                      openshift-launc, update-rc.d, puppet)\nand not (container and proc.cmdline in (\"cp /run/secrets/kubernetes.io/serviceaccount/ca.crt /etc/pki/ca-trust/source/anchors/openshift-ca.crt\")) and not proc.pname in (sysdigcloud_binaries, mail_config_binaries, hddtemp.postins, sshkit_script_binaries, locales.postins, deb_binaries, dhcp_binaries) and not fd.name pmatch (safe_etc_dirs) and not fd.name in (/etc/container_environment.sh, /etc/container_environment.json, /etc/motd, /etc/motd.svc) and not sed_temporary_file and not exe_running_docker_save and not ansible_running_python and not python_running_denyhosts and not fluentd_writing_conf_files and not user_known_write_etc_conditions and not run_by_centrify and not run_by_adclient and not qualys_writing_conf_files and not git_writing_nssdb and not plesk_writing_keys and not plesk_install_writing_apache_conf and not plesk_running_mktemp and not networkmanager_writing_resolv_conf and not run_by_chef and not add_shell_writing_shells_tmp and not duply_writing_exclude_files and not xmlcatalog_writing_files and not parent_supervise_running_multilog and not supervise_writing_status and not pki_realm_writing_realms and not htpasswd_writing_passwd and not lvprogs_writing_conf and not ovsdb_writing_openvswitch and not datadog_writing_conf and not curl_writing_pki_db and not haproxy_writing_conf and not java_writing_conf and not dpkg_scripting and not parent_ucf_writing_conf and not rabbitmq_writing_conf and not rook_writing_conf and not php_handlers_writing_conf and not sed_writing_temp_file and not cron_start_writing_pam_env and not httpd_writing_conf_logs and not mysql_writing_conf and not openvpn_writing_conf and not consul_template_writing_conf and not countly_writing_nginx_conf and not ms_oms_writing_conf and not ms_scx_writing_conf and not azure_scripts_writing_conf and not azure_networkwatcher_writing_conf and not couchdb_writing_conf and not update_texmf_writing_conf and not slapadd_writing_conf and not symantec_writing_conf and not liveupdate_writing_conf and not sosreport_writing_files and not selinux_writing_conf and not veritas_writing_config and not nginx_writing_conf and not nginx_writing_certs and not chef_client_writing_conf and not centrify_writing_krb and not sssd_writing_krb and not cockpit_writing_conf and not ipsec_writing_conf and not httpd_writing_ssl_conf and not userhelper_writing_etc_security and not pkgmgmt_progs_writing_pki and not update_ca_trust_writing_pki and not brandbot_writing_os_release and not redis_writing_conf and not openldap_writing_conf and not ucpagent_writing_conf and not iscsi_writing_conf and not istio_writing_conf and not ufw_writing_conf and not calico_writing_conf and not calico_writing_envvars and not prometheus_conf_writing_conf and not openshift_writing_conf and not keepalived_writing_conf and not rancher_writing_conf and not checkpoint_writing_state and not jboss_in_container_writing_passwd and not etcd_manager_updating_dns and not user_known_write_below_etc_activities and not automount_using_mtab and not mcafee_writing_cma_d and not avinetworks_supervisor_writing_ssh and not multipath_writing_conf and not calico_node\n","tags":null,"enabled":"true","dependencies":["macro:service:aaabf0d39951f3e6c3e8a7911df524c2","macro:serviceaccount:618c2280ccb9083ae6152f4eaec58a86","macro:secret:5ebe2294ecd0e0f08eab7690d2a6ee69","macro:node:36c4536996ca5615dcf9911f068786dc","macro:open_write:43a1a1a71582531905f162ae8757ecda","macro:proc_name_exists:453387eaa91c2ac2bd725502766ed7d3","macro:etc_dir:e750c953eb53022a0b566477ad6e8090","list:shell_mgmt_binaries:2aa25fb259f9af8c31404e0549391a25","list:passwd_binaries:11d902c686355a4df0580d2b954301da","list:shadowutils_binaries:dd53fb0d2784a8a52ac3c20ab275de72","list:sysdigcloud_binaries:5cd4a552978d2b6ed446f11f8a294cbf","list:deb_binaries:69ab88691c72177ecff691379ff122c4","list:package_mgmt_binaries:cbd791c45a9d5d51118aaf6c9ce6b934","list:ssl_mgmt_binaries:e0e9a45ab08f5ea27e6fe93ae471d074","list:dhcp_binaries:e590b0b0424c28ab433a99a955c907bb","list:dev_creation_binaries:2de5fcfae70913478022a9d4bd879f48","list:nomachine_binaries:be10dcfdff8f673dfb82d8bed97c68b9","list:mail_config_binaries:b7be6fc7d0d3734f0bdfda0a81accc5f","macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:sshkit_script_binaries:ce44254edc701be4dd47f06f9052328d","macro:httpd_writing_ssl_conf:7717b6e122b01d443ae2430e68910510","macro:userhelper_writing_etc_security:5b54daec63358f270e55637b64058af8","macro:ansible_running_python:32953f9f3a0f3f017f72d291abad0fd5","macro:python_running_denyhosts:fc718637fdaec732d1d810a48d8d21a2","macro:run_by_chef:e3aec37896453ee7f73bca485d8c4ef1","macro:run_by_adclient:b9538321da350a8ebba6eeca9441af8c","macro:run_by_centrify:317d5a77526cd1786085501d5e019590","macro:parent_supervise_running_multilog:b21cbc58e8ae87e459675a159a044c55","macro:supervise_writing_status:6da103ad88e2609cb304cc6a45a9c68e","macro:pki_realm_writing_realms:01852a4c5ee43c97951446afa9e29845","macro:htpasswd_writing_passwd:6f77f31249e611d878bfe1fc7b6442e6","macro:lvprogs_writing_conf:82d246081a521d9cb8e300313391dfa8","macro:ovsdb_writing_openvswitch:b2d310885a097b33ff0d871f1f3c0d3c","macro:parent_ucf_writing_conf:70f4b154b854dd439720ac1d4bc64455","macro:consul_template_writing_conf:2dfcdb71f28b194e3ec22c43e2c8615e","macro:countly_writing_nginx_conf:9f036fc92d9d76325370070d05d88fb7","macro:ms_oms_writing_conf:f2738c65b1491db569e64832b156a9ee","macro:ms_scx_writing_conf:8a6043ec2a3e7a50cd250515c22d60b4","macro:azure_scripts_writing_conf:cd53fa26b221d483142cd4dfa1f3fb6f","macro:azure_networkwatcher_writing_conf:c2a3e488810dc8a28b0127329946eaf8","macro:couchdb_writing_conf:508faea2c7a0bdad8e813f9bf5698bb7","macro:update_texmf_writing_conf:f49be0b28965ef5c2d1fa3bf265317bf","macro:slapadd_writing_conf:7d6b890322d361fbc828a93304a2450e","macro:openldap_writing_conf:9f5ee55505c0b31fbfd6556343cc2c5a","macro:ucpagent_writing_conf:2572465a9fd53c70a26f6e87b70267bb","macro:iscsi_writing_conf:560f8cfa3cb01ba4c67a54ab0006a07b","macro:istio_writing_conf:67a1b2bc6b0ef2f677d05a2a2d5351d6","macro:symantec_writing_conf:9cfb24ca20d7b9d3b5ce575ff8234278","macro:liveupdate_writing_conf:e4c9b34ef4563531a648d2d56a06651f","macro:sosreport_writing_files:bf1147eeb6acc741699e7491043b7f76","macro:pkgmgmt_progs_writing_pki:ff9f2c85b3bcbae333e2aef5592cdd5c","macro:update_ca_trust_writing_pki:72ae981865076595ab733f6186c786dd","macro:brandbot_writing_os_release:1d4ce89967a2889d5b5ef1859927bef8","macro:selinux_writing_conf:ed2fd71ea501c9fd97255024435b7639","macro:veritas_writing_config:42f6753f53d60fcb82cd743a945acdc6","macro:nginx_writing_conf:f33ce7381e87ec371ee3892c2f4d6cbc","macro:nginx_writing_certs:ba187a3491276839d106d7782397efa9","macro:chef_client_writing_conf:22505d8038e267d010c12cbfa342ebd7","macro:centrify_writing_krb:9602026ca828beabf63e4ca0d7c1b161","macro:sssd_writing_krb:2f70fea669d4fd29a1bf3f4f88cab857","macro:cockpit_writing_conf:2920d2837bdec4fb86f1c80206ea5ef3","macro:ipsec_writing_conf:ecf6783879f0d8b479cbf0b1ee887b3d","macro:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","macro:sed_temporary_file:3fcd003bf8b6c46f2514dcc68b96a647","macro:calico_writing_envvars:a1d9219fdd79e0c59e841ab828134502","list:safe_etc_dirs:19f15eda5a54bfa6551c446d53bb6d7d","macro:fluentd_writing_conf_files:21b48348dea7e566495ec1d15951129d","macro:qualys_writing_conf_files:274ba8802a00652cb183bcfc751318c9","macro:git_writing_nssdb:a02f6f8e8f04ad4d8bda39383ea0eac9","macro:plesk_writing_keys:4da16c23c5ff08f7d7d5746a31b4c73f","macro:plesk_install_writing_apache_conf:b1645f2efd8de69398708897f91f9684","macro:plesk_running_mktemp:8a74ab2db773d17eb5f84197a8845e82","macro:networkmanager_writing_resolv_conf:81b1d609f080d36d693367ea4fd9747b","macro:add_shell_writing_shells_tmp:db49b924fa80a852f8b7cbd1c2ce3c05","macro:duply_writing_exclude_files:7e582f2eb2af9630a1c3cfd1c715fd18","macro:xmlcatalog_writing_files:30103ce6f9bed986c1da7c3909bb9197","macro:datadog_writing_conf:ab0b00093dfe41fcd2e23ba0f6ee9f3f","macro:rancher_writing_conf:8b1f4bfa74e091fb880570e839ff8d41","macro:checkpoint_writing_state:030543659efa642294c18d47aa7fcc40","macro:jboss_in_container_writing_passwd:e104575a302efede918aaae611ba6fac","macro:curl_writing_pki_db:561df73ccb5172d7164ad7e42b7ffe71","macro:haproxy_writing_conf:b66d59f8de2e3a3f6fa9f1f9b70c3e80","macro:java_writing_conf:7d99db523f6d601218d16d4ebcc4b5c5","macro:rabbitmq_writing_conf:06d81ac4ca65ddadf3444e1714a51da5","macro:rook_writing_conf:614afd80c1f79ead045f455f66c921a2","macro:httpd_writing_conf_logs:818ee313d210d65a9dbeee107fb66d90","macro:mysql_writing_conf:625dd47184b82bf4bec3d566962dd430","macro:redis_writing_conf:a901edd045ee0e7597eef5fcf133043b","macro:openvpn_writing_conf:d428826792d22085abee4a5b7fb96195","macro:php_handlers_writing_conf:5e0d13ac7f509af8cff0ce9cb268fb0f","macro:sed_writing_temp_file:685fed60dc978304a1e497788d4d71a7","macro:cron_start_writing_pam_env:a1ce9663b50cdb8d111513a092015386","macro:dpkg_scripting:3553acf980466204b4c57a6f426865e9","macro:ufw_writing_conf:04ade91384da94d9c65985422829393b","macro:calico_writing_conf:fb5d431d5974e4f9d0fa2072d97d0b35","macro:prometheus_conf_writing_conf:da4dd39078c116ddaf157d974182c2c3","macro:openshift_writing_conf:df511403cf15d1a11797346f6cf6efd0","macro:keepalived_writing_conf:c5484c875db4d3a493f0c2899110e2e8","macro:etcd_manager_updating_dns:b7185f0f1766ee6887147bf0d00c4500","macro:automount_using_mtab:55d040454646420d840cafa7184e1c3e","macro:mcafee_writing_cma_d:0b753f47d192cab4ca77b3f8fffd6bcc","macro:avinetworks_supervisor_writing_ssh:5104f9e306a250e9bd681bbabc24b416","macro:multipath_writing_conf:a41f372e44d66f6251083d6a6b345835","macro:user_known_write_etc_conditions:1048595dcb5c5925590a8ef893eeef36","macro:user_known_write_below_etc_activities:1481c66148493216582035ff05ba2863","macro:calico_node:0c80dcb500a0a30309af5fd40e9971fa","macro:dup:0e9f1e8e40bb79e800b0cc9433830cf4"],"used_by":["rule:Write below etc:c8c11ba077e4a8a62b93ed1136eb79b8"],"type":"macro","hash":"43c4c0ef98f61b5250120719de06b726"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1282,L1287","required_engine_version":"13","name":"Write below etc","rule":"Write below etc","condition":"write_etc_common","desc":"an attempt to write to any file below /etc","output":"File below /etc opened for writing (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent=%proc.pname pcmdline=%proc.pcmdline file=%fd.name program=%proc.name gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] container_id=%container.id image=%container.image.repository)","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1098"],"enabled":"true","dependencies":["list:write_etc_common:43c4c0ef98f61b5250120719de06b726"],"type":"rule","hash":"c8c11ba077e4a8a62b93ed1136eb79b8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1289,L1290","required_engine_version":"13","name":"known_root_files","list":"known_root_files","items":["/root/.monit.state","/root/.auth_tokens","/root/.bash_history","/root/.ash_history","/root/.aws/credentials","/root/.viminfo.tmp","/root/.lesshst","/root/.bzr.log","/root/.gitconfig.lock","/root/.babel.json","/root/.localstack","/root/.node_repl_history","/root/.mongorc.js","/root/.dbshell","/root/.augeas/history","/root/.rnd","/root/.wget-hsts","/health","/exec.fifo"],"tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"list","hash":"153debbfc42bcb707aa6c660776d9199"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1294,L1295","required_engine_version":"13","name":"known_root_directories","list":"known_root_directories","items":["/root/.oracle_jre_usage","/root/.ssh","/root/.subversion","/root/.nami"],"tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"list","hash":"e27518da86043f462c95924d3fea63a7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1297,L1298","required_engine_version":"13","name":"known_root_conditions","macro":"known_root_conditions","condition":"(fd.name startswith /root/orcexec. or fd.name startswith /root/.m2 or fd.name startswith /root/.npm or fd.name startswith /root/.pki or fd.name startswith /root/.ivy2 or fd.name startswith /root/.config/Cypress or fd.name startswith /root/.config/pulse or fd.name startswith /root/.config/configstore or fd.name startswith /root/jenkins/workspace or fd.name startswith /root/.jenkins or fd.name startswith /root/.cache or fd.name startswith /root/.sbt or fd.name startswith /root/.java or fd.name startswith /root/.glide or fd.name startswith /root/.sonar or fd.name startswith /root/.v8flag or fd.name startswith /root/infaagent or fd.name startswith /root/.local/lib/python or fd.name startswith /root/.pm2 or fd.name startswith /root/.gnupg or fd.name startswith /root/.pgpass or fd.name startswith /root/.theano or fd.name startswith /root/.gradle or fd.name startswith /root/.android or fd.name startswith /root/.ansible or fd.name startswith /root/.crashlytics or fd.name startswith /root/.dbus or fd.name startswith /root/.composer or fd.name startswith /root/.gconf or fd.name startswith /root/.nv or fd.name startswith /root/.local/share/jupyter or fd.name startswith /root/oradiag_root or fd.name startswith /root/workspace or fd.name startswith /root/jvm or fd.name startswith /root/.node-gyp)","tags":null,"enabled":"true","dependencies":["macro:node:36c4536996ca5615dcf9911f068786dc"],"used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"c3eb88c06b723b2c8512606e49498c5d"},{"file_name":"falco_rules.yaml","comment":"# Add conditions to this macro (probably in a separate file,\n# overwriting this macro) to allow for specific combinations of\n# programs writing below specific directories below\n# / or /root.\n#\n# In this file, it just takes one of the condition in the base macro\n# and repeats it.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1341,L1342","required_engine_version":"13","name":"user_known_write_root_conditions","macro":"user_known_write_root_conditions","condition":"fd.name=/root/.bash_history","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"5a5df0f573869913f6a73a5b67583c85"},{"file_name":"falco_rules.yaml","comment":"# This is a placeholder for user to extend the whitelist for write below root rule","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1345,L1346","required_engine_version":"13","name":"user_known_write_below_root_activities","macro":"user_known_write_below_root_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"b1f944844634ff62884377a1e56fca2a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1348,L1349","required_engine_version":"13","name":"runc_writing_exec_fifo","macro":"runc_writing_exec_fifo","condition":"(proc.cmdline=\"runc:[1:CHILD] init\" and fd.name=/exec.fifo)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4","rule:Container Drift Detected (chmod):70996cf27c16da0916ae631a52ca0dd6","rule:Container Drift Detected (open+create):e32f7f179a97e8ff06bae061e2a07e22"],"type":"macro","hash":"02aceef22907814c7c6d346464be2cf9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1351,L1352","required_engine_version":"13","name":"runc_writing_var_lib_docker","macro":"runc_writing_var_lib_docker","condition":"(proc.cmdline=\"runc:[1:CHILD] init\" and evt.arg.filename startswith /var/lib/docker)","tags":null,"enabled":"true","used_by":["rule:Container Drift Detected (chmod):70996cf27c16da0916ae631a52ca0dd6","rule:Container Drift Detected (open+create):e32f7f179a97e8ff06bae061e2a07e22"],"type":"macro","hash":"b777a4da7476b667e5c97c94dba354fe"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1354,L1355","required_engine_version":"13","name":"mysqlsh_writing_state","macro":"mysqlsh_writing_state","condition":"(proc.name=mysqlsh and fd.directory=/root/.mysqlsh)","tags":null,"enabled":"true","used_by":["rule:Write below root:160ac2096b913f3a2ab1891192cd68e4"],"type":"macro","hash":"efa063cd5808ead6ab58b25bf9cc610b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1357,L1384","required_engine_version":"13","name":"Write below root","rule":"Write below root","condition":"root_dir and evt.dir = \u003c and open_write and proc_name_exists and not fd.name in (known_root_files) and not fd.directory pmatch (known_root_directories) and not exe_running_docker_save and not gugent_writing_guestagent_log and not dse_writing_tmp and not zap_writing_state and not airflow_writing_state and not rpm_writing_root_rpmdb and not maven_writing_groovy and not chef_writing_conf and not kubectl_writing_state and not cassandra_writing_state and not galley_writing_state and not calico_writing_state and not rancher_writing_root and not runc_writing_exec_fifo and not mysqlsh_writing_state and not known_root_conditions and not user_known_write_root_conditions and not user_known_write_below_root_activities\n","desc":"an attempt to write to any file directly below / or /root","output":"File below / or /root opened for writing (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent=%proc.pname file=%fd.name program=%proc.name container_id=%container.id image=%container.image.repository)","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","TA0003"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:proc_name_exists:453387eaa91c2ac2bd725502766ed7d3","list:root_dir:2e9c111d3f1a2373f6f2a661b4d0d49d","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:gugent_writing_guestagent_log:732313d0524586dd1df2b07b7f95d918","list:dse_writing_tmp:23d387a1dee0900bb17e8f6e09b3ec2d","list:zap_writing_state:2609644f099cd058da317521636e7835","list:airflow_writing_state:11df0d8eeaffbf5bee34cad073a6ceae","list:rpm_writing_root_rpmdb:1191964954c946fe2f5ad7d598a4bd7a","list:maven_writing_groovy:16e9f1ef0343f1839fb9b3deb7c4a98b","list:chef_writing_conf:80fe25029c408ef56a9c70d77b9b2704","list:kubectl_writing_state:1957e60e3aaac0e9c51f09481a82a016","list:cassandra_writing_state:a25a8f9fb7ff7b5377a8aff172c6450d","list:galley_writing_state:c21e33532a7a909818b76a705a359186","list:calico_writing_state:28f51d87e4222736e8be77a05e18897e","list:rancher_writing_root:687f66c964ff5e546b31a18570c553a2","list:known_root_files:153debbfc42bcb707aa6c660776d9199","list:known_root_directories:e27518da86043f462c95924d3fea63a7","list:known_root_conditions:c3eb88c06b723b2c8512606e49498c5d","list:user_known_write_root_conditions:5a5df0f573869913f6a73a5b67583c85","list:user_known_write_below_root_activities:b1f944844634ff62884377a1e56fca2a","list:runc_writing_exec_fifo:02aceef22907814c7c6d346464be2cf9","list:mysqlsh_writing_state:efa063cd5808ead6ab58b25bf9cc610b"],"type":"rule","hash":"160ac2096b913f3a2ab1891192cd68e4"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1386,L1387","required_engine_version":"13","name":"cmp_cp_by_passwd","macro":"cmp_cp_by_passwd","condition":"proc.name in (cmp, cp) and proc.pname in (passwd, run-parts)","tags":null,"enabled":"true","used_by":["macro:user_read_sensitive_file_conditions:fdde2fe38eff306d1a5d93da1cf05f39","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"01c57df4cbda98ff94ed6cec21f1a3f0"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1389,L1390","required_engine_version":"13","name":"user_known_read_sensitive_files_activities","macro":"user_known_read_sensitive_files_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Read sensitive file trusted after startup:b75aa41834466514724e394b6983a5e6","rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"93013fdd38f628311bbd04ebd0e01436"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1392,L1402","required_engine_version":"13","name":"Read sensitive file trusted after startup","rule":"Read sensitive file trusted after startup","condition":"sensitive_files and open_read and server_procs and not proc_is_new and proc.name!=\"sshd\" and not user_known_read_sensitive_files_activities","desc":"an attempt to read any sensitive file (e.g. files containing user/password/authentication information) by a trusted program after startup. Trusted programs might read these files at startup to load initial state, but not afterwards.\n","output":"Sensitive file opened for reading by trusted program after startup (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent=%proc.pname file=%fd.name parent=%proc.pname gparent=%proc.aname[2] container_id=%container.id image=%container.image.repository)\n","priority":"WARNING","source":"syscalls","tags":["host","container","filesystem","mitre_credential_access","T1555","T1212","T1020","T1552","T1083"],"enabled":"true","dependencies":["list:open_read:fada70dac63821c34b095b962e02cb36","list:server_procs:b0b2aee9b1b742b7be027fd5c2ac590e","list:sensitive_files:bc813752062be252ca253cee28ddbbae","list:proc_is_new:9bcebd514bbad53f4298328825d0d4c2","list:user_known_read_sensitive_files_activities:93013fdd38f628311bbd04ebd0e01436"],"type":"rule","hash":"b75aa41834466514724e394b6983a5e6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1404,L1405","required_engine_version":"13","name":"read_sensitive_file_binaries","list":"read_sensitive_file_binaries","items":["iptables","ps","lsb_release","check-new-relea","dumpe2fs","accounts-daemon","sshd","vsftpd","systemd","mysql_install_d","psql","screen","debconf-show","sa-update","pam-auth-update","pam-config","/usr/sbin/spamd","polkit-agent-he","lsattr","file","sosreport","scxcimservera","adclient","rtvscand","cockpit-session","userhelper","ossec-syscheckd"],"tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"list","hash":"e257522d28d019628f8c7b3a76714300"},{"file_name":"falco_rules.yaml","comment":"# Add conditions to this macro (probably in a separate file,\n# overwriting this macro) to allow for specific combinations of\n# programs accessing sensitive files.\n# fluentd_writing_conf_files is a good example to follow, as it\n# specifies both the program doing the writing as well as the specific\n# files it is allowed to modify.\n#\n# In this file, it just takes one of the macros in the base rule\n# and repeats it.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1422,L1423","required_engine_version":"13","name":"user_read_sensitive_file_conditions","macro":"user_read_sensitive_file_conditions","condition":"cmp_cp_by_passwd","tags":null,"enabled":"true","dependencies":["macro:cmp_cp_by_passwd:01c57df4cbda98ff94ed6cec21f1a3f0"],"used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"fdde2fe38eff306d1a5d93da1cf05f39"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1425,L1426","required_engine_version":"13","name":"read_sensitive_file_images","list":"read_sensitive_file_images","tags":null,"enabled":"true","used_by":["macro:user_read_sensitive_file_containers:e8df79ecac70e22ac5ac4f683bb13d24"],"type":"list","hash":"10c5017498bf1815a9231ce0aba6ec75"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1428,L1429","required_engine_version":"13","name":"user_read_sensitive_file_containers","macro":"user_read_sensitive_file_containers","condition":"(container and container.image.repository in (read_sensitive_file_images))","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:read_sensitive_file_images:10c5017498bf1815a9231ce0aba6ec75"],"used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"e8df79ecac70e22ac5ac4f683bb13d24"},{"file_name":"falco_rules.yaml","comment":"# This macro detects man-db postinst, see https://salsa.debian.org/debian/man-db/-/blob/master/debian/postinst\n# The rule \"Read sensitive file untrusted\" use this macro to avoid FPs.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1433,L1434","required_engine_version":"13","name":"mandb_postinst","macro":"mandb_postinst","condition":"(proc.name=perl and proc.args startswith \"-e\" and proc.args contains \"@pwd = getpwnam(\" and proc.args contains \"exec \" and proc.args contains \"/usr/bin/mandb\")\n","tags":null,"enabled":"true","used_by":["rule:Read sensitive file untrusted:5116b3ca0c5fad246cc41ca67938a315"],"type":"macro","hash":"40193336becb6cb0459de83b2842c5f5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1440,L1472","required_engine_version":"13","name":"Read sensitive file untrusted","rule":"Read sensitive file untrusted","condition":"sensitive_files and open_read and proc_name_exists and not proc.name in (user_mgmt_binaries, userexec_binaries, package_mgmt_binaries,\n cron_binaries, read_sensitive_file_binaries, shell_binaries, hids_binaries,\n vpn_binaries, mail_config_binaries, nomachine_binaries, sshkit_script_binaries,\n in.proftpd, mandb, salt-call, salt-minion, postgres_mgmt_binaries,\n google_oslogin_\n )\nand not cmp_cp_by_passwd and not ansible_running_python and not run_by_qualys and not run_by_chef and not run_by_google_accounts_daemon and not user_read_sensitive_file_conditions and not mandb_postinst and not perl_running_plesk and not perl_running_updmap and not veritas_driver_script and not perl_running_centrifydc and not runuser_reading_pam and not linux_bench_reading_etc_shadow and not user_known_read_sensitive_files_activities and not user_read_sensitive_file_containers\n","desc":"an attempt to read any sensitive file (e.g. files containing user/password/authentication information). Exceptions are made for known trusted programs.\n","output":"Sensitive file opened for reading by non-trusted program (user=%user.name user_loginuid=%user.loginuid program=%proc.name command=%proc.cmdline pid=%proc.pid file=%fd.name parent=%proc.pname gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] container_id=%container.id image=%container.image.repository)\n","priority":"WARNING","source":"syscalls","tags":["host","container","filesystem","mitre_credential_access","mitre_discovery","T1555","T1212","T1020","T1552","T1083"],"enabled":"true","dependencies":["list:open_read:fada70dac63821c34b095b962e02cb36","list:proc_name_exists:453387eaa91c2ac2bd725502766ed7d3","list:shell_binaries:af03e5f14f4aa2d1505ec180e1c58caf","list:postgres_mgmt_binaries:983f83fafcd16f2c180fc70666c34845","list:package_mgmt_binaries:cbd791c45a9d5d51118aaf6c9ce6b934","list:userexec_binaries:a565f19993c396a912312fc67ef23f02","list:user_mgmt_binaries:2b8476e193b6319359b8500841101a95","list:hids_binaries:2e2257f901952e8f1c71c6433859164d","list:vpn_binaries:f977d9a09aad2ea83fffbd3a7a869c2d","list:nomachine_binaries:be10dcfdff8f673dfb82d8bed97c68b9","list:mail_config_binaries:b7be6fc7d0d3734f0bdfda0a81accc5f","list:sensitive_files:bc813752062be252ca253cee28ddbbae","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:cron_binaries:6f1f66d014c874287d9333b0ee22b125","list:sshkit_script_binaries:ce44254edc701be4dd47f06f9052328d","list:ansible_running_python:32953f9f3a0f3f017f72d291abad0fd5","list:run_by_qualys:a778e5b0cc0d78490f59b07c87278a0f","list:run_by_google_accounts_daemon:d6ec884ac09a5dcfa8a67fa1a5232233","list:run_by_chef:e3aec37896453ee7f73bca485d8c4ef1","list:perl_running_plesk:2b0e5df74d6eb443338b26da9b136f87","list:perl_running_updmap:589a4f8cbb574b765bb9d8f5823401e1","list:perl_running_centrifydc:1d8351cb0ee455690fd0ad293929f012","list:runuser_reading_pam:3aa78dff367e96705b5f16a8fd8771e9","list:linux_bench_reading_etc_shadow:33ae527a98b2b3ef94e0b006097440fd","list:veritas_driver_script:289a40694621cf340ededcb65e4c6d3b","list:cmp_cp_by_passwd:01c57df4cbda98ff94ed6cec21f1a3f0","list:user_known_read_sensitive_files_activities:93013fdd38f628311bbd04ebd0e01436","list:read_sensitive_file_binaries:e257522d28d019628f8c7b3a76714300","list:user_read_sensitive_file_conditions:fdde2fe38eff306d1a5d93da1cf05f39","list:user_read_sensitive_file_containers:e8df79ecac70e22ac5ac4f683bb13d24","list:mandb_postinst:40193336becb6cb0459de83b2842c5f5"],"type":"rule","hash":"5116b3ca0c5fad246cc41ca67938a315"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1474,L1475","required_engine_version":"13","name":"amazon_linux_running_python_yum","macro":"amazon_linux_running_python_yum","condition":"(proc.name = python and\n proc.pcmdline = \"python -m amazon_linux_extras system_motd\" and\n proc.cmdline startswith \"python -c import yum;\")\n","tags":null,"enabled":"true","used_by":["rule:Write below rpm database:6c69bfa0636d717f06c4913931ad8d95"],"type":"macro","hash":"2463344650ac502af0f765bb901e5c0c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1480,L1481","required_engine_version":"13","name":"user_known_write_rpm_database_activities","macro":"user_known_write_rpm_database_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Write below rpm database:6c69bfa0636d717f06c4913931ad8d95"],"type":"macro","hash":"c772da1c64ba873faf57a17e5c0af342"},{"file_name":"falco_rules.yaml","comment":"# Only let rpm-related programs write to the rpm database","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1484,L1496","required_engine_version":"13","name":"Write below rpm database","rule":"Write below rpm database","condition":"fd.name startswith /var/lib/rpm and open_write and not rpm_procs and not ansible_running_python and not python_running_chef and not exe_running_docker_save and not amazon_linux_running_python_yum and not user_known_write_rpm_database_activities\n","desc":"an attempt to write to the rpm database by any non-rpm related program","output":"Rpm database opened for writing by a non-rpm program (command=%proc.cmdline pid=%proc.pid file=%fd.name parent=%proc.pname pcmdline=%proc.pcmdline container_id=%container.id image=%container.image.repository)","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","software_mgmt","mitre_persistence","T1072"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:rpm_procs:4af559147e158d724c3273c0cf781a9f","list:ansible_running_python:32953f9f3a0f3f017f72d291abad0fd5","list:python_running_chef:73eaeb68ecea5a4c89f0489e055d5c08","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:amazon_linux_running_python_yum:2463344650ac502af0f765bb901e5c0c","list:user_known_write_rpm_database_activities:c772da1c64ba873faf57a17e5c0af342"],"type":"rule","hash":"6c69bfa0636d717f06c4913931ad8d95"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1498,L1499","required_engine_version":"13","name":"postgres_running_wal_e","macro":"postgres_running_wal_e","condition":"(proc.pname=postgres and (proc.cmdline startswith \"sh -c envdir /etc/wal-e.d/env /usr/local/bin/wal-e\" or proc.cmdline startswith \"sh -c envdir \\\"/run/etc/wal-e.d/env\\\" wal-g wal-push\"))","tags":null,"enabled":"true","used_by":["rule:DB program spawned process:a277852022c3734da76c948e8bfdfaf7","rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"bd23433612d1f77cb9276c6da05b3775"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1501,L1502","required_engine_version":"13","name":"redis_running_prepost_scripts","macro":"redis_running_prepost_scripts","condition":"(proc.aname[2]=redis-server and (proc.cmdline contains \"redis-server.post-up.d\" or proc.cmdline contains \"redis-server.pre-up.d\"))","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"3e1e02f554acefc92046376f42e325aa"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1504,L1505","required_engine_version":"13","name":"rabbitmq_running_scripts","macro":"rabbitmq_running_scripts","condition":"(proc.pname=beam.smp and (proc.cmdline startswith \"sh -c exec ps\" or\n proc.cmdline startswith \"sh -c exec inet_gethost\" or\n proc.cmdline= \"sh -s unix:cmd\" or\n proc.cmdline= \"sh -c exec /bin/sh -s unix:cmd 2\u003e\u00261\"))\n","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"f7fcb3478b892a618720d7851aa8692d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1512,L1513","required_engine_version":"13","name":"rabbitmqctl_running_scripts","macro":"rabbitmqctl_running_scripts","condition":"(proc.aname[2]=rabbitmqctl and proc.cmdline startswith \"sh -c \")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"3a68d09c450f70537cc057d2203370ab"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1515,L1516","required_engine_version":"13","name":"run_by_appdynamics","macro":"run_by_appdynamics","condition":"(proc.pname=java and proc.pcmdline startswith \"java -jar -Dappdynamics\")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"4d7485c7030db9363f27078b5359f7a2"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1518,L1519","required_engine_version":"13","name":"user_known_db_spawned_processes","macro":"user_known_db_spawned_processes","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:DB program spawned process:a277852022c3734da76c948e8bfdfaf7"],"type":"macro","hash":"e9782b773c4c9b7a5b5c0c30a23a0662"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1521,L1535","required_engine_version":"13","name":"DB program spawned process","rule":"DB program spawned process","condition":"proc.pname in (db_server_binaries) and spawned_process and not proc.name in (db_server_binaries) and not postgres_running_wal_e and not user_known_db_spawned_processes\n","desc":"a database-server related program spawned a new process other than itself. This shouldn\\'t occur and is a follow on from some SQL injection attacks.\n","output":"Database-related program spawned process other than itself (user=%user.name user_loginuid=%user.loginuid program=%proc.cmdline pid=%proc.pid parent=%proc.pname container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","process","database","mitre_execution","T1190"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:db_server_binaries:449619792d4c73357d92287273fbd164","list:postgres_running_wal_e:bd23433612d1f77cb9276c6da05b3775","list:user_known_db_spawned_processes:e9782b773c4c9b7a5b5c0c30a23a0662"],"type":"rule","hash":"a277852022c3734da76c948e8bfdfaf7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1537,L1538","required_engine_version":"13","name":"user_known_modify_bin_dir_activities","macro":"user_known_modify_bin_dir_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Modify binary dirs:da761eca8eb4f7b26076d0f4b139f079"],"type":"macro","hash":"22c60c5fe87a748d783a1bf606652cd6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1540,L1547","required_engine_version":"13","name":"Modify binary dirs","rule":"Modify binary dirs","condition":"bin_dir_rename and modify and not package_mgmt_procs and not exe_running_docker_save and not user_known_modify_bin_dir_activities","desc":"an attempt to modify any file below a set of binary directories.","output":"File below known binary directory renamed/removed (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid pcmdline=%proc.pcmdline operation=%evt.type file=%fd.name %evt.args container_id=%container.id image=%container.image.repository)\n","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1222.002"],"enabled":"true","dependencies":["list:rename:d7fba04fc8e17bcfc603b318a85b762c","list:modify:8f45a2644508b5282f57fe129f62d19a","list:bin_dir:d23b8731e3efa0dfa8e2c20d76fbe442","list:bin_dir_rename:b186b1e54a4d9e1f1c2b31f0628253db","list:package_mgmt_procs:a69d5abbdc29f4dde6b8ec5c7d0209d6","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:user_known_modify_bin_dir_activities:22c60c5fe87a748d783a1bf606652cd6"],"type":"rule","hash":"da761eca8eb4f7b26076d0f4b139f079"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1549,L1550","required_engine_version":"13","name":"user_known_mkdir_bin_dir_activities","macro":"user_known_mkdir_bin_dir_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Mkdir binary dirs:d7977f4987d5627ea9f04e1b0d946f2c"],"type":"macro","hash":"07904727e6d103f3e4cec0b46f15466d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1552,L1564","required_engine_version":"13","name":"Mkdir binary dirs","rule":"Mkdir binary dirs","condition":"mkdir and bin_dir_mkdir and not package_mgmt_procs and not user_known_mkdir_bin_dir_activities and not exe_running_docker_save\n","desc":"an attempt to create a directory below a set of binary directories.","output":"Directory below known binary directory created (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid directory=%evt.arg.path container_id=%container.id image=%container.image.repository)\n","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1222.002"],"enabled":"true","dependencies":["list:mkdir:d1c89dbbd2e4ef759c37d3e0b94e7327","list:bin_dir:d23b8731e3efa0dfa8e2c20d76fbe442","list:bin_dir_mkdir:f3dd593d07dba89f9350e450a35eef6b","list:package_mgmt_procs:a69d5abbdc29f4dde6b8ec5c7d0209d6","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:user_known_mkdir_bin_dir_activities:07904727e6d103f3e4cec0b46f15466d"],"type":"rule","hash":"d7977f4987d5627ea9f04e1b0d946f2c"},{"file_name":"falco_rules.yaml","comment":"# This list allows for easy additions to the set of commands allowed\n# to change thread namespace without having to copy and override the\n# entire change thread namespace rule.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1569,L1570","required_engine_version":"13","name":"user_known_change_thread_namespace_binaries","list":"user_known_change_thread_namespace_binaries","items":["crio","multus"],"tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"list","hash":"81bcafda531d9f1dfde1778cbf5075c9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1572,L1573","required_engine_version":"13","name":"user_known_change_thread_namespace_activities","macro":"user_known_change_thread_namespace_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"macro","hash":"be737247cfb371d8c20ef23aab8bed09"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1575,L1576","required_engine_version":"13","name":"network_plugin_binaries","list":"network_plugin_binaries","items":["aws-cni","azure-vnet"],"tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"list","hash":"37a3a58ec3693f0c7e18f036a325fd32"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1578,L1579","required_engine_version":"13","name":"weaveworks_scope","macro":"weaveworks_scope","condition":"(container.image.repository endswith weaveworks/scope and proc.name=scope)","tags":null,"enabled":"true","used_by":["rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61"],"type":"macro","hash":"593789bc8dbc0fda3bb2ce089d50c87d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1581,L1606","required_engine_version":"13","name":"Change thread namespace","rule":"Change thread namespace","condition":"evt.type=setns and evt.dir=\u003c and proc_name_exists and not (container.id=host and proc.name in (docker_binaries, k8s_binaries, lxd_binaries, nsenter)) and not proc.name in (sysdigcloud_binaries, sysdig, calico, oci-umount, cilium-cni, network_plugin_binaries) and not proc.name in (user_known_change_thread_namespace_binaries) and not proc.name startswith \"runc\" and not proc.cmdline startswith \"containerd\" and not proc.pname in (sysdigcloud_binaries, hyperkube, kubelet, protokube, dockerd, tini, aws) and not java_running_sdjagent and not kubelet_running_loopback and not rancher_agent and not rancher_network_manager and not calico_node and not weaveworks_scope and not user_known_change_thread_namespace_activities\n","desc":"an attempt to change a program/thread\\'s namespace (commonly done as a part of creating a container) by calling setns.\n","output":"Namespace change (setns) by unexpected program (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent=%proc.pname %container.info container_id=%container.id image=%container.image.repository:%container.image.tag)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","process","mitre_privilege_escalation","mitre_lateral_movement","T1611"],"enabled":"false","dependencies":["list:namespace:89801e9e98979062e84647433a8ed3e9","list:node:36c4536996ca5615dcf9911f068786dc","list:proc_name_exists:453387eaa91c2ac2bd725502766ed7d3","list:sysdigcloud_binaries:5cd4a552978d2b6ed446f11f8a294cbf","list:docker_binaries:663cca84b425c42a03acc1f2ee04be85","list:k8s_binaries:52eba9972841f1a5acc644f595824d65","list:lxd_binaries:9f8fa9ebc7ba17e064657b840faf1603","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:java_running_sdjagent:481dfc4260e33ac79bc9965859a6da56","list:kubelet_running_loopback:d9fae580000bd7262c976a96da5ebcfa","list:rancher_agent:7e51aa1b4e43b0fbcf3f497f19d31ee6","list:rancher_network_manager:66300ea84d87d0be9404127579c110e8","list:calico_node:0c80dcb500a0a30309af5fd40e9971fa","list:user_known_change_thread_namespace_binaries:81bcafda531d9f1dfde1778cbf5075c9","list:user_known_change_thread_namespace_activities:be737247cfb371d8c20ef23aab8bed09","list:network_plugin_binaries:37a3a58ec3693f0c7e18f036a325fd32","list:weaveworks_scope:593789bc8dbc0fda3bb2ce089d50c87d","list:docker_binaries:663cca84b425c42a03acc1f2ee04be85"],"type":"rule","hash":"bf53659328792edf3dcb3d50994a2d61"},{"file_name":"falco_rules.yaml","comment":"# The binaries in this list and their descendents are *not* allowed\n# spawn shells. This includes the binaries spawning shells directly as\n# well as indirectly. For example, apache -\u003e php/perl for\n# mod_{php,perl} -\u003e some shell is also not allowed, because the shell\n# has apache as an ancestor.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1614,L1615","required_engine_version":"13","name":"protected_shell_spawning_binaries","list":"protected_shell_spawning_binaries","items":["http_server_binaries","db_server_binaries","nosql_server_binaries","mail_binaries","fluentd","flanneld","splunkd","consul","smbd","runsv","PM2"],"tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"list","hash":"5a831ca53621d645202a0936bbe93658"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1620,L1621","required_engine_version":"13","name":"parent_java_running_zookeeper","macro":"parent_java_running_zookeeper","condition":"(proc.pname=java and proc.pcmdline contains org.apache.zookeeper.server)","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"dad2e903f337136ed85901ba3603d00b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1623,L1624","required_engine_version":"13","name":"parent_java_running_kafka","macro":"parent_java_running_kafka","condition":"(proc.pname=java and proc.pcmdline contains kafka.Kafka)","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"85f14070f56fef4ad14c02d9bb484d6d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1626,L1627","required_engine_version":"13","name":"parent_java_running_elasticsearch","macro":"parent_java_running_elasticsearch","condition":"(proc.pname=java and proc.pcmdline contains org.elasticsearch.bootstrap.Elasticsearch)","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"b7e7beee746fb6cbd38ed9b2dc7989e1"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1629,L1630","required_engine_version":"13","name":"parent_java_running_activemq","macro":"parent_java_running_activemq","condition":"(proc.pname=java and proc.pcmdline contains activemq.jar)","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"3b38b224f8279f053c1b95f4aab530e9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1632,L1633","required_engine_version":"13","name":"parent_java_running_cassandra","macro":"parent_java_running_cassandra","condition":"(proc.pname=java and (proc.pcmdline contains \"-Dcassandra.config.loader\" or proc.pcmdline contains org.apache.cassandra.service.CassandraDaemon))","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"b8c144f02823399396cfacf218bd8ce8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1635,L1636","required_engine_version":"13","name":"parent_java_running_jboss_wildfly","macro":"parent_java_running_jboss_wildfly","condition":"(proc.pname=java and proc.pcmdline contains org.jboss)","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"3c177ac87bd44c168201e6cfc60e7682"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1638,L1639","required_engine_version":"13","name":"parent_java_running_glassfish","macro":"parent_java_running_glassfish","condition":"(proc.pname=java and proc.pcmdline contains com.sun.enterprise.glassfish)","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"ec61aecf16523635b8a105d655552a4f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1641,L1642","required_engine_version":"13","name":"parent_java_running_hadoop","macro":"parent_java_running_hadoop","condition":"(proc.pname=java and proc.pcmdline contains org.apache.hadoop)","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"c7e3f16120da2be85a01a746d1bb29c0"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1644,L1645","required_engine_version":"13","name":"parent_java_running_datastax","macro":"parent_java_running_datastax","condition":"(proc.pname=java and proc.pcmdline contains com.datastax)","tags":null,"enabled":"true","used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"7c07fd37bfa769582043db9af298939d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1647,L1648","required_engine_version":"13","name":"nginx_starting_nginx","macro":"nginx_starting_nginx","condition":"(proc.pname=nginx and proc.cmdline contains \"/usr/sbin/nginx -c /etc/nginx/nginx.conf\")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"8f17af6fb377b48111eaecbfb08cc4f5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1650,L1651","required_engine_version":"13","name":"nginx_running_aws_s3_cp","macro":"nginx_running_aws_s3_cp","condition":"(proc.pname=nginx and proc.cmdline startswith \"sh -c /usr/local/bin/aws s3 cp\")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"0706dddd6e0ea756feaff182e53dec8f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1653,L1654","required_engine_version":"13","name":"consul_running_net_scripts","macro":"consul_running_net_scripts","condition":"(proc.pname=consul and (proc.cmdline startswith \"sh -c curl\" or proc.cmdline startswith \"sh -c nc\"))","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"b90a9710c72307790a89d9cd655d6695"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1656,L1657","required_engine_version":"13","name":"consul_running_alert_checks","macro":"consul_running_alert_checks","condition":"(proc.pname=consul and proc.cmdline startswith \"sh -c /bin/consul-alerts\")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"7cab13b781e8aba8ad318dc176d99928"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1659,L1660","required_engine_version":"13","name":"serf_script","macro":"serf_script","condition":"(proc.cmdline startswith \"sh -c serf\")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"d4d58ded4f3d34ebc7d2f76052f00711"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1662,L1663","required_engine_version":"13","name":"check_process_status","macro":"check_process_status","condition":"(proc.cmdline startswith \"sh -c kill -0 \")","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"284a2345c49d324a7abfa859c03a5ba8"},{"file_name":"falco_rules.yaml","comment":"# In some cases, you may want to consider node processes run directly\n# in containers as protected shell spawners. Examples include using\n# pm2-docker or pm2 start some-app.js --no-daemon-mode as the direct\n# entrypoint of the container, and when the node app is a long-lived\n# server using something like express.\n#\n# However, there are other uses of node related to build pipelines for\n# which node is not really a server but instead a general scripting\n# tool. In these cases, shells are very likely and in these cases you\n# don't want to consider node processes protected shell spawners.\n#\n# We have to choose one of these cases, so we consider node processes\n# as unprotected by default. If you want to consider any node process\n# run in a container as a protected shell spawner, override the below\n# macro to remove the \"never_true\" clause, which allows it to take effect.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1680,L1681","required_engine_version":"13","name":"possibly_node_in_container","macro":"possibly_node_in_container","condition":"(never_true and (proc.pname=node and proc.aname[3]=docker-containe))","tags":null,"enabled":"true","dependencies":["macro:node:36c4536996ca5615dcf9911f068786dc","macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"513181c67b31a65f5956a1911a700134"},{"file_name":"falco_rules.yaml","comment":"# Similarly, you may want to consider any shell spawned by apache\n# tomcat as suspect. The famous apache struts attack (CVE-2017-5638)\n# could be exploited to do things like spawn shells.\n#\n# However, many applications *do* use tomcat to run arbitrary shells,\n# as a part of build pipelines, etc.\n#\n# Like for node, we make this case opt-in.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1691,L1692","required_engine_version":"13","name":"possibly_parent_java_running_tomcat","macro":"possibly_parent_java_running_tomcat","condition":"(never_true and proc.pname=java and proc.pcmdline contains org.apache.catalina.startup.Bootstrap)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["macro:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f"],"type":"macro","hash":"ff2e34a96a3a090dab697eb7bef460f0"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1694,L1695","required_engine_version":"13","name":"protected_shell_spawner","macro":"protected_shell_spawner","condition":"(proc.aname in (protected_shell_spawning_binaries) or parent_java_running_zookeeper or parent_java_running_kafka or parent_java_running_elasticsearch or parent_java_running_activemq or parent_java_running_cassandra or parent_java_running_jboss_wildfly or parent_java_running_glassfish or parent_java_running_hadoop or parent_java_running_datastax or possibly_parent_java_running_tomcat or possibly_node_in_container)\n","tags":null,"enabled":"true","dependencies":["macro:node:36c4536996ca5615dcf9911f068786dc","macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863","macro:java_running_cassandra:4007e4b4c8d21c944cab57c742f7544e","list:protected_shell_spawning_binaries:5a831ca53621d645202a0936bbe93658","macro:parent_java_running_zookeeper:dad2e903f337136ed85901ba3603d00b","macro:parent_java_running_kafka:85f14070f56fef4ad14c02d9bb484d6d","macro:parent_java_running_elasticsearch:b7e7beee746fb6cbd38ed9b2dc7989e1","macro:parent_java_running_activemq:3b38b224f8279f053c1b95f4aab530e9","macro:parent_java_running_cassandra:b8c144f02823399396cfacf218bd8ce8","macro:parent_java_running_jboss_wildfly:3c177ac87bd44c168201e6cfc60e7682","macro:parent_java_running_glassfish:ec61aecf16523635b8a105d655552a4f","macro:parent_java_running_hadoop:c7e3f16120da2be85a01a746d1bb29c0","macro:parent_java_running_datastax:7c07fd37bfa769582043db9af298939d","macro:possibly_node_in_container:513181c67b31a65f5956a1911a700134","macro:possibly_parent_java_running_tomcat:ff2e34a96a3a090dab697eb7bef460f0"],"used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"289d0fac7ddcc0b55530dce34e2f574f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1709,L1710","required_engine_version":"13","name":"mesos_shell_binaries","list":"mesos_shell_binaries","items":["mesos-docker-ex","mesos-slave","mesos-health-ch"],"tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"list","hash":"31447a41e6ee41c094fd5156aca7019c"},{"file_name":"falco_rules.yaml","comment":"# Note that runsv is both in protected_shell_spawner and the\n# exclusions by pname. This means that runsv can itself spawn shells\n# (the ./run and ./finish scripts), but the processes runsv can not\n# spawn shells.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1716,L1753","required_engine_version":"13","name":"Run shell untrusted","rule":"Run shell untrusted","condition":"spawned_process and shell_procs and proc.pname exists and protected_shell_spawner and not proc.pname in (shell_binaries, gitlab_binaries, cron_binaries, user_known_shell_spawn_binaries,\n                       needrestart_binaries,\n                       mesos_shell_binaries,\n                       erl_child_setup, exechealthz,\n                       PM2, PassengerWatchd, c_rehash, svlogd, logrotate, hhvm, serf,\n                       lb-controller, nvidia-installe, runsv, statsite, erlexec, calico-node,\n                       \"puma reactor\")\nand not proc.cmdline in (known_shell_spawn_cmdlines) and not proc.aname in (unicorn_launche) and not consul_running_net_scripts and not consul_running_alert_checks and not nginx_starting_nginx and not nginx_running_aws_s3_cp and not run_by_package_mgmt_binaries and not serf_script and not check_process_status and not run_by_foreman and not python_mesos_marathon_scripting and not splunk_running_forwarder and not postgres_running_wal_e and not redis_running_prepost_scripts and not rabbitmq_running_scripts and not rabbitmqctl_running_scripts and not run_by_appdynamics and not user_shell_container_exclusions\n","desc":"an attempt to spawn a shell below a non-shell application. Specific applications are monitored.","output":"Shell spawned by untrusted binary (user=%user.name user_loginuid=%user.loginuid shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline pid=%proc.pid pcmdline=%proc.pcmdline gparent=%proc.aname[2] ggparent=%proc.aname[3] aname[4]=%proc.aname[4] aname[5]=%proc.aname[5] aname[6]=%proc.aname[6] aname[7]=%proc.aname[7] container_id=%container.id image=%container.image.repository)\n","priority":"DEBUG","source":"syscalls","tags":["host","container","process","shell","mitre_execution","T1059.004"],"enabled":"true","dependencies":["list:node:36c4536996ca5615dcf9911f068786dc","list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:shell_binaries:af03e5f14f4aa2d1505ec180e1c58caf","list:shell_procs:8907863a6a74678a4246f35930a29fe1","list:gitlab_binaries:93a3755022112947842484415a332c0b","list:package_mgmt_binaries:cbd791c45a9d5d51118aaf6c9ce6b934","list:run_by_package_mgmt_binaries:330b541f474e818efb55c808d9f9ec6f","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:cron_binaries:6f1f66d014c874287d9333b0ee22b125","list:needrestart_binaries:6e00b59826ab685a4964571124be5622","list:run_by_foreman:d08847b65ce4993a0c38c52bab29f8b9","list:python_mesos_marathon_scripting:e1ba57442586f49f842c17f052c2c842","list:splunk_running_forwarder:a755be42eb6a029167dfccc9a0d550e8","list:postgres_running_wal_e:bd23433612d1f77cb9276c6da05b3775","list:redis_running_prepost_scripts:3e1e02f554acefc92046376f42e325aa","list:rabbitmq_running_scripts:f7fcb3478b892a618720d7851aa8692d","list:rabbitmqctl_running_scripts:3a68d09c450f70537cc057d2203370ab","list:run_by_appdynamics:4d7485c7030db9363f27078b5359f7a2","list:nginx_starting_nginx:8f17af6fb377b48111eaecbfb08cc4f5","list:nginx_running_aws_s3_cp:0706dddd6e0ea756feaff182e53dec8f","list:consul_running_net_scripts:b90a9710c72307790a89d9cd655d6695","list:consul_running_alert_checks:7cab13b781e8aba8ad318dc176d99928","list:serf_script:d4d58ded4f3d34ebc7d2f76052f00711","list:check_process_status:284a2345c49d324a7abfa859c03a5ba8","list:protected_shell_spawner:289d0fac7ddcc0b55530dce34e2f574f","list:mesos_shell_binaries:31447a41e6ee41c094fd5156aca7019c","list:known_shell_spawn_cmdlines:a471b7368b7e78eb6da1a59b45d22732","list:user_known_shell_spawn_binaries:aee0480002d472c37c865d1f651a4c77","list:user_shell_container_exclusions:f0b59b425c9d3204fb50ec6e436e8cd7"],"type":"rule","hash":"551646aedeb1120e4db55fddbd6aff15"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1755,L1756","required_engine_version":"13","name":"allowed_openshift_registry_root","macro":"allowed_openshift_registry_root","condition":"(container.image.repository startswith openshift3/ or\n container.image.repository startswith registry.redhat.io/openshift3/ or\n container.image.repository startswith registry.access.redhat.com/openshift3/)\n","tags":null,"enabled":"true","used_by":["macro:openshift_image:a963c49d809c7db284d12a2020ad26b8"],"type":"macro","hash":"b04fbe421b78a0554e24531d1a85e225"},{"file_name":"falco_rules.yaml","comment":"# Source: https://docs.openshift.com/enterprise/3.2/install_config/install/disconnected_install.html","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1762,L1763","required_engine_version":"13","name":"openshift_image","macro":"openshift_image","condition":"(allowed_openshift_registry_root and\n  (container.image.repository endswith /logging-deployment or\n   container.image.repository endswith /logging-elasticsearch or\n   container.image.repository endswith /logging-kibana or\n   container.image.repository endswith /logging-fluentd or\n   container.image.repository endswith /logging-auth-proxy or\n   container.image.repository endswith /metrics-deployer or\n   container.image.repository endswith /metrics-hawkular-metrics or\n   container.image.repository endswith /metrics-cassandra or\n   container.image.repository endswith /metrics-heapster or\n   container.image.repository endswith /ose-haproxy-router or\n   container.image.repository endswith /ose-deployer or\n   container.image.repository endswith /ose-sti-builder or\n   container.image.repository endswith /ose-docker-builder or\n   container.image.repository endswith /ose-pod or\n   container.image.repository endswith /ose-node or\n   container.image.repository endswith /ose-docker-registry or\n   container.image.repository endswith /prometheus-node-exporter or\n   container.image.repository endswith /image-inspector))\n","tags":null,"enabled":"true","dependencies":["macro:pod:dcc0caa97588ee058c2fcd764e5f919b","macro:deployment:06e5c0d0f9eabd9525e5f9dc4f6f37cf","macro:node:36c4536996ca5615dcf9911f068786dc","macro:allowed_openshift_registry_root:b04fbe421b78a0554e24531d1a85e225"],"used_by":["macro:falco_privileged_containers:9b4ba98f48c4031d87b99b489d62ca74"],"type":"macro","hash":"a963c49d809c7db284d12a2020ad26b8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1784,L1785","required_engine_version":"13","name":"redhat_io_images_privileged","list":"redhat_io_images_privileged","items":["registry.redhat.io/openshift-logging/fluentd-rhel8","registry.redhat.io/openshift4/ose-csi-node-driver-registrar","registry.redhat.io/openshift4/ose-kubernetes-nmstate-handler-rhel8","registry.redhat.io/openshift4/ose-local-storage-diskmaker"],"tags":null,"enabled":"true","used_by":["macro:redhat_image:ee4862446552668e30ad796f2ed876ea"],"type":"list","hash":"be84461c0b8a2d3d0f6c5df6d18c956b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1787,L1788","required_engine_version":"13","name":"redhat_image","macro":"redhat_image","condition":"(container.image.repository in (redhat_io_images_privileged))\n","tags":null,"enabled":"true","dependencies":["list:redhat_io_images_privileged:be84461c0b8a2d3d0f6c5df6d18c956b"],"used_by":["rule:Launch Privileged Container:b2519a12fb87e0645a80043bd931f62f"],"type":"macro","hash":"ee4862446552668e30ad796f2ed876ea"},{"file_name":"falco_rules.yaml","comment":"# https://docs.aws.amazon.com/eks/latest/userguide/add-ons-images.html\n#  official AWS EKS registry list. AWS has different ECR repo per region","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1793,L1794","required_engine_version":"13","name":"allowed_aws_ecr_registry_root_for_eks","macro":"allowed_aws_ecr_registry_root_for_eks","condition":"(container.image.repository startswith \"602401143452.dkr.ecr\" or\n container.image.repository startswith \"877085696533.dkr.ecr\" or\n container.image.repository startswith \"800184023465.dkr.ecr\" or\n container.image.repository startswith \"918309763551.dkr.ecr\" or\n container.image.repository startswith \"961992271922.dkr.ecr\" or\n container.image.repository startswith \"590381155156.dkr.ecr\" or\n container.image.repository startswith \"558608220178.dkr.ecr\" or\n container.image.repository startswith \"151742754352.dkr.ecr\" or\n container.image.repository startswith \"013241004608.dkr.ecr\")\n","tags":null,"enabled":"true","used_by":["macro:aws_eks_core_images:6146df7a3c8fbe8fc4d8439f3675a6ce","macro:aws_eks_image_sensitive_mount:3608173c8035e2501d82c68d9c1fd252"],"type":"macro","hash":"1a39a8e2c5b37345d398dcc5754b18b6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1806,L1807","required_engine_version":"13","name":"aws_eks_core_images","macro":"aws_eks_core_images","condition":"(allowed_aws_ecr_registry_root_for_eks and (container.image.repository endswith \".amazonaws.com/amazon-k8s-cni\" or\n container.image.repository endswith \".amazonaws.com/eks/kube-proxy\"))\n","tags":null,"enabled":"true","dependencies":["macro:allowed_aws_ecr_registry_root_for_eks:1a39a8e2c5b37345d398dcc5754b18b6"],"used_by":["macro:falco_privileged_containers:9b4ba98f48c4031d87b99b489d62ca74"],"type":"macro","hash":"6146df7a3c8fbe8fc4d8439f3675a6ce"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1813,L1814","required_engine_version":"13","name":"aws_eks_image_sensitive_mount","macro":"aws_eks_image_sensitive_mount","condition":"(allowed_aws_ecr_registry_root_for_eks and container.image.repository endswith \".amazonaws.com/amazon-k8s-cni\")\n","tags":null,"enabled":"true","dependencies":["macro:allowed_aws_ecr_registry_root_for_eks:1a39a8e2c5b37345d398dcc5754b18b6"],"used_by":["macro:falco_sensitive_mount_containers:cb4f45a3a0c7e25807950729fa0583e9"],"type":"macro","hash":"3608173c8035e2501d82c68d9c1fd252"},{"file_name":"falco_rules.yaml","comment":"# These images are allowed both to run with --privileged and to mount\n# sensitive paths from the host filesystem.\n#\n# NOTE: This list is only provided for backwards compatibility with\n# older local falco rules files that may have been appending to\n# trusted_images. To make customizations, it's better to add images to\n# either privileged_images or falco_sensitive_mount_images.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1824,L1825","required_engine_version":"13","name":"trusted_images","list":"trusted_images","tags":null,"enabled":"true","used_by":["macro:falco_privileged_containers:9b4ba98f48c4031d87b99b489d62ca74","macro:falco_sensitive_mount_containers:cb4f45a3a0c7e25807950729fa0583e9","rule:Detect outbound connections to common miner pool ports:3f01c102c6d26af968d5eb6b6777085d","rule:Execution from /dev/shm:d11fc15d58c80066743faeab957a1684"],"type":"list","hash":"b8b0db0ef4ed293fcc7d4192f53599fa"},{"file_name":"falco_rules.yaml","comment":"# Add conditions to this macro (probably in a separate file,\n# overwriting this macro) to specify additional containers that are\n# trusted and therefore allowed to run privileged *and* with sensitive\n# mounts.\n#\n# Like trusted_images, this is deprecated in favor of\n# user_privileged_containers and user_sensitive_mount_containers and\n# is only provided for backwards compatibility.\n#\n# In this file, it just takes one of the images in trusted_containers\n# and repeats it.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1838,L1839","required_engine_version":"13","name":"user_trusted_containers","macro":"user_trusted_containers","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["macro:falco_privileged_containers:9b4ba98f48c4031d87b99b489d62ca74","macro:falco_sensitive_mount_containers:cb4f45a3a0c7e25807950729fa0583e9"],"type":"macro","hash":"83dc258d4e778da799e1d75b6582f967"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1841,L1842","required_engine_version":"13","name":"sematext_images","list":"sematext_images","items":["docker.io/sematext/sematext-agent-docker","docker.io/sematext/agent","docker.io/sematext/logagent","registry.access.redhat.com/sematext/sematext-agent-docker","registry.access.redhat.com/sematext/agent","registry.access.redhat.com/sematext/logagent"],"tags":null,"enabled":"true","type":"list","hash":"af95e235bec59a2fb0ccb358794c7980"},{"file_name":"falco_rules.yaml","comment":"# Falco containers","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1848,L1850","required_engine_version":"13","name":"falco_containers","list":"falco_containers","items":["falcosecurity/falco","docker.io/falcosecurity/falco","public.ecr.aws/falcosecurity/falco"],"tags":null,"enabled":"true","used_by":["macro:k8s_containers:d8bdacbfed1ae82231bffc00d31c49e3","macro:trusted_images_query_miner_domain_dns:09520dcb5b734826bb1a346b6e5d8be3"],"type":"list","hash":"88616fd0dac29b81cc6b368ce116b9f4"},{"file_name":"falco_rules.yaml","comment":"# Falco no driver containers","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1855,L1857","required_engine_version":"13","name":"falco_no_driver_containers","list":"falco_no_driver_containers","items":["falcosecurity/falco-no-driver","docker.io/falcosecurity/falco-no-driver","public.ecr.aws/falcosecurity/falco-no-driver"],"tags":null,"enabled":"true","used_by":["macro:k8s_containers:d8bdacbfed1ae82231bffc00d31c49e3"],"type":"list","hash":"4f989b0d285e037e0ff36043120df432"},{"file_name":"falco_rules.yaml","comment":"# These container images are allowed to run with --privileged and full set of capabilities","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1862,L1863","required_engine_version":"13","name":"falco_privileged_images","list":"falco_privileged_images","items":["falco_containers","docker.io/calico/node","calico/node","docker.io/cloudnativelabs/kube-router","docker.io/docker/ucp-agent","docker.io/mesosphere/mesos-slave","docker.io/rook/toolbox","docker.io/sysdig/sysdig","gcr.io/google_containers/kube-proxy","gcr.io/google-containers/startup-script","gcr.io/projectcalico-org/node","gke.gcr.io/kube-proxy","gke.gcr.io/gke-metadata-server","gke.gcr.io/netd-amd64","gke.gcr.io/watcher-daemonset","gcr.io/google-containers/prometheus-to-sd","k8s.gcr.io/ip-masq-agent-amd64","k8s.gcr.io/kube-proxy","k8s.gcr.io/prometheus-to-sd","quay.io/calico/node","sysdig/sysdig","sematext_images","k8s.gcr.io/dns/k8s-dns-node-cache"],"tags":null,"enabled":"true","used_by":["rule:Create Privileged Pod:70ca8c72d4fffc0c2f21c8aa705141fd","macro:falco_privileged_containers:9b4ba98f48c4031d87b99b489d62ca74","rule:Execution from /dev/shm:d11fc15d58c80066743faeab957a1684"],"type":"list","hash":"fcbbd9234536bd53a20eb8d98e3fd443"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1889,L1890","required_engine_version":"13","name":"falco_privileged_containers","macro":"falco_privileged_containers","condition":"(openshift_image or user_trusted_containers or aws_eks_core_images or container.image.repository in (trusted_images) or container.image.repository in (falco_privileged_images) or container.image.repository startswith istio/proxy_ or container.image.repository startswith quay.io/sysdig/)","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863","macro:openshift_image:a963c49d809c7db284d12a2020ad26b8","macro:aws_eks_core_images:6146df7a3c8fbe8fc4d8439f3675a6ce","list:trusted_images:b8b0db0ef4ed293fcc7d4192f53599fa","macro:user_trusted_containers:83dc258d4e778da799e1d75b6582f967","list:falco_privileged_images:fcbbd9234536bd53a20eb8d98e3fd443"],"used_by":["rule:Launch Privileged Container:b2519a12fb87e0645a80043bd931f62f","rule:Launch Excessively Capable Container:8091ae198eef3f103d229b04597684aa"],"type":"macro","hash":"9b4ba98f48c4031d87b99b489d62ca74"},{"file_name":"falco_rules.yaml","comment":"# Add conditions to this macro (probably in a separate file,\n# overwriting this macro) to specify additional containers that are\n# allowed to run privileged\n#\n# In this file, it just takes one of the images in falco_privileged_images\n# and repeats it.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1904,L1905","required_engine_version":"13","name":"user_privileged_containers","macro":"user_privileged_containers","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Launch Privileged Container:b2519a12fb87e0645a80043bd931f62f","rule:Launch Excessively Capable Container:8091ae198eef3f103d229b04597684aa"],"type":"macro","hash":"605f400a686e1bec4f1e18414be552c5"},{"file_name":"falco_rules.yaml","comment":"# These container images are allowed to mount sensitive paths from the\n# host filesystem.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1909,L1910","required_engine_version":"13","name":"falco_sensitive_mount_images","list":"falco_sensitive_mount_images","items":["falco_containers","docker.io/sysdig/sysdig","sysdig/sysdig","gcr.io/google_containers/hyperkube","gcr.io/google_containers/kube-proxy","docker.io/calico/node","docker.io/rook/toolbox","docker.io/cloudnativelabs/kube-router","docker.io/consul","docker.io/datadog/docker-dd-agent","docker.io/datadog/agent","docker.io/docker/ucp-agent","docker.io/gliderlabs/logspout","docker.io/netdata/netdata","docker.io/google/cadvisor","docker.io/prom/node-exporter","amazon/amazon-ecs-agent","prom/node-exporter","amazon/cloudwatch-agent"],"tags":null,"enabled":"true","used_by":["rule:Create Sensitive Mount Pod:754dc8b656feadac3eca6a1d5923ae2e","macro:falco_sensitive_mount_containers:cb4f45a3a0c7e25807950729fa0583e9"],"type":"list","hash":"b9e19fd16576e5fc4fbb3507fc7bc452"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1921,L1922","required_engine_version":"13","name":"falco_sensitive_mount_containers","macro":"falco_sensitive_mount_containers","condition":"(user_trusted_containers or aws_eks_image_sensitive_mount or container.image.repository in (trusted_images) or container.image.repository in (falco_sensitive_mount_images) or container.image.repository startswith quay.io/sysdig/ or container.image.repository=k8scloudprovider/cinder-csi-plugin)","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863","macro:aws_eks_image_sensitive_mount:3608173c8035e2501d82c68d9c1fd252","list:trusted_images:b8b0db0ef4ed293fcc7d4192f53599fa","macro:user_trusted_containers:83dc258d4e778da799e1d75b6582f967","list:falco_sensitive_mount_images:b9e19fd16576e5fc4fbb3507fc7bc452","macro:sensitive_mount:0137f89a3bc9f6d0ad2b73f4f983bf40"],"used_by":["rule:Launch Sensitive Mount Container:25f080f38071f3f9f37a2475ddee8017"],"type":"macro","hash":"cb4f45a3a0c7e25807950729fa0583e9"},{"file_name":"falco_rules.yaml","comment":"# Add conditions to this macro (probably in a separate file,\n# overwriting this macro) to specify additional containers that are\n# allowed to perform sensitive mounts.\n#\n# In this file, it just takes one of the images in falco_sensitive_mount_images\n# and repeats it.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1935,L1936","required_engine_version":"13","name":"user_sensitive_mount_containers","macro":"user_sensitive_mount_containers","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Launch Sensitive Mount Container:25f080f38071f3f9f37a2475ddee8017"],"type":"macro","hash":"f0bae3b600b45943c88848d69ff0511b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1938,L1948","required_engine_version":"13","name":"Launch Privileged Container","rule":"Launch Privileged Container","condition":"container_started and container and container.privileged=true and not falco_privileged_containers and not user_privileged_containers and not redhat_image\n","desc":"Detect the initial process started in a privileged container. Exceptions are made for known trusted images.","output":"Privileged container started (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid %container.info image=%container.image.repository:%container.image.tag)","priority":"INFO","source":"syscalls","tags":["container","cis","mitre_privilege_escalation","mitre_lateral_movement","T1610"],"enabled":"true","dependencies":["list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:container_started:9c5e39660ca4df75897d1230d8dbae77","list:redhat_image:ee4862446552668e30ad796f2ed876ea","list:falco_privileged_containers:9b4ba98f48c4031d87b99b489d62ca74","list:user_privileged_containers:605f400a686e1bec4f1e18414be552c5"],"type":"rule","hash":"b2519a12fb87e0645a80043bd931f62f"},{"file_name":"falco_rules.yaml","comment":"# These capabilities were used in the past to escape from containers","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1951,L1952","required_engine_version":"13","name":"excessively_capable_container","macro":"excessively_capable_container","condition":"(thread.cap_permitted contains CAP_SYS_ADMIN or thread.cap_permitted contains CAP_SYS_MODULE or thread.cap_permitted contains CAP_SYS_RAWIO or thread.cap_permitted contains CAP_SYS_PTRACE or thread.cap_permitted contains CAP_SYS_BOOT or thread.cap_permitted contains CAP_SYSLOG or thread.cap_permitted contains CAP_DAC_READ_SEARCH or thread.cap_permitted contains CAP_NET_ADMIN or thread.cap_permitted contains CAP_BPF)\n","tags":null,"enabled":"true","used_by":["rule:Launch Excessively Capable Container:8091ae198eef3f103d229b04597684aa"],"type":"macro","hash":"a1f7d15b202929110c11b13583fe0dcf"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1963,L1972","required_engine_version":"13","name":"Launch Excessively Capable Container","rule":"Launch Excessively Capable Container","condition":"container_started and container and excessively_capable_container and not falco_privileged_containers and not user_privileged_containers\n","desc":"Detect container started with a powerful set of capabilities. Exceptions are made for known trusted images.","output":"Excessively capable container started (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid %container.info image=%container.image.repository:%container.image.tag cap_permitted=%thread.cap_permitted)","priority":"INFO","source":"syscalls","tags":["container","cis","mitre_privilege_escalation","mitre_lateral_movement","T1610"],"enabled":"true","dependencies":["list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:container_started:9c5e39660ca4df75897d1230d8dbae77","list:falco_privileged_containers:9b4ba98f48c4031d87b99b489d62ca74","list:user_privileged_containers:605f400a686e1bec4f1e18414be552c5","list:excessively_capable_container:a1f7d15b202929110c11b13583fe0dcf"],"type":"rule","hash":"8091ae198eef3f103d229b04597684aa"},{"file_name":"falco_rules.yaml","comment":"# For now, only considering a full mount of /etc as\n# sensitive. Ideally, this would also consider all subdirectories\n# below /etc as well, but the globbing mechanism\n# doesn't allow exclusions of a full pattern, only single characters.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L1979,L1980","required_engine_version":"13","name":"sensitive_mount","macro":"sensitive_mount","condition":"(container.mount.dest[/proc*] != \"N/A\" or container.mount.dest[/var/run/docker.sock] != \"N/A\" or container.mount.dest[/var/run/crio/crio.sock] != \"N/A\" or container.mount.dest[/run/containerd/containerd.sock] != \"N/A\" or container.mount.dest[/var/lib/kubelet] != \"N/A\" or container.mount.dest[/var/lib/kubelet/pki] != \"N/A\" or container.mount.dest[/] != \"N/A\" or container.mount.dest[/home/admin] != \"N/A\" or container.mount.dest[/etc] != \"N/A\" or container.mount.dest[/etc/kubernetes] != \"N/A\" or container.mount.dest[/etc/kubernetes/manifests] != \"N/A\" or container.mount.dest[/root*] != \"N/A\")","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["rule:Create Sensitive Mount Pod:754dc8b656feadac3eca6a1d5923ae2e","macro:falco_sensitive_mount_containers:cb4f45a3a0c7e25807950729fa0583e9","rule:Launch Sensitive Mount Container:25f080f38071f3f9f37a2475ddee8017"],"type":"macro","hash":"0137f89a3bc9f6d0ad2b73f4f983bf40"},{"file_name":"falco_rules.yaml","comment":"# The steps libcontainer performs to set up the root program for a container are:\n# - clone + exec self to a program runc:[0:PARENT]\n# - clone a program runc:[1:CHILD] which sets up all the namespaces\n# - clone a second program runc:[2:INIT] + exec to the root program.\n#   The parent of runc:[2:INIT] is runc:0:PARENT]\n# As soon as 1:CHILD is created, 0:PARENT exits, so there's a race\n#   where at the time 2:INIT execs the root program, 0:PARENT might have\n#   already exited, or might still be around. So we handle both.\n# We also let runc:[1:CHILD] count as the parent process, which can occur\n# when we lose events and lose track of state.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2004,L2005","required_engine_version":"13","name":"container_entrypoint","macro":"container_entrypoint","condition":"(not proc.pname exists or proc.pname in (runc:[0:PARENT], runc:[1:CHILD], runc, docker-runc, exe, docker-runc-cur))","tags":null,"enabled":"true","used_by":["rule:Terminal shell in container:1a24c2ccf3a790d0c04e3858f7439ab4"],"type":"macro","hash":"26bc459b2105c039deb4460ebd89573f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2007,L2018","required_engine_version":"13","name":"Launch Sensitive Mount Container","rule":"Launch Sensitive Mount Container","condition":"container_started and container and sensitive_mount and not falco_sensitive_mount_containers and not user_sensitive_mount_containers\n","desc":"Detect the initial process started by a container that has a mount from a sensitive host directory (i.e. /proc). Exceptions are made for known trusted images.\n","output":"Container with sensitive mount started (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid %container.info image=%container.image.repository:%container.image.tag mounts=%container.mounts)","priority":"INFO","source":"syscalls","tags":["container","cis","mitre_lateral_movement","T1610"],"enabled":"true","dependencies":["list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:container_started:9c5e39660ca4df75897d1230d8dbae77","list:falco_sensitive_mount_containers:cb4f45a3a0c7e25807950729fa0583e9","list:user_sensitive_mount_containers:f0bae3b600b45943c88848d69ff0511b","list:sensitive_mount:0137f89a3bc9f6d0ad2b73f4f983bf40"],"type":"rule","hash":"25f080f38071f3f9f37a2475ddee8017"},{"file_name":"falco_rules.yaml","comment":"# In a local/user rules file, you could override this macro to\n# explicitly enumerate the container images that you want to run in\n# your environment. In this main falco rules file, there isn't any way\n# to know all the containers that can run, so any container is\n# allowed, by using a filter that is guaranteed to evaluate to true.\n# In the overridden macro, the condition would look something like\n# (container.image.repository = vendor/container-1 or\n# container.image.repository = vendor/container-2 or ...)\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2029,L2030","required_engine_version":"13","name":"allowed_containers","macro":"allowed_containers","condition":"(container.id exists)","tags":null,"enabled":"true","used_by":["rule:Launch Disallowed Container:ae4f6c0ee9508cea28f4a8b9b2034b49"],"type":"macro","hash":"3853afa25aa203914c863c8818848499"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2032,L2038","required_engine_version":"13","name":"Launch Disallowed Container","rule":"Launch Disallowed Container","condition":"container_started and container and not allowed_containers","desc":"Detect the initial process started by a container that is not in a list of allowed containers.\n","output":"Container started and not in allowed list (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid %container.info image=%container.image.repository:%container.image.tag)","priority":"WARNING","source":"syscalls","tags":["container","mitre_lateral_movement","T1610"],"enabled":"true","dependencies":["list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:container_started:9c5e39660ca4df75897d1230d8dbae77","list:allowed_containers:3853afa25aa203914c863c8818848499"],"type":"rule","hash":"ae4f6c0ee9508cea28f4a8b9b2034b49"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2040,L2041","required_engine_version":"13","name":"user_known_system_user_login","macro":"user_known_system_user_login","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:System user interactive:5bdbd778450a0e3fa8c0b9c8261f5326"],"type":"macro","hash":"c220c191248c206685113a98cf6cc4f4"},{"file_name":"falco_rules.yaml","comment":"# Anything run interactively by root\n# - condition: evt.type != switch and user.name = root and proc.name != sshd and interactive\n#  output: \"Interactive root (%user.name %proc.name %evt.dir %evt.type %evt.args %fd.name)\"\n#  priority: WARNING\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2048,L2053","required_engine_version":"13","name":"System user interactive","rule":"System user interactive","condition":"spawned_process and system_users and interactive and not user_known_system_user_login","desc":"an attempt to run interactive commands by a system (i.e. non-login) user","output":"System user ran an interactive command (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid container_id=%container.id image=%container.image.repository)","priority":"INFO","source":"syscalls","tags":["host","container","users","mitre_execution","T1059"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:interactive:fe88c03a1958b4259f0c51d68eed3213","list:system_users:ae2ad3d3da10c2072175ce20624812d4","list:user_known_system_user_login:c220c191248c206685113a98cf6cc4f4"],"type":"rule","hash":"5bdbd778450a0e3fa8c0b9c8261f5326"},{"file_name":"falco_rules.yaml","comment":"# In some cases, a shell is expected to be run in a container. For example, configuration\n# management software may do this, which is expected.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2057,L2058","required_engine_version":"13","name":"user_expected_terminal_shell_in_container_conditions","macro":"user_expected_terminal_shell_in_container_conditions","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Terminal shell in container:1a24c2ccf3a790d0c04e3858f7439ab4"],"type":"macro","hash":"506bd5cc090648cf6e9411357909e53d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2060,L2071","required_engine_version":"13","name":"Terminal shell in container","rule":"Terminal shell in container","condition":"spawned_process and container and shell_procs and proc.tty != 0 and container_entrypoint and not user_expected_terminal_shell_in_container_conditions\n","desc":"A shell was used as the entrypoint/exec point into a container with an attached terminal.","output":"A shell was spawned in a container with an attached terminal (user=%user.name user_loginuid=%user.loginuid %container.info shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline pid=%proc.pid terminal=%proc.tty container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["container","shell","mitre_execution","T1059"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:shell_procs:8907863a6a74678a4246f35930a29fe1","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:container_entrypoint:26bc459b2105c039deb4460ebd89573f","list:user_expected_terminal_shell_in_container_conditions:506bd5cc090648cf6e9411357909e53d"],"type":"rule","hash":"1a24c2ccf3a790d0c04e3858f7439ab4"},{"file_name":"falco_rules.yaml","comment":"# For some container types (mesos), there isn't a container image to\n# work with, and the container name is autogenerated, so there isn't\n# any stable aspect of the software to work with. In this case, we\n# fall back to allowing certain command lines.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2078,L2079","required_engine_version":"13","name":"known_shell_spawn_cmdlines","list":"known_shell_spawn_cmdlines","items":["\"sh -c uname -p 2\u003e /dev/null\"","\"sh -c uname -s 2\u003e\u00261\"","\"sh -c uname -r 2\u003e\u00261\"","\"sh -c uname -v 2\u003e\u00261\"","\"sh -c uname -a 2\u003e\u00261\"","\"sh -c ruby -v 2\u003e\u00261\"","\"sh -c getconf CLK_TCK\"","\"sh -c getconf PAGESIZE\"","\"sh -c LC_ALL=C LANG=C /sbin/ldconfig -p 2\u003e/dev/null\"","\"sh -c LANG=C /sbin/ldconfig -p 2\u003e/dev/null\"","\"sh -c /sbin/ldconfig -p 2\u003e/dev/null\"","\"sh -c stty -a 2\u003e/dev/null\"","\"sh -c stty -a \u003c /dev/tty\"","\"sh -c stty -g \u003c /dev/tty\"","\"sh -c node index.js\"","\"sh -c node index\"","\"sh -c node ./src/start.js\"","\"sh -c node app.js\"","\"sh -c node -e \\\"require('nan')\\\"\"","\"sh -c node -e \\\"require('nan')\\\")\"","\"sh -c node $NODE_DEBUG_OPTION index.js \"","\"sh -c crontab -l 2\"","\"sh -c lsb_release -a\"","\"sh -c lsb_release -is 2\u003e/dev/null\"","\"sh -c whoami\"","\"sh -c node_modules/.bin/bower-installer\"","\"sh -c /bin/hostname -f 2\u003e /dev/null\"","\"sh -c locale -a\"","\"sh -c  -t -i\"","\"sh -c openssl version\"","\"bash -c id -Gn kafadmin\"","\"sh -c /bin/sh -c 'date +%%s'\"","\"sh -c /usr/share/lighttpd/create-mime.conf.pl\""],"tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"list","hash":"a471b7368b7e78eb6da1a59b45d22732"},{"file_name":"falco_rules.yaml","comment":"# This list allows for easy additions to the set of commands allowed\n# to run shells in containers without having to without having to copy\n# and override the entire run shell in container macro. Once\n# https://github.com/falcosecurity/falco/issues/255 is fixed this will be a\n# bit easier, as someone could append of any of the existing lists.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2120,L2121","required_engine_version":"13","name":"user_known_shell_spawn_binaries","list":"user_known_shell_spawn_binaries","tags":null,"enabled":"true","used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"list","hash":"aee0480002d472c37c865d1f651a4c77"},{"file_name":"falco_rules.yaml","comment":"# This macro allows for easy additions to the set of commands allowed\n# to run shells in containers without having to override the entire\n# rule. Its default value is an expression that always is false, which\n# becomes true when the \"not ...\" in the rule is applied.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2127,L2128","required_engine_version":"13","name":"user_shell_container_exclusions","macro":"user_shell_container_exclusions","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Run shell untrusted:551646aedeb1120e4db55fddbd6aff15"],"type":"macro","hash":"f0b59b425c9d3204fb50ec6e436e8cd7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2130,L2131","required_engine_version":"13","name":"login_doing_dns_lookup","macro":"login_doing_dns_lookup","condition":"(proc.name=login and fd.l4proto=udp and fd.sport=53)","tags":null,"enabled":"true","used_by":["rule:System procs network activity:ebe3e03115e4eb21a30e0e5b9e6a9f55"],"type":"macro","hash":"4ec383ddc1264ee9f9b1170dbd2318a5"},{"file_name":"falco_rules.yaml","comment":"# sockfamily ip is to exclude certain processes (like 'groups') that communicate on unix-domain sockets\n# systemd can listen on ports to launch things like sshd on demand","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2135,L2147","required_engine_version":"13","name":"System procs network activity","rule":"System procs network activity","condition":"(fd.sockfamily = ip and (system_procs or proc.name in (shell_binaries))) and (inbound_outbound) and not proc.name in (known_system_procs_network_activity_binaries) and not login_doing_dns_lookup and not user_expected_system_procs_network_activity_conditions\n","desc":"any network activity performed by system binaries that are not expected to send or receive any network traffic","output":"Known system binary sent/received network traffic (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid connection=%fd.name container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","network","mitre_exfiltration","T1059","TA0011"],"enabled":"true","dependencies":["list:shell_binaries:af03e5f14f4aa2d1505ec180e1c58caf","list:system_procs:1626c650eb514b1780d01d83b1609b2f","list:inbound:a8e6fe5b9e68f30a146cefebaa7edcc3","list:outbound:b5229dfdd9136d1c772f9070f3095016","list:inbound_outbound:5b954dcc69c9cfaf014ba8fbebce7921","list:login_doing_dns_lookup:4ec383ddc1264ee9f9b1170dbd2318a5","list:known_system_procs_network_activity_binaries:872a8f7e7638b9af9a7cbef871e3df37","list:user_expected_system_procs_network_activity_conditions:2c633a138f025b38353d5ed0477bfd72"],"type":"rule","hash":"ebe3e03115e4eb21a30e0e5b9e6a9f55"},{"file_name":"falco_rules.yaml","comment":"# This list allows easily whitelisting system proc names that are\n# expected to communicate on the network.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2151,L2152","required_engine_version":"13","name":"known_system_procs_network_activity_binaries","list":"known_system_procs_network_activity_binaries","items":["systemd","hostid","id"],"tags":null,"enabled":"true","used_by":["rule:System procs network activity:ebe3e03115e4eb21a30e0e5b9e6a9f55"],"type":"list","hash":"872a8f7e7638b9af9a7cbef871e3df37"},{"file_name":"falco_rules.yaml","comment":"# This macro allows specifying conditions under which a system binary\n# is allowed to communicate on the network. For instance, only specific\n# proc.cmdline values could be allowed to be more granular in what is\n# allowed.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2158,L2159","required_engine_version":"13","name":"user_expected_system_procs_network_activity_conditions","macro":"user_expected_system_procs_network_activity_conditions","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:System procs network activity:ebe3e03115e4eb21a30e0e5b9e6a9f55"],"type":"macro","hash":"2c633a138f025b38353d5ed0477bfd72"},{"file_name":"falco_rules.yaml","comment":"# When filled in, this should look something like:\n# (proc.env contains \"HTTP_PROXY=http://my.http.proxy.com \")\n# The trailing space is intentional so avoid matching on prefixes of\n# the actual proxy.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2165,L2166","required_engine_version":"13","name":"allowed_ssh_proxy_env","macro":"allowed_ssh_proxy_env","condition":"(always_true)","tags":null,"enabled":"true","dependencies":["macro:always_true:3810a10835140916e579520fac814823"],"used_by":["rule:Program run with disallowed http proxy env:cf0f7f713bd9ca1baa7ef93da5ca1a3a"],"type":"macro","hash":"ee1096508e1dd9b7b7b2a990d6fd1cb5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2168,L2169","required_engine_version":"13","name":"http_proxy_binaries","list":"http_proxy_binaries","items":["curl","wget"],"tags":null,"enabled":"true","used_by":["macro:http_proxy_procs:c4c640cf1bae6ee65b169fa54dc8639b"],"type":"list","hash":"f82dd7ac4cd57f3212ea031a63900282"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2171,L2172","required_engine_version":"13","name":"http_proxy_procs","macro":"http_proxy_procs","condition":"(proc.name in (http_proxy_binaries))","tags":null,"enabled":"true","dependencies":["list:http_proxy_binaries:f82dd7ac4cd57f3212ea031a63900282"],"used_by":["rule:Program run with disallowed http proxy env:cf0f7f713bd9ca1baa7ef93da5ca1a3a"],"type":"macro","hash":"c4c640cf1bae6ee65b169fa54dc8639b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2174,L2186","required_engine_version":"13","name":"Program run with disallowed http proxy env","rule":"Program run with disallowed http proxy env","condition":"spawned_process and http_proxy_procs and not allowed_ssh_proxy_env and proc.env icontains HTTP_PROXY\n","desc":"An attempt to run a program with a disallowed HTTP_PROXY environment variable","output":"Program run with disallowed HTTP_PROXY environment variable (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid env=%proc.env parent=%proc.pname container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","users","mitre_command_and_control","T1090","T1204"],"enabled":"false","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:allowed_ssh_proxy_env:ee1096508e1dd9b7b7b2a990d6fd1cb5","list:http_proxy_procs:c4c640cf1bae6ee65b169fa54dc8639b"],"type":"rule","hash":"cf0f7f713bd9ca1baa7ef93da5ca1a3a"},{"file_name":"falco_rules.yaml","comment":"# In some environments, any attempt by a interpreted program (perl,\n# python, ruby, etc) to listen for incoming connections or perform\n# outgoing connections might be suspicious. These rules are not\n# enabled by default.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2193,L2202","required_engine_version":"13","name":"Interpreted procs inbound network activity","rule":"Interpreted procs inbound network activity","condition":"(inbound and interpreted_procs)\n","desc":"Any inbound network activity performed by any interpreted program (perl, python, ruby, etc.)","output":"Interpreted program received/listened for network traffic (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid connection=%fd.name container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","network","mitre_exfiltration","TA0011"],"enabled":"false","dependencies":["list:interpreted_procs:da079be04ff9eb76c2091349ef2a40c3","list:inbound:a8e6fe5b9e68f30a146cefebaa7edcc3"],"type":"rule","hash":"692f4100b04d58b3f8aed51afb8b51cd"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2204,L2213","required_engine_version":"13","name":"Interpreted procs outbound network activity","rule":"Interpreted procs outbound network activity","condition":"(outbound and interpreted_procs)\n","desc":"Any outbound network activity performed by any interpreted program (perl, python, ruby, etc.)","output":"Interpreted program performed outgoing network connection (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid connection=%fd.name container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","network","mitre_exfiltration","TA0011"],"enabled":"false","dependencies":["list:interpreted_procs:da079be04ff9eb76c2091349ef2a40c3","list:outbound:b5229dfdd9136d1c772f9070f3095016"],"type":"rule","hash":"f44c77a690d44b9d8004d3283a63cb92"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2215,L2216","required_engine_version":"13","name":"openvpn_udp_ports","list":"openvpn_udp_ports","items":["1194","1197","1198","8080","9201"],"tags":null,"enabled":"true","type":"list","hash":"74086f962ebd87e799e99d11027b7888"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2218,L2219","required_engine_version":"13","name":"l2tp_udp_ports","list":"l2tp_udp_ports","items":["500","1701","4500","10000"],"tags":null,"enabled":"true","type":"list","hash":"fb379d7ea4c252e5453e85fe69596a5e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2221,L2222","required_engine_version":"13","name":"statsd_ports","list":"statsd_ports","items":["8125"],"tags":null,"enabled":"true","type":"list","hash":"e230e33cc81c6b6ff638b306a49783e5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2224,L2225","required_engine_version":"13","name":"ntp_ports","list":"ntp_ports","items":["123"],"tags":null,"enabled":"true","type":"list","hash":"bb4526d158554aa5a89bb22f202fc010"},{"file_name":"falco_rules.yaml","comment":"# Some applications will connect a udp socket to an address only to\n# test connectivity. Assuming the udp connect works, they will follow\n# up with a tcp connect that actually sends/receives data.\n#\n# With that in mind, we listed a few commonly seen ports here to avoid\n# some false positives. In addition, we make the main rule opt-in, so\n# it's disabled by default.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2235,L2236","required_engine_version":"13","name":"test_connect_ports","list":"test_connect_ports","items":["0","9","80","3306"],"tags":null,"enabled":"true","type":"list","hash":"e6316d75c3531f3b22985f6269d93bb9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2238,L2239","required_engine_version":"13","name":"expected_udp_ports","list":"expected_udp_ports","items":["53","openvpn_udp_ports","l2tp_udp_ports","statsd_ports","ntp_ports","test_connect_ports"],"tags":null,"enabled":"true","used_by":["macro:expected_udp_traffic:2b8e0588e46f360f53357e053067721c"],"type":"list","hash":"c7b8ee7c0e71391f22c791e8dde1d862"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2241,L2242","required_engine_version":"13","name":"expected_udp_traffic","macro":"expected_udp_traffic","condition":"fd.port in (expected_udp_ports)","tags":null,"enabled":"true","dependencies":["list:expected_udp_ports:c7b8ee7c0e71391f22c791e8dde1d862"],"used_by":["rule:Unexpected UDP Traffic:c56289ee4fb60625edda0baff211e42b"],"type":"macro","hash":"2b8e0588e46f360f53357e053067721c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2244,L2252","required_engine_version":"13","name":"Unexpected UDP Traffic","rule":"Unexpected UDP Traffic","condition":"(inbound_outbound) and fd.l4proto=udp and not expected_udp_traffic","desc":"UDP traffic not on port 53 (DNS) or other commonly used ports","output":"Unexpected UDP Traffic Seen (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid connection=%fd.name proto=%fd.l4proto evt=%evt.type %evt.args container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","network","mitre_exfiltration","TA0011"],"enabled":"false","dependencies":["list:inbound:a8e6fe5b9e68f30a146cefebaa7edcc3","list:outbound:b5229dfdd9136d1c772f9070f3095016","list:inbound_outbound:5b954dcc69c9cfaf014ba8fbebce7921","list:expected_udp_traffic:2b8e0588e46f360f53357e053067721c"],"type":"rule","hash":"c56289ee4fb60625edda0baff211e42b"},{"file_name":"falco_rules.yaml","comment":"# With the current restriction on system calls handled by falco\n# (e.g. excluding read/write/sendto/recvfrom/etc, this rule won't\n# trigger).\n# - rule: Ssh error in syslog\n#   desc: any ssh errors (failed logins, disconnects, ...) sent to syslog\n#   condition: syslog and ssh_error_message and evt.dir = \u003c\n#   output: \"sshd sent error message to syslog (error=%evt.buffer)\"\n#   priority: WARNING\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2263,L2264","required_engine_version":"13","name":"somebody_becoming_themselves","macro":"somebody_becoming_themselves","condition":"((user.name=nobody and evt.arg.uid=nobody) or (user.name=www-data and evt.arg.uid=www-data) or (user.name=_apt and evt.arg.uid=_apt) or (user.name=postfix and evt.arg.uid=postfix) or (user.name=pki-agent and evt.arg.uid=pki-agent) or (user.name=pki-acme and evt.arg.uid=pki-acme) or (user.name=nfsnobody and evt.arg.uid=nfsnobody) or (user.name=postgres and evt.arg.uid=postgres))","tags":null,"enabled":"true","used_by":["rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"macro","hash":"53b9917c91d239d157d82b5c523da5f1"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2273,L2274","required_engine_version":"13","name":"nrpe_becoming_nagios","macro":"nrpe_becoming_nagios","condition":"(proc.name=nrpe and evt.arg.uid=nagios)","tags":null,"enabled":"true","used_by":["rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"macro","hash":"a79dae27b88ba7d262d9b30e322d3966"},{"file_name":"falco_rules.yaml","comment":"# In containers, the user name might be for a uid that exists in the\n# container but not on the host. (See\n# https://github.com/draios/sysdig/issues/954). So in that case, allow\n# a setuid.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2280,L2281","required_engine_version":"13","name":"known_user_in_container","macro":"known_user_in_container","condition":"(container and user.name != \"N/A\")","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"macro","hash":"068a3f594dcb9921289b7525ef804824"},{"file_name":"falco_rules.yaml","comment":"# Add conditions to this macro (probably in a separate file,\n# overwriting this macro) to allow for specific combinations of\n# programs changing users by calling setuid.\n#\n# In this file, it just takes one of the condition in the base macro\n# and repeats it.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2289,L2290","required_engine_version":"13","name":"user_known_non_sudo_setuid_conditions","macro":"user_known_non_sudo_setuid_conditions","condition":"user.name=root","tags":null,"enabled":"true","used_by":["rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63"],"type":"macro","hash":"43d8501f711476de13c5ec689c6786ec"},{"file_name":"falco_rules.yaml","comment":"# sshd, mail programs attempt to setuid to root even when running as non-root. Excluding here to avoid meaningless FPs","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2293,L2312","required_engine_version":"13","name":"Non sudo setuid","rule":"Non sudo setuid","condition":"evt.type=setuid and evt.dir=\u003e and (known_user_in_container or not container) and not (user.name=root or user.uid=0) and not somebody_becoming_themselves and not proc.name in (known_setuid_binaries, userexec_binaries, mail_binaries, docker_binaries,\n                      nomachine_binaries)\nand not proc.name startswith \"runc:\" and not java_running_sdjagent and not nrpe_becoming_nagios and not user_known_non_sudo_setuid_conditions\n","desc":"an attempt to change users by calling setuid. sudo/su are excluded. users \"root\" and \"nobody\" suing to itself are also excluded, as setuid calls typically involve dropping privileges.\n","output":"Unexpected setuid call by non-sudo, non-root program (user=%user.name user_loginuid=%user.loginuid cur_uid=%user.uid parent=%proc.pname command=%proc.cmdline pid=%proc.pid uid=%evt.arg.uid container_id=%container.id image=%container.image.repository)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","users","mitre_privilege_escalation","T1548.001"],"enabled":"true","dependencies":["list:docker_binaries:663cca84b425c42a03acc1f2ee04be85","list:userexec_binaries:a565f19993c396a912312fc67ef23f02","list:known_setuid_binaries:6bcf294bfeb0e3ca956e1278b8c1d47d","list:nomachine_binaries:be10dcfdff8f673dfb82d8bed97c68b9","list:mail_binaries:e80bc600472c458a1eb834ef6cc3608d","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:java_running_sdjagent:481dfc4260e33ac79bc9965859a6da56","list:somebody_becoming_themselves:53b9917c91d239d157d82b5c523da5f1","list:nrpe_becoming_nagios:a79dae27b88ba7d262d9b30e322d3966","list:known_user_in_container:068a3f594dcb9921289b7525ef804824","list:user_known_non_sudo_setuid_conditions:43d8501f711476de13c5ec689c6786ec","list:docker_binaries:663cca84b425c42a03acc1f2ee04be85"],"type":"rule","hash":"7da3924afff60ec8eb7c45c5fd3fda63"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2314,L2315","required_engine_version":"13","name":"user_known_user_management_activities","macro":"user_known_user_management_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"macro","hash":"23d1a029d115829da2c3d05ddc8ba459"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2317,L2318","required_engine_version":"13","name":"chage_list","macro":"chage_list","condition":"(proc.name=chage and (proc.cmdline contains \"-l\" or proc.cmdline contains \"--list\"))","tags":null,"enabled":"true","used_by":["rule:User mgmt binaries:64fa846d6a699ae484ef6dd7e3cea898"],"type":"macro","hash":"3620a9867e0c290eb629656c08a77cba"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2320,L2344","required_engine_version":"13","name":"User mgmt binaries","rule":"User mgmt binaries","condition":"spawned_process and proc.name in (user_mgmt_binaries) and not proc.name in (su, sudo, lastlog, nologin, unix_chkpwd) and not container and not proc.pname in (cron_binaries, systemd, systemd.postins, udev.postinst, run-parts) and not proc.cmdline startswith \"passwd -S\" and not proc.cmdline startswith \"useradd -D\" and not proc.cmdline startswith \"systemd --version\" and not run_by_qualys and not run_by_sumologic_securefiles and not run_by_yum and not run_by_ms_oms and not run_by_google_accounts_daemon and not chage_list and not user_known_user_management_activities\n","desc":"activity by any programs that can manage users, passwords, or permissions. sudo and su are excluded. Activity in containers is also excluded--some containers create custom users on top of a base linux distribution at startup. Some innocuous command lines that don't actually change anything are excluded.\n","output":"User management binary command run outside of container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent=%proc.pname gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4])\n","priority":"NOTICE","source":"syscalls","tags":["host","container","users","software_mgmt","mitre_persistence","T1543","T1098"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:user_mgmt_binaries:2b8476e193b6319359b8500841101a95","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:cron_binaries:6f1f66d014c874287d9333b0ee22b125","list:run_by_qualys:a778e5b0cc0d78490f59b07c87278a0f","list:run_by_sumologic_securefiles:7c02e7e682f4b70adfa6973fbca21120","list:run_by_yum:3330026229d460e4080c1843ca1aef1a","list:run_by_ms_oms:e1538843cd208c4f97c10b5ad2d3f7b9","list:run_by_google_accounts_daemon:d6ec884ac09a5dcfa8a67fa1a5232233","list:user_known_user_management_activities:23d1a029d115829da2c3d05ddc8ba459","list:chage_list:3620a9867e0c290eb629656c08a77cba"],"type":"rule","hash":"64fa846d6a699ae484ef6dd7e3cea898"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2346,L2347","required_engine_version":"13","name":"allowed_dev_files","list":"allowed_dev_files","items":["/dev/null","/dev/stdin","/dev/stdout","/dev/stderr","/dev/random","/dev/urandom","/dev/console","/dev/kmsg"],"tags":null,"enabled":"true","used_by":["rule:Create files below dev:c1ac5692e9c9d8be0dd8c387ee3fe192"],"type":"list","hash":"3273e4d6d4cec7471933423b256c70c8"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2352,L2353","required_engine_version":"13","name":"user_known_create_files_below_dev_activities","macro":"user_known_create_files_below_dev_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Create files below dev:c1ac5692e9c9d8be0dd8c387ee3fe192"],"type":"macro","hash":"e252bfb734f01b620917e7724e620572"},{"file_name":"falco_rules.yaml","comment":"# (we may need to add additional checks against false positives, see:\n# https://bugs.launchpad.net/ubuntu/+source/rkhunter/+bug/86153)","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2357,L2368","required_engine_version":"13","name":"Create files below dev","rule":"Create files below dev","condition":"fd.directory = /dev and (evt.type = creat or (evt.type in (open,openat,openat2) and evt.arg.flags contains O_CREAT)) and not proc.name in (dev_creation_binaries) and not fd.name in (allowed_dev_files) and not fd.name startswith /dev/tty and not user_known_create_files_below_dev_activities\n","desc":"creating any files below /dev other than known programs that manage devices. Some rootkits hide files in /dev.","output":"File created below /dev by untrusted program (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name container_id=%container.id image=%container.image.repository)","priority":"ERROR","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1543","T1083"],"enabled":"true","dependencies":["list:dev_creation_binaries:2de5fcfae70913478022a9d4bd879f48","list:allowed_dev_files:3273e4d6d4cec7471933423b256c70c8","list:user_known_create_files_below_dev_activities:e252bfb734f01b620917e7724e620572"],"type":"rule","hash":"c1ac5692e9c9d8be0dd8c387ee3fe192"},{"file_name":"falco_rules.yaml","comment":"# In a local/user rules file, you could override this macro to\n# explicitly enumerate the container images that you want to allow\n# access to EC2 metadata. In this main falco rules file, there isn't\n# any way to know all the containers that should have access, so any\n# container is allowed, by repeating the \"container\" macro. In the\n# overridden macro, the condition would look something like\n# (container.image.repository = vendor/container-1 or\n# container.image.repository = vendor/container-2 or ...)","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2379,L2380","required_engine_version":"13","name":"ec2_metadata_containers","macro":"ec2_metadata_containers","condition":"container","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["rule:Contact EC2 Instance Metadata Service From Container:ba11587ae5bd52a9b3873b053ab19802"],"type":"macro","hash":"d5f0dfcd1bb7ef57fab8910ab3796682"},{"file_name":"falco_rules.yaml","comment":"# On EC2 instances, 169.254.169.254 is a special IP used to fetch\n# metadata about the instance. It may be desirable to prevent access\n# to this IP from containers.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2385,L2390","required_engine_version":"13","name":"Contact EC2 Instance Metadata Service From Container","rule":"Contact EC2 Instance Metadata Service From Container","condition":"outbound and fd.sip=\"169.254.169.254\" and container and not ec2_metadata_containers","desc":"Detect attempts to contact the EC2 Instance Metadata Service from a container","output":"Outbound connection to EC2 instance metadata service (command=%proc.cmdline pid=%proc.pid connection=%fd.name %container.info image=%container.image.repository:%container.image.tag)","priority":"NOTICE","source":"syscalls","tags":["network","aws","container","mitre_discovery","T1565"],"enabled":"true","dependencies":["list:outbound:b5229dfdd9136d1c772f9070f3095016","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:ec2_metadata_containers:d5f0dfcd1bb7ef57fab8910ab3796682"],"type":"rule","hash":"ba11587ae5bd52a9b3873b053ab19802"},{"file_name":"falco_rules.yaml","comment":"# This rule is not enabled by default, since this rule is for cloud environment(GCP, AWS and Azure) only.\n# You can filter the container that you want to allow access to metadata by overwriting user_known_metadata_access macro.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2396,L2397","required_engine_version":"13","name":"user_known_metadata_access","macro":"user_known_metadata_access","condition":"(k8s.ns.name = \"kube-system\")","tags":null,"enabled":"true","used_by":["rule:Contact cloud metadata service from container:8fb7d622c5da0bd431e4d6d7f7da0f9d"],"type":"macro","hash":"5b070721f88bcb46c40f824af16d98e0"},{"file_name":"falco_rules.yaml","comment":"# On GCP, AWS and Azure, 169.254.169.254 is a special IP used to fetch\n# metadata about the instance. The metadata could be used to get credentials by attackers.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2401,L2407","required_engine_version":"13","name":"Contact cloud metadata service from container","rule":"Contact cloud metadata service from container","condition":"outbound and fd.sip=\"169.254.169.254\" and container and not user_known_metadata_access","desc":"Detect attempts to contact the Cloud Instance Metadata Service from a container","output":"Outbound connection to cloud instance metadata service (command=%proc.cmdline pid=%proc.pid connection=%fd.name %container.info image=%container.image.repository:%container.image.tag)","priority":"NOTICE","source":"syscalls","tags":["network","container","mitre_discovery","T1565"],"enabled":"false","dependencies":["list:outbound:b5229dfdd9136d1c772f9070f3095016","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:user_known_metadata_access:5b070721f88bcb46c40f824af16d98e0"],"type":"rule","hash":"8fb7d622c5da0bd431e4d6d7f7da0f9d"},{"file_name":"falco_rules.yaml","comment":"# Containers from IBM Cloud","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2410,L2412","required_engine_version":"13","name":"ibm_cloud_containers","list":"ibm_cloud_containers","items":["icr.io/ext/sysdig/agent","registry.ng.bluemix.net/armada-master/metrics-server-amd64","registry.ng.bluemix.net/armada-master/olm"],"tags":null,"enabled":"true","used_by":["macro:k8s_containers:d8bdacbfed1ae82231bffc00d31c49e3"],"type":"list","hash":"f4fc34c3b1d9f090b2dc45b4d4f7345f"},{"file_name":"falco_rules.yaml","comment":"# In a local/user rules file, list the namespace or container images that are\n# allowed to contact the K8s API Server from within a container. This\n# might cover cases where the K8s infrastructure itself is running\n# within a container.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2420,L2421","required_engine_version":"13","name":"k8s_containers","macro":"k8s_containers","condition":"(container.image.repository in (gcr.io/google_containers/hyperkube-amd64,\n gcr.io/google_containers/kube2sky,\n docker.io/sysdig/sysdig, sysdig/sysdig,\n fluent/fluentd-kubernetes-daemonset, prom/prometheus,\n falco_containers,\n falco_no_driver_containers,\n ibm_cloud_containers,\n velero/velero,\n quay.io/jetstack/cert-manager-cainjector, weaveworks/kured,\n quay.io/prometheus-operator/prometheus-operator,\n k8s.gcr.io/ingress-nginx/kube-webhook-certgen, quay.io/spotahome/redis-operator,\n registry.opensource.zalan.do/acid/postgres-operator, registry.opensource.zalan.do/acid/postgres-operator-ui,\n rabbitmqoperator/cluster-operator)\n or (k8s.ns.name = \"kube-system\"))\n","tags":null,"enabled":"true","dependencies":["macro:ingress:17f1d7a64442cda6863a4251c2eaf2ee","macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:falco_containers:88616fd0dac29b81cc6b368ce116b9f4","list:falco_no_driver_containers:4f989b0d285e037e0ff36043120df432","list:ibm_cloud_containers:f4fc34c3b1d9f090b2dc45b4d4f7345f"],"used_by":["rule:Create Disallowed Pod:8d71d5de24654fe16db931fbda68825e","rule:Contact K8S API Server From Container:d067eb11f0680c4f94e83770bd307c27"],"type":"macro","hash":"d8bdacbfed1ae82231bffc00d31c49e3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2437,L2438","required_engine_version":"13","name":"k8s_api_server","macro":"k8s_api_server","condition":"(fd.sip.name=\"kubernetes.default.svc.cluster.local\")","tags":null,"enabled":"true","used_by":["rule:Contact K8S API Server From Container:d067eb11f0680c4f94e83770bd307c27"],"type":"macro","hash":"00fa288aff0ae1a736dd65b8e8b2a29d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2440,L2441","required_engine_version":"13","name":"user_known_contact_k8s_api_server_activities","macro":"user_known_contact_k8s_api_server_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Contact K8S API Server From Container:d067eb11f0680c4f94e83770bd307c27"],"type":"macro","hash":"4c6ed813572d74073bccdf798a240244"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2443,L2454","required_engine_version":"13","name":"Contact K8S API Server From Container","rule":"Contact K8S API Server From Container","condition":"evt.type=connect and evt.dir=\u003c and (fd.typechar=4 or fd.typechar=6) and container and not k8s_containers and k8s_api_server and not user_known_contact_k8s_api_server_activities\n","desc":"Detect attempts to contact the K8S API Server from a container","output":"Unexpected connection to K8s API Server from container (command=%proc.cmdline pid=%proc.pid %container.info image=%container.image.repository:%container.image.tag connection=%fd.name)","priority":"NOTICE","source":"syscalls","tags":["network","k8s","container","mitre_discovery","T1565"],"enabled":"true","dependencies":["list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:k8s_containers:d8bdacbfed1ae82231bffc00d31c49e3","list:k8s_api_server:00fa288aff0ae1a736dd65b8e8b2a29d","list:user_known_contact_k8s_api_server_activities:4c6ed813572d74073bccdf798a240244"],"type":"rule","hash":"d067eb11f0680c4f94e83770bd307c27"},{"file_name":"falco_rules.yaml","comment":"# In a local/user rules file, list the container images that are\n# allowed to contact NodePort services from within a container. This\n# might cover cases where the K8s infrastructure itself is running\n# within a container.\n#\n# By default, all containers are allowed to contact NodePort services.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2462,L2463","required_engine_version":"13","name":"nodeport_containers","macro":"nodeport_containers","condition":"container","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["rule:Unexpected K8s NodePort Connection:102da798591e75d1c7fc9ec3e9370169"],"type":"macro","hash":"d08e4abe1246be2869449a98762daa05"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2465,L2470","required_engine_version":"13","name":"Unexpected K8s NodePort Connection","rule":"Unexpected K8s NodePort Connection","condition":"(inbound_outbound) and fd.sport \u003e= 30000 and fd.sport \u003c= 32767 and container and not nodeport_containers","desc":"Detect attempts to use K8s NodePorts from a container","output":"Unexpected K8s NodePort Connection (command=%proc.cmdline pid=%proc.pid connection=%fd.name container_id=%container.id image=%container.image.repository)","priority":"NOTICE","source":"syscalls","tags":["network","k8s","container","mitre_persistence","T1205.001"],"enabled":"true","dependencies":["list:node:36c4536996ca5615dcf9911f068786dc","list:inbound:a8e6fe5b9e68f30a146cefebaa7edcc3","list:outbound:b5229dfdd9136d1c772f9070f3095016","list:inbound_outbound:5b954dcc69c9cfaf014ba8fbebce7921","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:nodeport_containers:d08e4abe1246be2869449a98762daa05"],"type":"rule","hash":"102da798591e75d1c7fc9ec3e9370169"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2472,L2473","required_engine_version":"13","name":"network_tool_binaries","list":"network_tool_binaries","items":["nc","ncat","nmap","dig","tcpdump","tshark","ngrep","telnet","mitmproxy","socat","zmap"],"tags":null,"enabled":"true","used_by":["macro:network_tool_procs:db06ef4151497e9915daaf22f822d822"],"type":"list","hash":"82c1be67dccdbeb9cb00de9c4d6e0a35"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2475,L2476","required_engine_version":"13","name":"network_tool_procs","macro":"network_tool_procs","condition":"(proc.name in (network_tool_binaries))","tags":null,"enabled":"true","dependencies":["list:network_tool_binaries:82c1be67dccdbeb9cb00de9c4d6e0a35"],"used_by":["rule:Launch Suspicious Network Tool in Container:40dd680345890489ed62556af30c3fb2","rule:Launch Suspicious Network Tool on Host:d37b5ddbe83eb9c31c805ae5973d2553"],"type":"macro","hash":"db06ef4151497e9915daaf22f822d822"},{"file_name":"falco_rules.yaml","comment":"# In a local/user rules file, create a condition that matches legitimate uses\n# of a package management process inside a container.\n#\n# For example:\n# - macro: user_known_package_manager_in_container\n#   condition: proc.cmdline=\"dpkg -l\"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2484,L2485","required_engine_version":"13","name":"user_known_package_manager_in_container","macro":"user_known_package_manager_in_container","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Launch Package Management Process in Container:2acaeee8988b0854328b0fbe8c9cf63f"],"type":"macro","hash":"e9db6635f0430b51de8b303990f927a7"},{"file_name":"falco_rules.yaml","comment":"# Container is supposed to be immutable. Package management should be done in building the image.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2488,L2489","required_engine_version":"13","name":"pkg_mgmt_in_kube_proxy","macro":"pkg_mgmt_in_kube_proxy","condition":"proc.cmdline startswith \"update-alternat\" and container.image.repository = \"k8s.gcr.io/kube-proxy\"\n","tags":null,"enabled":"true","used_by":["rule:Launch Package Management Process in Container:2acaeee8988b0854328b0fbe8c9cf63f"],"type":"macro","hash":"14d98ae1880c2d677a202e5c576bf15a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2493,L2507","required_engine_version":"13","name":"Launch Package Management Process in Container","rule":"Launch Package Management Process in Container","condition":"spawned_process and container and user.name != \"_apt\" and package_mgmt_procs and not package_mgmt_ancestor_procs and not user_known_package_manager_in_container and not pkg_mgmt_in_kube_proxy\n","desc":"Package management process ran inside container","output":"Package management process launched in container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"ERROR","source":"syscalls","tags":["container","process","software_mgmt","mitre_persistence","T1505"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:package_mgmt_procs:a69d5abbdc29f4dde6b8ec5c7d0209d6","list:package_mgmt_ancestor_procs:b5f7b9871403d1f16226b65c823c46de","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:user_known_package_manager_in_container:e9db6635f0430b51de8b303990f927a7","list:pkg_mgmt_in_kube_proxy:14d98ae1880c2d677a202e5c576bf15a"],"type":"rule","hash":"2acaeee8988b0854328b0fbe8c9cf63f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2509,L2521","required_engine_version":"13","name":"Netcat Remote Code Execution in Container","rule":"Netcat Remote Code Execution in Container","condition":"spawned_process and container and ((proc.name = \"nc\" and (proc.args contains \"-e\" or proc.args contains \"-c\")) or\n (proc.name = \"ncat\" and (proc.args contains \"--sh-exec\" or proc.args contains \"--exec\" or proc.args contains \"-e \"\n                          or proc.args contains \"-c \" or proc.args contains \"--lua-exec\"))\n)\n","desc":"Netcat Program runs inside container that allows remote code execution","output":"Netcat runs inside container that allows remote code execution (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"WARNING","source":"syscalls","tags":["container","network","process","mitre_execution","T1059"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"type":"rule","hash":"b1be8adba840b7e237a11c3744fc2a3e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2523,L2524","required_engine_version":"13","name":"user_known_network_tool_activities","macro":"user_known_network_tool_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Launch Suspicious Network Tool in Container:40dd680345890489ed62556af30c3fb2","rule:Launch Suspicious Network Tool on Host:d37b5ddbe83eb9c31c805ae5973d2553"],"type":"macro","hash":"9b807c4e0d8ba042426b117cdced8023"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2526,L2534","required_engine_version":"13","name":"Launch Suspicious Network Tool in Container","rule":"Launch Suspicious Network Tool in Container","condition":"spawned_process and container and network_tool_procs and not user_known_network_tool_activities\n","desc":"Detect network tools launched inside container","output":"Network tool launched in container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent_process=%proc.pname container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"NOTICE","source":"syscalls","tags":["container","network","process","mitre_discovery","mitre_exfiltration","T1595","T1046"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:network_tool_procs:db06ef4151497e9915daaf22f822d822","list:user_known_network_tool_activities:9b807c4e0d8ba042426b117cdced8023"],"type":"rule","hash":"40dd680345890489ed62556af30c3fb2"},{"file_name":"falco_rules.yaml","comment":"# This rule is not enabled by default, as there are legitimate use\n# cases for these tools on hosts. If you want to enable it, modify the\n# following macro.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2539,L2540","required_engine_version":"13","name":"consider_network_tools_on_host","macro":"consider_network_tools_on_host","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Launch Suspicious Network Tool on Host:d37b5ddbe83eb9c31c805ae5973d2553"],"type":"macro","hash":"038f6bb7e765ebcbc1d449520d508cb5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2542,L2553","required_engine_version":"13","name":"Launch Suspicious Network Tool on Host","rule":"Launch Suspicious Network Tool on Host","condition":"spawned_process and not container and consider_network_tools_on_host and network_tool_procs and not user_known_network_tool_activities\n","desc":"Detect network tools launched on the host","output":"Network tool launched on host (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent_process=%proc.pname)\n","priority":"NOTICE","source":"syscalls","tags":["host","network","process","mitre_discovery","mitre_exfiltration","T1595","T1046"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:network_tool_procs:db06ef4151497e9915daaf22f822d822","list:user_known_network_tool_activities:9b807c4e0d8ba042426b117cdced8023","list:consider_network_tools_on_host:038f6bb7e765ebcbc1d449520d508cb5"],"type":"rule","hash":"d37b5ddbe83eb9c31c805ae5973d2553"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2555,L2556","required_engine_version":"13","name":"grep_binaries","list":"grep_binaries","items":["grep","egrep","fgrep"],"tags":null,"enabled":"true","used_by":["macro:grep_commands:04176c101a26b7187926f0abb44c4ff6"],"type":"list","hash":"6c151c686d54f0194bc8815228f0fa3b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2558,L2559","required_engine_version":"13","name":"grep_commands","macro":"grep_commands","condition":"(proc.name in (grep_binaries))","tags":null,"enabled":"true","dependencies":["list:grep_binaries:6c151c686d54f0194bc8815228f0fa3b"],"used_by":["rule:Search Private Keys or Passwords:55941ff25a7d8c6253b5a17e4ed20d30","rule:Find AWS Credentials:6f600d3da731ed8b36a42b3e6edc613a"],"type":"macro","hash":"04176c101a26b7187926f0abb44c4ff6"},{"file_name":"falco_rules.yaml","comment":"# a less restrictive search for things that might be passwords/ssh/user etc.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2562,L2563","required_engine_version":"13","name":"grep_more","macro":"grep_more","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["macro:private_key_or_password:0ef2bde6b9b81c59ef2c8881eb3b7107"],"type":"macro","hash":"1f162d2b9d80645c0c17e19656463e53"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2565,L2566","required_engine_version":"13","name":"private_key_or_password","macro":"private_key_or_password","condition":"(proc.args icontains \"BEGIN PRIVATE\" or\n proc.args icontains \"BEGIN OPENSSH PRIVATE\" or\n proc.args icontains \"BEGIN RSA PRIVATE\" or\n proc.args icontains \"BEGIN DSA PRIVATE\" or\n proc.args icontains \"BEGIN EC PRIVATE\" or\n (grep_more and\n  (proc.args icontains \" pass \" or\n   proc.args icontains \" ssh \" or\n   proc.args icontains \" user \"))\n)\n","tags":null,"enabled":"true","dependencies":["macro:grep_more:1f162d2b9d80645c0c17e19656463e53"],"used_by":["rule:Search Private Keys or Passwords:55941ff25a7d8c6253b5a17e4ed20d30"],"type":"macro","hash":"0ef2bde6b9b81c59ef2c8881eb3b7107"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2578,L2592","required_engine_version":"13","name":"Search Private Keys or Passwords","rule":"Search Private Keys or Passwords","condition":"(spawned_process and\n ((grep_commands and private_key_or_password) or\n  (proc.name = \"find\" and (proc.args contains \"id_rsa\" or proc.args contains \"id_dsa\")))\n)\n","desc":"Detect grep private keys or passwords activity.\n","output":"Grep private keys or passwords activities found (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"WARNING","source":"syscalls","tags":["host","container","process","filesystem","mitre_credential_access","T1552.001"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:grep_commands:04176c101a26b7187926f0abb44c4ff6","list:private_key_or_password:0ef2bde6b9b81c59ef2c8881eb3b7107"],"type":"rule","hash":"55941ff25a7d8c6253b5a17e4ed20d30"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2594,L2595","required_engine_version":"13","name":"log_directories","list":"log_directories","items":["/var/log","/dev/log"],"tags":null,"enabled":"true","used_by":["macro:access_log_files:bba37fe39a9099e9fd050a455d7fb794"],"type":"list","hash":"39fadae9f829adaeb52681a3ad931a14"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2597,L2598","required_engine_version":"13","name":"log_files","list":"log_files","items":["syslog","auth.log","secure","kern.log","cron","user.log","dpkg.log","last.log","yum.log","access_log","mysql.log","mysqld.log"],"tags":null,"enabled":"true","used_by":["macro:access_log_files:bba37fe39a9099e9fd050a455d7fb794","rule:Clear Log Activities:791121642c2a993b9c4b71e1dc53dcf4"],"type":"list","hash":"55714339632c0160f10b39434333e3f5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2600,L2601","required_engine_version":"13","name":"access_log_files","macro":"access_log_files","condition":"(fd.directory in (log_directories) or fd.filename in (log_files))","tags":null,"enabled":"true","dependencies":["list:log_directories:39fadae9f829adaeb52681a3ad931a14","list:log_files:55714339632c0160f10b39434333e3f5"],"used_by":["rule:Clear Log Activities:791121642c2a993b9c4b71e1dc53dcf4"],"type":"macro","hash":"bba37fe39a9099e9fd050a455d7fb794"},{"file_name":"falco_rules.yaml","comment":"# a placeholder for whitelist log files that could be cleared. Recommend the macro as (fd.name startswith \"/var/log/app1*\")","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2604,L2605","required_engine_version":"13","name":"allowed_clear_log_files","macro":"allowed_clear_log_files","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Clear Log Activities:791121642c2a993b9c4b71e1dc53dcf4"],"type":"macro","hash":"27cabc017fb347048c5906d368af02da"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2607,L2608","required_engine_version":"13","name":"trusted_logging_images","macro":"trusted_logging_images","condition":"(container.image.repository endswith \"splunk/fluentd-hec\" or container.image.repository endswith \"fluent/fluentd-kubernetes-daemonset\" or container.image.repository endswith \"openshift3/ose-logging-fluentd\" or container.image.repository endswith \"containernetworking/azure-npm\")","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"used_by":["rule:Clear Log Activities:791121642c2a993b9c4b71e1dc53dcf4"],"type":"macro","hash":"321c1a70d9796565640a81b9f3701e42"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2613,L2625","required_engine_version":"13","name":"Clear Log Activities","rule":"Clear Log Activities","condition":"open_write and access_log_files and evt.arg.flags contains \"O_TRUNC\" and not trusted_logging_images and not allowed_clear_log_files\n","desc":"Detect clearing of critical log files","output":"Log files were tampered (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name container_id=%container.id image=%container.image.repository)\n","priority":"WARNING","source":"syscalls","tags":["host","container","filesystem","mitre_defense_evasion","T1070"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:log_files:55714339632c0160f10b39434333e3f5","list:access_log_files:bba37fe39a9099e9fd050a455d7fb794","list:allowed_clear_log_files:27cabc017fb347048c5906d368af02da","list:trusted_logging_images:321c1a70d9796565640a81b9f3701e42"],"type":"rule","hash":"791121642c2a993b9c4b71e1dc53dcf4"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2627,L2628","required_engine_version":"13","name":"data_remove_commands","list":"data_remove_commands","items":["shred","mkfs","mke2fs"],"tags":null,"enabled":"true","used_by":["macro:clear_data_procs:d1a24b75738d164999774767fb52b175"],"type":"list","hash":"9919c21161d44c1840f522f7d9fbc5e4"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2630,L2631","required_engine_version":"13","name":"clear_data_procs","macro":"clear_data_procs","condition":"(proc.name in (data_remove_commands))","tags":null,"enabled":"true","dependencies":["macro:remove:0f6969d7052da9261e31ddb6e88c136e","list:data_remove_commands:9919c21161d44c1840f522f7d9fbc5e4"],"used_by":["rule:Remove Bulk Data from Disk:ee50daeb936f1d2a3ecf9211b963d206"],"type":"macro","hash":"d1a24b75738d164999774767fb52b175"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2633,L2634","required_engine_version":"13","name":"user_known_remove_data_activities","macro":"user_known_remove_data_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Remove Bulk Data from Disk:ee50daeb936f1d2a3ecf9211b963d206"],"type":"macro","hash":"82aeff15fb6a39dfd18eb8a0aa4490b2"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2636,L2643","required_engine_version":"13","name":"Remove Bulk Data from Disk","rule":"Remove Bulk Data from Disk","condition":"spawned_process and clear_data_procs and not user_known_remove_data_activities","desc":"Detect process running to clear bulk data from disk","output":"Bulk data has been removed from disk (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name container_id=%container.id image=%container.image.repository)\n","priority":"WARNING","source":"syscalls","tags":["host","container","process","filesystem","mitre_persistence","T1485"],"enabled":"true","dependencies":["list:remove:0f6969d7052da9261e31ddb6e88c136e","list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:clear_data_procs:d1a24b75738d164999774767fb52b175","list:user_known_remove_data_activities:82aeff15fb6a39dfd18eb8a0aa4490b2"],"type":"rule","hash":"ee50daeb936f1d2a3ecf9211b963d206"},{"file_name":"falco_rules.yaml","comment":"# here `ash_history` will match both `bash_history` and `ash_history`","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2646,L2647","required_engine_version":"13","name":"modify_shell_history","macro":"modify_shell_history","condition":"(modify and (\n  evt.arg.name endswith \"ash_history\" or\n  evt.arg.name endswith \"zsh_history\" or\n  evt.arg.name contains \"fish_read_history\" or\n  evt.arg.name endswith \"fish_history\" or\n  evt.arg.oldpath endswith \"ash_history\" or\n  evt.arg.oldpath endswith \"zsh_history\" or\n  evt.arg.oldpath contains \"fish_read_history\" or\n  evt.arg.oldpath endswith \"fish_history\" or\n  evt.arg.path endswith \"ash_history\" or\n  evt.arg.path endswith \"zsh_history\" or\n  evt.arg.path contains \"fish_read_history\" or\n  evt.arg.path endswith \"fish_history\"))\n","tags":null,"enabled":"true","dependencies":["macro:modify:8f45a2644508b5282f57fe129f62d19a"],"used_by":["rule:Delete or rename shell history:3fc83e2b9ee1f13d8fbba5e9ef385ffc"],"type":"macro","hash":"a4caae82528f2d3e827266ba74a3e115"},{"file_name":"falco_rules.yaml","comment":"# here `ash_history` will match both `bash_history` and `ash_history`","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2663,L2664","required_engine_version":"13","name":"truncate_shell_history","macro":"truncate_shell_history","condition":"(open_write and (\n  fd.name endswith \"ash_history\" or\n  fd.name endswith \"zsh_history\" or\n  fd.name contains \"fish_read_history\" or\n  fd.name endswith \"fish_history\") and evt.arg.flags contains \"O_TRUNC\")\n","tags":null,"enabled":"true","dependencies":["macro:open_write:43a1a1a71582531905f162ae8757ecda"],"used_by":["rule:Delete or rename shell history:3fc83e2b9ee1f13d8fbba5e9ef385ffc"],"type":"macro","hash":"ac78bdcd5d832a2f504b6e3ce03a6868"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2671,L2672","required_engine_version":"13","name":"var_lib_docker_filepath","macro":"var_lib_docker_filepath","condition":"(evt.arg.name startswith /var/lib/docker or fd.name startswith /var/lib/docker)","tags":null,"enabled":"true","used_by":["rule:Delete or rename shell history:3fc83e2b9ee1f13d8fbba5e9ef385ffc"],"type":"macro","hash":"2fd28acdc459f5aabd676b4cae7ae123"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2674,L2684","required_engine_version":"13","name":"Delete or rename shell history","rule":"Delete or rename shell history","condition":"(modify_shell_history or truncate_shell_history) and\n   not var_lib_docker_filepath and\n   not proc.name in (docker_binaries)\n","desc":"Detect shell history deletion","output":"Shell history had been deleted or renamed (user=%user.name user_loginuid=%user.loginuid type=%evt.type command=%proc.cmdline pid=%proc.pid fd.name=%fd.name name=%evt.arg.name path=%evt.arg.path oldpath=%evt.arg.oldpath %container.info)\n","priority":"WARNING","source":"syscalls","tags":["host","container","process","filesystem","mitre_defense_evasion","T1070"],"enabled":"true","dependencies":["list:modify:8f45a2644508b5282f57fe129f62d19a","list:docker_binaries:663cca84b425c42a03acc1f2ee04be85","list:modify_shell_history:a4caae82528f2d3e827266ba74a3e115","list:truncate_shell_history:ac78bdcd5d832a2f504b6e3ce03a6868","list:var_lib_docker_filepath:2fd28acdc459f5aabd676b4cae7ae123","list:docker_binaries:663cca84b425c42a03acc1f2ee04be85"],"type":"rule","hash":"3fc83e2b9ee1f13d8fbba5e9ef385ffc"},{"file_name":"falco_rules.yaml","comment":"# This rule is deprecated and will/should never be triggered. Keep it here for backport compatibility.\n# Rule Delete or rename shell history is the preferred rule to use now.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2688,L2697","required_engine_version":"13","name":"Delete Bash History","rule":"Delete Bash History","condition":"((spawned_process and proc.name in (shred, rm, mv) and proc.args contains \"bash_history\") or\n (open_write and fd.name contains \"bash_history\" and evt.arg.flags contains \"O_TRUNC\"))\n","desc":"Detect bash history deletion","output":"Shell history had been deleted or renamed (user=%user.name user_loginuid=%user.loginuid type=%evt.type command=%proc.cmdline pid=%proc.pid fd.name=%fd.name name=%evt.arg.name path=%evt.arg.path oldpath=%evt.arg.oldpath %container.info)\n","priority":"WARNING","source":"syscalls","tags":["host","container","process","filesystem","mitre_defense_evasion","T1070"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:spawned_process:b684ebf37c34399a595a3791398d95b2"],"type":"rule","hash":"61cb065cf149676f587b8a8205863cc9"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2699,L2700","required_engine_version":"13","name":"user_known_chmod_applications","list":"user_known_chmod_applications","items":["hyperkube","kubelet","k3s-agent"],"tags":null,"enabled":"true","used_by":["rule:Set Setuid or Setgid bit:8642f04ca66468a481a4ce95f4047433"],"type":"list","hash":"41281264935e7801c910c7c8f95f29a6"},{"file_name":"falco_rules.yaml","comment":"# This macro should be overridden in user rules as needed. This is useful if a given application\n# should not be ignored altogether with the user_known_chmod_applications list, but only in\n# specific conditions.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2705,L2706","required_engine_version":"13","name":"user_known_set_setuid_or_setgid_bit_conditions","macro":"user_known_set_setuid_or_setgid_bit_conditions","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Set Setuid or Setgid bit:8642f04ca66468a481a4ce95f4047433"],"type":"macro","hash":"8d6a4ea3d29f9754bb194645d6826e7e"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2708,L2724","required_engine_version":"13","name":"Set Setuid or Setgid bit","rule":"Set Setuid or Setgid bit","condition":"chmod and (evt.arg.mode contains \"S_ISUID\" or evt.arg.mode contains \"S_ISGID\") and not proc.name in (user_known_chmod_applications) and not exe_running_docker_save and not user_known_set_setuid_or_setgid_bit_conditions\n","desc":"When the setuid or setgid bits are set for an application, this means that the application will run with the privileges of the owning user or group respectively. Detect setuid or setgid bits set via chmod\n","output":"Setuid or setgid bit is set via chmod (fd=%evt.arg.fd filename=%evt.arg.filename mode=%evt.arg.mode user=%user.name user_loginuid=%user.loginuid process=%proc.name command=%proc.cmdline pid=%proc.pid container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","process","users","mitre_persistence","T1548.001"],"enabled":"false","dependencies":["list:chmod:417e248f80c35ca0d471575a5fb951f5","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:user_known_chmod_applications:41281264935e7801c910c7c8f95f29a6","list:user_known_set_setuid_or_setgid_bit_conditions:8d6a4ea3d29f9754bb194645d6826e7e"],"type":"rule","hash":"8642f04ca66468a481a4ce95f4047433"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2726,L2727","required_engine_version":"13","name":"exclude_hidden_directories","list":"exclude_hidden_directories","items":["/root/.cassandra"],"tags":null,"enabled":"true","used_by":["rule:Create Hidden Files or Directories:11d6e72bcaca173e61a9239889053a84"],"type":"list","hash":"c6d67f75dc2ff1e98b2d209476ce421b"},{"file_name":"falco_rules.yaml","comment":"# The rule is disabled by default.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2730,L2731","required_engine_version":"13","name":"user_known_create_hidden_file_activities","macro":"user_known_create_hidden_file_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Create Hidden Files or Directories:11d6e72bcaca173e61a9239889053a84"],"type":"macro","hash":"c604f50751c1133a076f8194b9f04921"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2733,L2747","required_engine_version":"13","name":"Create Hidden Files or Directories","rule":"Create Hidden Files or Directories","condition":"((modify and evt.arg.newpath contains \"/.\") or\n (mkdir and evt.arg.path contains \"/.\") or\n (open_write and evt.arg.flags contains \"O_CREAT\" and fd.name contains \"/.\" and not fd.name pmatch (exclude_hidden_directories))) and\nnot user_known_create_hidden_file_activities and not exe_running_docker_save\n","desc":"Detect hidden files or directories created","output":"Hidden file or directory created (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid file=%fd.name newpath=%evt.arg.newpath container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"NOTICE","source":"syscalls","tags":["host","container","filesystem","mitre_persistence","T1564.001"],"enabled":"false","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:mkdir:d1c89dbbd2e4ef759c37d3e0b94e7327","list:modify:8f45a2644508b5282f57fe129f62d19a","list:exe_running_docker_save:3870d01b317a519c449ba80c75fa2386","list:exclude_hidden_directories:c6d67f75dc2ff1e98b2d209476ce421b","list:user_known_create_hidden_file_activities:c604f50751c1133a076f8194b9f04921"],"type":"rule","hash":"11d6e72bcaca173e61a9239889053a84"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2749,L2750","required_engine_version":"13","name":"remote_file_copy_binaries","list":"remote_file_copy_binaries","items":["rsync","scp","sftp","dcp"],"tags":null,"enabled":"true","used_by":["macro:remote_file_copy_procs:189298174ea1bfe03807fc681aa456c1","macro:ingress_remote_file_copy_procs:0b484aafac3e4358917b2200ea0c3db6"],"type":"list","hash":"7b0c77be2327008ea0fc06339de55381"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2752,L2753","required_engine_version":"13","name":"remote_file_copy_procs","macro":"remote_file_copy_procs","condition":"(proc.name in (remote_file_copy_binaries))","tags":null,"enabled":"true","dependencies":["list:remote_file_copy_binaries:7b0c77be2327008ea0fc06339de55381"],"used_by":["rule:Launch Remote File Copy Tools in Container:a5e84b7971a3ef1f4e58af94ed66f4a1","rule:Launch Ingress Remote File Copy Tools in Container:bceeb580cbb40da58fb1e3045bea84a5"],"type":"macro","hash":"189298174ea1bfe03807fc681aa456c1"},{"file_name":"falco_rules.yaml","comment":"# Users should overwrite this macro to specify conditions under which a\n# Custom condition for use of remote file copy tool in container","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2757,L2758","required_engine_version":"13","name":"user_known_remote_file_copy_activities","macro":"user_known_remote_file_copy_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Launch Remote File Copy Tools in Container:a5e84b7971a3ef1f4e58af94ed66f4a1"],"type":"macro","hash":"5847045134b24363470fbdeb3e4ddbdf"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2760,L2771","required_engine_version":"13","name":"Launch Remote File Copy Tools in Container","rule":"Launch Remote File Copy Tools in Container","condition":"spawned_process and container and remote_file_copy_procs and not user_known_remote_file_copy_activities\n","desc":"Detect remote file copy tools launched in container","output":"Remote file copy tool launched in container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent_process=%proc.pname container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"NOTICE","source":"syscalls","tags":["container","network","process","mitre_lateral_movement","mitre_exfiltration","T1020","T1210"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:remote_file_copy_procs:189298174ea1bfe03807fc681aa456c1","list:user_known_remote_file_copy_activities:5847045134b24363470fbdeb3e4ddbdf"],"type":"rule","hash":"a5e84b7971a3ef1f4e58af94ed66f4a1"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2773,L2781","required_engine_version":"13","name":"Create Symlink Over Sensitive Files","rule":"Create Symlink Over Sensitive Files","condition":"create_symlink and (evt.arg.target in (sensitive_file_names) or evt.arg.target in (sensitive_directory_names))\n","desc":"Detect symlink created over sensitive files","output":"Symlinks created over sensitive files (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid target=%evt.arg.target linkpath=%evt.arg.linkpath parent_process=%proc.pname)\n","priority":"WARNING","source":"syscalls","tags":["host","container","filesystem","mitre_exfiltration","mitre_credential_access","T1020","T1083","T1212","T1552","T1555"],"enabled":"true","dependencies":["list:create_symlink:35e03553351704bb106cfe6792249297","list:sensitive_file_names:e54197be4a07891d91c98ea756ac113d","list:sensitive_directory_names:fa2eee2cc3ead2d99ca3d4789e90621c"],"type":"rule","hash":"2bcdd8e246ad13d6937576a2d5cbce01"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2783,L2791","required_engine_version":"13","name":"Create Hardlink Over Sensitive Files","rule":"Create Hardlink Over Sensitive Files","condition":"create_hardlink and (evt.arg.oldpath in (sensitive_file_names))\n","desc":"Detect hardlink created over sensitive files","output":"Hardlinks created over sensitive files (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid target=%evt.arg.oldpath linkpath=%evt.arg.newpath parent_process=%proc.pname)\n","priority":"WARNING","source":"syscalls","tags":["host","container","filesystem","mitre_exfiltration","mitre_credential_access","T1020","T1083","T1212","T1552","T1555"],"enabled":"true","dependencies":["list:create_hardlink:8793cb40375e36decc9d0527e9a044db","list:sensitive_file_names:e54197be4a07891d91c98ea756ac113d"],"type":"rule","hash":"44f504a9337c5c86699a0cb02a0a355d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2793,L2794","required_engine_version":"13","name":"miner_ports","list":"miner_ports","items":["25","3333","3334","3335","3336","3357","4444","5555","5556","5588","5730","6099","6666","7777","7778","8000","8001","8008","8080","8118","8333","8888","8899","9332","9999","14433","14444","45560","45700"],"tags":null,"enabled":"true","used_by":["macro:minerpool_other:5e85bae2ec959252aa6b103da561c541"],"type":"list","hash":"d21573a4543b4998520917d2a101a972"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2802,L2803","required_engine_version":"13","name":"miner_domains","list":"miner_domains","items":["asia1.ethpool.org","ca.minexmr.com","cn.stratum.slushpool.com","de.minexmr.com","eth-ar.dwarfpool.com","eth-asia.dwarfpool.com","eth-asia1.nanopool.org","eth-au.dwarfpool.com","eth-au1.nanopool.org","eth-br.dwarfpool.com","eth-cn.dwarfpool.com","eth-cn2.dwarfpool.com","eth-eu.dwarfpool.com","eth-eu1.nanopool.org","eth-eu2.nanopool.org","eth-hk.dwarfpool.com","eth-jp1.nanopool.org","eth-ru.dwarfpool.com","eth-ru2.dwarfpool.com","eth-sg.dwarfpool.com","eth-us-east1.nanopool.org","eth-us-west1.nanopool.org","eth-us.dwarfpool.com","eth-us2.dwarfpool.com","eu.stratum.slushpool.com","eu1.ethermine.org","eu1.ethpool.org","fr.minexmr.com","mine.moneropool.com","mine.xmrpool.net","pool.minexmr.com","pool.monero.hashvault.pro","pool.supportxmr.com","sg.minexmr.com","sg.stratum.slushpool.com","stratum-eth.antpool.com","stratum-ltc.antpool.com","stratum-zec.antpool.com","stratum.antpool.com","us-east.stratum.slushpool.com","us1.ethermine.org","us1.ethpool.org","us2.ethermine.org","us2.ethpool.org","xmr-asia1.nanopool.org","xmr-au1.nanopool.org","xmr-eu1.nanopool.org","xmr-eu2.nanopool.org","xmr-jp1.nanopool.org","xmr-us-east1.nanopool.org","xmr-us-west1.nanopool.org","xmr.crypto-pool.fr","xmr.pool.minergate.com","rx.unmineable.com","ss.antpool.com","dash.antpool.com","eth.antpool.com","zec.antpool.com","xmc.antpool.com","btm.antpool.com","stratum-dash.antpool.com","stratum-xmc.antpool.com","stratum-btm.antpool.com"],"tags":null,"enabled":"true","used_by":["macro:minerpool_https:1253ad0f8832f1c85817b74a4d1c9580","macro:minerpool_http:39bf1eb564009cb9f3609fcd658970d3","macro:minerpool_other:5e85bae2ec959252aa6b103da561c541"],"type":"list","hash":"3d20d68ce0e96c200f13742b71e3b044"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2838,L2839","required_engine_version":"13","name":"https_miner_domains","list":"https_miner_domains","items":["ca.minexmr.com","cn.stratum.slushpool.com","de.minexmr.com","fr.minexmr.com","mine.moneropool.com","mine.xmrpool.net","pool.minexmr.com","sg.minexmr.com","stratum-eth.antpool.com","stratum-ltc.antpool.com","stratum-zec.antpool.com","stratum.antpool.com","xmr.crypto-pool.fr","ss.antpool.com","stratum-dash.antpool.com","stratum-xmc.antpool.com","stratum-btm.antpool.com","btm.antpool.com"],"tags":null,"enabled":"true","used_by":["macro:minerpool_https:1253ad0f8832f1c85817b74a4d1c9580"],"type":"list","hash":"80f9c40341ea327996b3717486880494"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2860,L2861","required_engine_version":"13","name":"http_miner_domains","list":"http_miner_domains","items":["ca.minexmr.com","de.minexmr.com","fr.minexmr.com","mine.moneropool.com","mine.xmrpool.net","pool.minexmr.com","sg.minexmr.com","xmr.crypto-pool.fr"],"tags":null,"enabled":"true","used_by":["macro:minerpool_http:39bf1eb564009cb9f3609fcd658970d3"],"type":"list","hash":"ffd4d65b12a26b2a38fe9eab7c0edfe6"},{"file_name":"falco_rules.yaml","comment":"# Add rule based on crypto mining IOCs","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2873,L2874","required_engine_version":"13","name":"minerpool_https","macro":"minerpool_https","condition":"(fd.sport=\"443\" and fd.sip.name in (https_miner_domains))","tags":null,"enabled":"true","dependencies":["list:miner_domains:3d20d68ce0e96c200f13742b71e3b044","list:https_miner_domains:80f9c40341ea327996b3717486880494"],"used_by":["macro:net_miner_pool:b9fc9175ce3dc6b857d0b77567a05ccc"],"type":"macro","hash":"1253ad0f8832f1c85817b74a4d1c9580"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2876,L2877","required_engine_version":"13","name":"minerpool_http","macro":"minerpool_http","condition":"(fd.sport=\"80\" and fd.sip.name in (http_miner_domains))","tags":null,"enabled":"true","dependencies":["list:miner_domains:3d20d68ce0e96c200f13742b71e3b044","list:http_miner_domains:ffd4d65b12a26b2a38fe9eab7c0edfe6"],"used_by":["macro:net_miner_pool:b9fc9175ce3dc6b857d0b77567a05ccc"],"type":"macro","hash":"39bf1eb564009cb9f3609fcd658970d3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2879,L2880","required_engine_version":"13","name":"minerpool_other","macro":"minerpool_other","condition":"(fd.sport in (miner_ports) and fd.sip.name in (miner_domains))","tags":null,"enabled":"true","dependencies":["list:miner_ports:d21573a4543b4998520917d2a101a972","list:miner_domains:3d20d68ce0e96c200f13742b71e3b044"],"used_by":["macro:net_miner_pool:b9fc9175ce3dc6b857d0b77567a05ccc"],"type":"macro","hash":"5e85bae2ec959252aa6b103da561c541"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2882,L2883","required_engine_version":"13","name":"net_miner_pool","macro":"net_miner_pool","condition":"(evt.type in (sendto, sendmsg, connect) and evt.dir=\u003c and (fd.net != \"127.0.0.0/8\" and not fd.snet in (rfc_1918_addresses)) and ((minerpool_http) or (minerpool_https) or (minerpool_other)))","tags":null,"enabled":"true","dependencies":["list:rfc_1918_addresses:748492cefb06210e27885e76e1ab8f7a","macro:minerpool_https:1253ad0f8832f1c85817b74a4d1c9580","macro:minerpool_http:39bf1eb564009cb9f3609fcd658970d3","macro:minerpool_other:5e85bae2ec959252aa6b103da561c541"],"used_by":["rule:Detect outbound connections to common miner pool ports:3f01c102c6d26af968d5eb6b6777085d"],"type":"macro","hash":"b9fc9175ce3dc6b857d0b77567a05ccc"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2885,L2886","required_engine_version":"13","name":"trusted_images_query_miner_domain_dns","macro":"trusted_images_query_miner_domain_dns","condition":"(container.image.repository in (falco_containers))","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:falco_containers:88616fd0dac29b81cc6b368ce116b9f4"],"used_by":["rule:Detect outbound connections to common miner pool ports:3f01c102c6d26af968d5eb6b6777085d"],"type":"macro","hash":"09520dcb5b734826bb1a346b6e5d8be3"},{"file_name":"falco_rules.yaml","comment":"# The rule is disabled by default.\n# Note: falco will send DNS request to resolve miner pool domain which may trigger alerts in your environment.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2890,L2896","required_engine_version":"13","name":"Detect outbound connections to common miner pool ports","rule":"Detect outbound connections to common miner pool ports","condition":"net_miner_pool and not trusted_images_query_miner_domain_dns","desc":"Miners typically connect to miner pools on common ports.","output":"Outbound connection to IP/Port flagged by https://cryptoioc.ch (command=%proc.cmdline pid=%proc.pid port=%fd.rport ip=%fd.rip container=%container.info image=%container.image.repository)","priority":"CRITICAL","source":"syscalls","tags":["host","container","network","mitre_execution","T1496"],"enabled":"false","dependencies":["list:trusted_images:b8b0db0ef4ed293fcc7d4192f53599fa","list:net_miner_pool:b9fc9175ce3dc6b857d0b77567a05ccc","list:trusted_images_query_miner_domain_dns:09520dcb5b734826bb1a346b6e5d8be3"],"type":"rule","hash":"3f01c102c6d26af968d5eb6b6777085d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2898,L2903","required_engine_version":"13","name":"Detect crypto miners using the Stratum protocol","rule":"Detect crypto miners using the Stratum protocol","condition":"spawned_process and (proc.cmdline contains \"stratum+tcp\" or proc.cmdline contains \"stratum2+tcp\" or proc.cmdline contains \"stratum+ssl\" or proc.cmdline contains \"stratum2+ssl\")","desc":"Miners typically specify the mining pool to connect to with a URI that begins with 'stratum+tcp'","output":"Possible miner running (command=%proc.cmdline pid=%proc.pid container=%container.info image=%container.image.repository)","priority":"CRITICAL","source":"syscalls","tags":["host","container","process","mitre_execution","T1496"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2"],"type":"rule","hash":"b22719ac071b8de3c7e0ec92dcab21cb"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2905,L2906","required_engine_version":"13","name":"k8s_client_binaries","list":"k8s_client_binaries","items":["docker","kubectl","crictl"],"tags":null,"enabled":"true","used_by":["rule:The docker client is executed in a container:044858ea9498fb6c38e72ced0fcd53de"],"type":"list","hash":"4a93546ebd9ae6cb7a6bfee03e63792c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2908,L2909","required_engine_version":"13","name":"user_known_k8s_ns_kube_system_images","list":"user_known_k8s_ns_kube_system_images","items":["k8s.gcr.io/fluentd-gcp-scaler","k8s.gcr.io/node-problem-detector/node-problem-detector"],"tags":null,"enabled":"true","used_by":["macro:user_known_k8s_client_container:3fe640b1f7a9eea1ac982bd3f68f241b"],"type":"list","hash":"5a089872fa08e5f481daaff0331a9f68"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2914,L2915","required_engine_version":"13","name":"user_known_k8s_images","list":"user_known_k8s_images","items":["mcr.microsoft.com/aks/hcp/hcp-tunnel-front"],"tags":null,"enabled":"true","used_by":["macro:user_known_k8s_client_container:3fe640b1f7a9eea1ac982bd3f68f241b"],"type":"list","hash":"724cb45caceb7302d7d14c5dc5aafec4"},{"file_name":"falco_rules.yaml","comment":"# Whitelist for known docker client binaries run inside container\n# - k8s.gcr.io/fluentd-gcp-scaler in GCP/GKE","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2921,L2922","required_engine_version":"13","name":"user_known_k8s_client_container","macro":"user_known_k8s_client_container","condition":"(k8s.ns.name=\"kube-system\" and container.image.repository in (user_known_k8s_ns_kube_system_images)) or container.image.repository in (user_known_k8s_images)\n","tags":null,"enabled":"true","dependencies":["list:user_known_k8s_ns_kube_system_images:5a089872fa08e5f481daaff0331a9f68","list:user_known_k8s_images:724cb45caceb7302d7d14c5dc5aafec4"],"used_by":["macro:user_known_k8s_client_container_parens:2fdfd506ad251627b22d33c77dee9957","rule:The docker client is executed in a container:044858ea9498fb6c38e72ced0fcd53de"],"type":"macro","hash":"3fe640b1f7a9eea1ac982bd3f68f241b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2925,L2926","required_engine_version":"13","name":"user_known_k8s_client_container_parens","macro":"user_known_k8s_client_container_parens","condition":"(user_known_k8s_client_container)","tags":null,"enabled":"true","dependencies":["macro:container:5f0b6ebc4bea10285ba2b8a6ce78b863","macro:user_known_k8s_client_container:3fe640b1f7a9eea1ac982bd3f68f241b"],"used_by":["rule:The docker client is executed in a container:044858ea9498fb6c38e72ced0fcd53de"],"type":"macro","hash":"2fdfd506ad251627b22d33c77dee9957"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2928,L2933","required_engine_version":"13","name":"The docker client is executed in a container","rule":"The docker client is executed in a container","condition":"spawned_process and container and not user_known_k8s_client_container_parens and proc.name in (k8s_client_binaries)","desc":"Detect a k8s client tool executed inside a container","output":"Docker or kubernetes client executed in container (user=%user.name user_loginuid=%user.loginuid %container.info parent=%proc.pname cmdline=%proc.cmdline pid=%proc.pid image=%container.image.repository:%container.image.tag)","priority":"WARNING","source":"syscalls","tags":["container","mitre_execution","T1610"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:k8s_client_binaries:4a93546ebd9ae6cb7a6bfee03e63792c","list:user_known_k8s_client_container:3fe640b1f7a9eea1ac982bd3f68f241b","list:user_known_k8s_client_container_parens:2fdfd506ad251627b22d33c77dee9957"],"type":"rule","hash":"044858ea9498fb6c38e72ced0fcd53de"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2935,L2936","required_engine_version":"13","name":"user_known_packet_socket_binaries","list":"user_known_packet_socket_binaries","tags":null,"enabled":"true","used_by":["rule:Packet socket created in container:59e21c1607722fe0bee894eff26d9025"],"type":"list","hash":"423133c62533ff12397ea330a9f04cf7"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2938,L2943","required_engine_version":"13","name":"Packet socket created in container","rule":"Packet socket created in container","condition":"evt.type=socket and evt.arg[0]=AF_PACKET and container and not proc.name in (user_known_packet_socket_binaries)","desc":"Detect new packet socket at the device driver (OSI Layer 2) level in a container. Packet socket could be used for ARP Spoofing and privilege escalation(CVE-2020-14386) by attacker.","output":"Packet socket was created in a container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid socket_info=%evt.args container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)","priority":"NOTICE","source":"syscalls","tags":["container","network","mitre_discovery","T1046"],"enabled":"true","dependencies":["list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:user_known_packet_socket_binaries:423133c62533ff12397ea330a9f04cf7"],"type":"rule","hash":"59e21c1607722fe0bee894eff26d9025"},{"file_name":"falco_rules.yaml","comment":"# Namespaces where the rule is enforce","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2946,L2947","required_engine_version":"13","name":"namespace_scope_network_only_subnet","list":"namespace_scope_network_only_subnet","tags":null,"enabled":"true","used_by":["rule:Network Connection outside Local Subnet:206cb97c10e38d639e03767466f289e0"],"type":"list","hash":"caa9fe40880ea2c55dc4cc2e09c378e6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2949,L2950","required_engine_version":"13","name":"network_local_subnet","macro":"network_local_subnet","condition":"fd.rnet in (rfc_1918_addresses) or fd.ip = \"0.0.0.0\" or fd.net = \"127.0.0.0/8\"\n","tags":null,"enabled":"true","dependencies":["list:rfc_1918_addresses:748492cefb06210e27885e76e1ab8f7a"],"used_by":["rule:Network Connection outside Local Subnet:206cb97c10e38d639e03767466f289e0"],"type":"macro","hash":"7c4dcd18fe7bc3092fbc897963b579e1"},{"file_name":"falco_rules.yaml","comment":"# # The rule is disabled by default.\n# # How to test:\n# # Add 'default' to namespace_scope_network_only_subnet\n# # Run:\n# kubectl run --generator=run-pod/v1 -n default -i --tty busybox --image=busybox --rm -- wget google.com -O /var/google.html\n# # Check logs running\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2962,L2976","required_engine_version":"13","name":"Network Connection outside Local Subnet","rule":"Network Connection outside Local Subnet","condition":"inbound_outbound and container and not network_local_subnet and k8s.ns.name in (namespace_scope_network_only_subnet)\n","desc":"Detect traffic to image outside local subnet.","output":"Network connection outside local subnet (command=%proc.cmdline pid=%proc.pid connection=%fd.name user=%user.name user_loginuid=%user.loginuid container_id=%container.id\n image=%container.image.repository namespace=%k8s.ns.name\n fd.rip.name=%fd.rip.name fd.lip.name=%fd.lip.name fd.cip.name=%fd.cip.name fd.sip.name=%fd.sip.name)\n","priority":"WARNING","source":"syscalls","tags":["container","network","mitre_discovery","T1046"],"enabled":"false","dependencies":["list:namespace:89801e9e98979062e84647433a8ed3e9","list:inbound:a8e6fe5b9e68f30a146cefebaa7edcc3","list:outbound:b5229dfdd9136d1c772f9070f3095016","list:inbound_outbound:5b954dcc69c9cfaf014ba8fbebce7921","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:namespace_scope_network_only_subnet:caa9fe40880ea2c55dc4cc2e09c378e6","list:network_local_subnet:7c4dcd18fe7bc3092fbc897963b579e1"],"type":"rule","hash":"206cb97c10e38d639e03767466f289e0"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2978,L2979","required_engine_version":"13","name":"allowed_image","list":"allowed_image","tags":null,"enabled":"true","used_by":["rule:Outbound or Inbound Traffic not to Authorized Server Process and Port:157fc7053dfa89b079c6d322a0272978"],"type":"list","hash":"8b85d3e2aa3a000023f0b649faa9d3d1"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2981,L2982","required_engine_version":"13","name":"authorized_server_port","list":"authorized_server_port","tags":null,"enabled":"true","used_by":["rule:Outbound or Inbound Traffic not to Authorized Server Process and Port:157fc7053dfa89b079c6d322a0272978"],"type":"list","hash":"0a7388c8e325e4a5b4ebc9ced32b6d2f"},{"file_name":"falco_rules.yaml","comment":"# # How to test:\n# kubectl run --image=nginx nginx-app --port=80 --env=\"DOMAIN=cluster\"\n# kubectl expose deployment nginx-app --port=80 --name=nginx-http --type=LoadBalancer\n# # On minikube:\n# minikube service nginx-http\n# # On general K8s:\n# kubectl get services\n# kubectl cluster-info\n# # Visit the Nginx service and port, should not fire.\n# # Change rule to different port, then different process name, and test again that it fires.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L2995,L3009","required_engine_version":"13","name":"Outbound or Inbound Traffic not to Authorized Server Process and Port","rule":"Outbound or Inbound Traffic not to Authorized Server Process and Port","condition":"inbound_outbound and container and container.image.repository in (allowed_image) and not proc.name in (authorized_server_binary) and not fd.sport in (authorized_server_port)\n","desc":"Detect traffic that is not to authorized server process and port.","output":"Network connection outside authorized port and binary (command=%proc.cmdline pid=%proc.pid connection=%fd.name user=%user.name user_loginuid=%user.loginuid container_id=%container.id image=%container.image.repository)\n","priority":"WARNING","source":"syscalls","tags":["container","network","mitre_discovery","TA0011"],"enabled":"false","dependencies":["list:inbound:a8e6fe5b9e68f30a146cefebaa7edcc3","list:outbound:b5229dfdd9136d1c772f9070f3095016","list:inbound_outbound:5b954dcc69c9cfaf014ba8fbebce7921","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:allowed_image:8b85d3e2aa3a000023f0b649faa9d3d1","list:authorized_server_port:0a7388c8e325e4a5b4ebc9ced32b6d2f"],"type":"rule","hash":"157fc7053dfa89b079c6d322a0272978"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3011,L3012","required_engine_version":"13","name":"user_known_stand_streams_redirect_activities","macro":"user_known_stand_streams_redirect_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Redirect STDOUT/STDIN to Network Connection in Container:3448315ac2834f28f611653e79764663"],"type":"macro","hash":"c2f8c69b4ec7a2b55cd5ce0381586875"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3014,L3015","required_engine_version":"13","name":"dup","macro":"dup","condition":"evt.type in (dup, dup2, dup3)","tags":null,"enabled":"true","used_by":["macro:duply_writing_exclude_files:7e582f2eb2af9630a1c3cfd1c715fd18","macro:write_etc_common:43c4c0ef98f61b5250120719de06b726","rule:Redirect STDOUT/STDIN to Network Connection in Container:3448315ac2834f28f611653e79764663"],"type":"macro","hash":"0e9f1e8e40bb79e800b0cc9433830cf4"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3017,L3023","required_engine_version":"13","name":"Redirect STDOUT/STDIN to Network Connection in Container","rule":"Redirect STDOUT/STDIN to Network Connection in Container","condition":"dup and container and evt.rawres in (0, 1, 2) and fd.type in (\"ipv4\", \"ipv6\") and not user_known_stand_streams_redirect_activities","desc":"Detect redirecting stdout/stdin to network connection in container (potential reverse shell).","output":"Redirect stdout/stdin to network connection (user=%user.name user_loginuid=%user.loginuid %container.info process=%proc.name parent=%proc.pname cmdline=%proc.cmdline pid=%proc.pid terminal=%proc.tty container_id=%container.id image=%container.image.repository fd.name=%fd.name fd.num=%fd.num fd.type=%fd.type fd.sip=%fd.sip)\n","priority":"NOTICE","source":"syscalls","tags":["container","network","process","mitre_discovery","mitre_execution","T1059"],"enabled":"true","dependencies":["list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:user_known_stand_streams_redirect_activities:c2f8c69b4ec7a2b55cd5ce0381586875","list:dup:0e9f1e8e40bb79e800b0cc9433830cf4"],"type":"rule","hash":"3448315ac2834f28f611653e79764663"},{"file_name":"falco_rules.yaml","comment":"# The two Container Drift rules below will fire when a new executable is created in a container.\n# There are two ways to create executables - file is created with execution permissions or permissions change of existing file.\n# We will use a new filter, is_open_exec, to find all files creations with execution permission, and will trace all chmods in a container.\n# The use case we are targeting here is an attempt to execute code that was not shipped as part of a container (drift) -\n# an activity that might be malicious or non-compliant.\n# Two things to pay attention to:\n#   1) In most cases, 'docker cp' will not be identified, but the assumption is that if an attacker gained access to the container runtime daemon, they are already privileged\n#   2) Drift rules will be noisy in environments in which containers are built (e.g. docker build)\n# These two rules are not enabled by default.\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3035,L3036","required_engine_version":"13","name":"user_known_container_drift_activities","macro":"user_known_container_drift_activities","condition":"(always_true)","tags":null,"enabled":"true","dependencies":["macro:always_true:3810a10835140916e579520fac814823"],"used_by":["rule:Container Drift Detected (chmod):70996cf27c16da0916ae631a52ca0dd6","rule:Container Drift Detected (open+create):e32f7f179a97e8ff06bae061e2a07e22"],"type":"macro","hash":"46ac0d3ff6fcf7d1fec5e687faf159f5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3038,L3053","required_engine_version":"13","name":"Container Drift Detected (chmod)","rule":"Container Drift Detected (chmod)","condition":"chmod and container and not runc_writing_exec_fifo and not runc_writing_var_lib_docker and not user_known_container_drift_activities and evt.rawres\u003e=0 and ((evt.arg.mode contains \"S_IXUSR\") or (evt.arg.mode contains \"S_IXGRP\") or (evt.arg.mode contains \"S_IXOTH\"))\n","desc":"New executable created in a container due to chmod","output":"Drift detected (chmod), new executable created in a container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid filename=%evt.arg.filename name=%evt.arg.name mode=%evt.arg.mode event=%evt.type)","priority":"ERROR","source":"syscalls","tags":["container","process","filesystem","mitre_execution","T1059"],"enabled":"false","dependencies":["list:chmod:417e248f80c35ca0d471575a5fb951f5","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:runc_writing_exec_fifo:02aceef22907814c7c6d346464be2cf9","list:runc_writing_var_lib_docker:b777a4da7476b667e5c97c94dba354fe","list:user_known_container_drift_activities:46ac0d3ff6fcf7d1fec5e687faf159f5"],"type":"rule","hash":"70996cf27c16da0916ae631a52ca0dd6"},{"file_name":"falco_rules.yaml","comment":"# ****************************************************************************\n# * \"Container Drift Detected (open+create)\" requires FALCO_ENGINE_VERSION 6 *\n# ****************************************************************************","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3058,L3071","required_engine_version":"13","name":"Container Drift Detected (open+create)","rule":"Container Drift Detected (open+create)","condition":"evt.type in (open,openat,openat2,creat) and evt.is_open_exec=true and container and not runc_writing_exec_fifo and not runc_writing_var_lib_docker and not user_known_container_drift_activities and evt.rawres\u003e=0\n","desc":"New executable created in a container due to open+create","output":"Drift detected (open+create), new executable created in a container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid filename=%evt.arg.filename name=%evt.arg.name mode=%evt.arg.mode event=%evt.type)","priority":"ERROR","source":"syscalls","tags":["container","process","filesystem","mitre_execution","T1059"],"enabled":"false","dependencies":["list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:runc_writing_exec_fifo:02aceef22907814c7c6d346464be2cf9","list:runc_writing_var_lib_docker:b777a4da7476b667e5c97c94dba354fe","list:user_known_container_drift_activities:46ac0d3ff6fcf7d1fec5e687faf159f5"],"type":"rule","hash":"e32f7f179a97e8ff06bae061e2a07e22"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3073,L3074","required_engine_version":"13","name":"c2_server_ip_list","list":"c2_server_ip_list","tags":null,"enabled":"true","used_by":["rule:Outbound Connection to C2 Servers:0d2e8a0dd3369a030f7acfaab682ad92"],"type":"list","hash":"a0c2a57812583de4a9a541f2cb902106"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3076,L3077","required_engine_version":"13","name":"c2_server_fqdn_list","list":"c2_server_fqdn_list","tags":null,"enabled":"true","used_by":["rule:Outbound Connection to C2 Servers:0d2e8a0dd3369a030f7acfaab682ad92"],"type":"list","hash":"b0abc66dafd140968c748a3917668bc1"},{"file_name":"falco_rules.yaml","comment":"# For example, you can fetch a list of IP addresses and FQDN on this website:\n# https://feodotracker.abuse.ch/downloads/ipblocklist_recommended.json.\n# Use Falco HELM chart to update (append) the c2 server lists with your values.\n# See an example below.\n#\n#  ```yaml\n#  # values.yaml Falco HELM chart file\n#  [...]\n#  customRules:\n#    c2-servers-list.yaml: |-\n#      - list: c2_server_ip_list\n#        append: true\n#        items: \n#        - \"'51.178.161.32'\"\n#        - \"'46.101.90.205'\"\n#        \n#      - list: c2_server_fqdn_list\n#        append: true\n#        items: \n#        - \"srv-web.ffconsulting.com\"\n#        - \"57.ip-142-44-247.net\"\n#  ```\n","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3102,L3110","required_engine_version":"13","name":"Outbound Connection to C2 Servers","rule":"Outbound Connection to C2 Servers","condition":"outbound and  ((fd.sip in (c2_server_ip_list)) or\n (fd.sip.name in (c2_server_fqdn_list)))\n","desc":"Detect outbound connection to command \u0026 control servers thanks to a list of IP addresses \u0026 a list of FQDN.","output":"Outbound connection to C2 server (c2_domain=%fd.sip.name c2_addr=%fd.sip command=%proc.cmdline connection=%fd.name user=%user.name user_loginuid=%user.loginuid container_id=%container.id image=%container.image.repository)","priority":"WARNING","source":"syscalls","tags":["host","container","network","mitre_command_and_control","TA0011"],"enabled":"true","dependencies":["list:outbound:b5229dfdd9136d1c772f9070f3095016","list:c2_server_ip_list:a0c2a57812583de4a9a541f2cb902106","list:c2_server_fqdn_list:b0abc66dafd140968c748a3917668bc1"],"type":"rule","hash":"0d2e8a0dd3369a030f7acfaab682ad92"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3112,L3113","required_engine_version":"13","name":"white_listed_modules","list":"white_listed_modules","tags":null,"enabled":"true","used_by":["rule:Linux Kernel Module Injection Detected:41258ebe4f0565b8c3c1ddd96663c1a6"],"type":"list","hash":"76c137efecb82ec2acc59290695aec25"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3115,L3120","required_engine_version":"13","name":"Linux Kernel Module Injection Detected","rule":"Linux Kernel Module Injection Detected","condition":"spawned_process and container and proc.name=insmod and not proc.args in (white_listed_modules) and thread.cap_effective icontains sys_module","desc":"Detect kernel module was injected (from container).","output":"Linux Kernel Module injection using insmod detected (user=%user.name user_loginuid=%user.loginuid parent_process=%proc.pname module=%proc.args %container.info image=%container.image.repository:%container.image.tag)","priority":"WARNING","source":"syscalls","tags":["host","container","process","mitre_execution","mitre_persistence","TA0002"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:white_listed_modules:76c137efecb82ec2acc59290695aec25"],"type":"rule","hash":"41258ebe4f0565b8c3c1ddd96663c1a6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3122,L3123","required_engine_version":"13","name":"run_as_root_image_list","list":"run_as_root_image_list","tags":null,"enabled":"true","used_by":["macro:user_known_run_as_root_container:6d1e706fe4693f24e8d8cd3b48e0697c"],"type":"list","hash":"e052d3453c3eb42d5d11541c0a2f5599"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3125,L3126","required_engine_version":"13","name":"user_known_run_as_root_container","macro":"user_known_run_as_root_container","condition":"(container.image.repository in (run_as_root_image_list))","tags":null,"enabled":"true","dependencies":["list:run_as_root_image_list:e052d3453c3eb42d5d11541c0a2f5599"],"used_by":["rule:Container Run as Root User:353fe5313eb9fe14878f7eaae04550a3"],"type":"macro","hash":"6d1e706fe4693f24e8d8cd3b48e0697c"},{"file_name":"falco_rules.yaml","comment":"# The rule is disabled by default and should be enabled when non-root container policy has been applied.\n# Note the rule will not work as expected when usernamespace is applied, e.g. userns-remap is enabled.","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3130,L3136","required_engine_version":"13","name":"Container Run as Root User","rule":"Container Run as Root User","condition":"spawned_process and container and proc.vpid=1 and user.uid=0 and not user_known_run_as_root_container","desc":"Detected container running as root user","output":"Container launched with root user privilege (uid=%user.uid container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)","priority":"INFO","source":"syscalls","tags":["container","process","users","mitre_execution","T1610"],"enabled":"false","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:user_known_run_as_root_container:6d1e706fe4693f24e8d8cd3b48e0697c"],"type":"rule","hash":"353fe5313eb9fe14878f7eaae04550a3"},{"file_name":"falco_rules.yaml","comment":"# This rule helps detect CVE-2021-3156:\n# A privilege escalation to root through heap-based buffer overflow","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3140,L3145","required_engine_version":"13","name":"Sudo Potential Privilege Escalation","rule":"Sudo Potential Privilege Escalation","condition":"spawned_process and user.uid != 0 and (proc.name=sudoedit or proc.name = sudo) and (proc.args contains -s or proc.args contains -i or proc.args contains --login) and (proc.args contains \"\\ \" or proc.args endswith \\)","desc":"Privilege escalation vulnerability affecting sudo (\u003c= 1.9.5p2). Executing sudo using sudoedit -s or sudoedit -i command with command-line argument that ends with a single backslash character from an unprivileged user it's possible to elevate the user privileges to root.","output":"Detect Sudo Privilege Escalation Exploit (CVE-2021-3156) (user=%user.name parent=%proc.pname cmdline=%proc.cmdline pid=%proc.pid %container.info)","priority":"CRITICAL","source":"syscalls","tags":["host","container","filesystem","users","mitre_privilege_escalation","T1548.003"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2"],"type":"rule","hash":"f1e70442dbd3656e78ceb11d3863b239"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3147,L3155","required_engine_version":"13","name":"Debugfs Launched in Privileged Container","rule":"Debugfs Launched in Privileged Container","condition":"spawned_process and container and container.privileged=true and proc.name=debugfs\n","desc":"Detect file system debugger debugfs launched inside a privileged container which might lead to container escape.","output":"Debugfs launched started in a privileged container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid %container.info image=%container.image.repository:%container.image.tag)","priority":"WARNING","source":"syscalls","tags":["container","cis","process","mitre_execution","mitre_lateral_movement","T1611"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"type":"rule","hash":"6a074afb1d46b7c8e242bf8390fc101c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3157,L3158","required_engine_version":"13","name":"mount_info","macro":"mount_info","condition":"(proc.args=\"\" or proc.args intersects (\"-V\", \"-l\", \"-h\"))","tags":null,"enabled":"true","used_by":["rule:Mount Launched in Privileged Container:311052adcd61d744123971225f1ccd80"],"type":"macro","hash":"ae8d2ce0bfdaa318f094458d4b7a5afa"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3160,L3162","required_engine_version":"13","name":"known_gke_mount_in_privileged_containers","macro":"known_gke_mount_in_privileged_containers","condition":"(k8s.ns.name = kube-system and container.image.repository = gke.gcr.io/gcp-compute-persistent-disk-csi-driver)","tags":null,"enabled":"true","used_by":["rule:Mount Launched in Privileged Container:311052adcd61d744123971225f1ccd80"],"type":"macro","hash":"735bd25d70bf2ce7dd0aec581761b53f"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3165,L3166","required_engine_version":"13","name":"user_known_mount_in_privileged_containers","macro":"user_known_mount_in_privileged_containers","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Mount Launched in Privileged Container:311052adcd61d744123971225f1ccd80"],"type":"macro","hash":"aeaf73de6e782cca5767eccf444dfc86"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3168,L3179","required_engine_version":"13","name":"Mount Launched in Privileged Container","rule":"Mount Launched in Privileged Container","condition":"spawned_process and container and container.privileged=true and proc.name=mount and not mount_info and not known_gke_mount_in_privileged_containers and not user_known_mount_in_privileged_containers\n","desc":"Detect file system mount happened inside a privileged container which might lead to container escape.","output":"Mount was executed inside a privileged container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid %container.info image=%container.image.repository:%container.image.tag)","priority":"WARNING","source":"syscalls","tags":["container","cis","filesystem","mitre_lateral_movement","T1611"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:mount_info:ae8d2ce0bfdaa318f094458d4b7a5afa","list:known_gke_mount_in_privileged_containers:735bd25d70bf2ce7dd0aec581761b53f","list:user_known_mount_in_privileged_containers:aeaf73de6e782cca5767eccf444dfc86"],"type":"rule","hash":"311052adcd61d744123971225f1ccd80"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3181,L3182","required_engine_version":"13","name":"user_known_userfaultfd_processes","list":"user_known_userfaultfd_processes","tags":null,"enabled":"true","used_by":["rule:Unprivileged Delegation of Page Faults Handling to a Userspace Process:beb9e5195f907d71080bc9d9db607371"],"type":"list","hash":"c9561d224c2d208b6adc5403cb66fae1"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3184,L3193","required_engine_version":"13","name":"Unprivileged Delegation of Page Faults Handling to a Userspace Process","rule":"Unprivileged Delegation of Page Faults Handling to a Userspace Process","condition":"evt.type = userfaultfd and user.uid != 0 and (evt.rawres \u003e= 0 or evt.res != -1) and not proc.name in (user_known_userfaultfd_processes)\n","desc":"Detect a successful unprivileged userfaultfd syscall which might act as an attack primitive to exploit other bugs","output":"An userfaultfd syscall was successfully executed by an unprivileged user (user=%user.name user_loginuid=%user.loginuid process=%proc.name command=%proc.cmdline pid=%proc.pid %container.info image=%container.image.repository:%container.image.tag)","priority":"CRITICAL","source":"syscalls","tags":["host","container","process","mitre_defense_evasion","TA0005"],"enabled":"true","dependencies":["list:user_known_userfaultfd_processes:c9561d224c2d208b6adc5403cb66fae1"],"type":"rule","hash":"beb9e5195f907d71080bc9d9db607371"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3195,L3196","required_engine_version":"13","name":"ingress_remote_file_copy_binaries","list":"ingress_remote_file_copy_binaries","items":["wget"],"tags":null,"enabled":"true","used_by":["macro:ingress_remote_file_copy_procs:0b484aafac3e4358917b2200ea0c3db6"],"type":"list","hash":"415c16a087659f48853efe1ad5c981ff"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3198,L3199","required_engine_version":"13","name":"ingress_remote_file_copy_procs","macro":"ingress_remote_file_copy_procs","condition":"(proc.name in (ingress_remote_file_copy_binaries))","tags":null,"enabled":"true","dependencies":["macro:ingress:17f1d7a64442cda6863a4251c2eaf2ee","list:remote_file_copy_binaries:7b0c77be2327008ea0fc06339de55381","list:ingress_remote_file_copy_binaries:415c16a087659f48853efe1ad5c981ff"],"used_by":["rule:Launch Ingress Remote File Copy Tools in Container:bceeb580cbb40da58fb1e3045bea84a5"],"type":"macro","hash":"0b484aafac3e4358917b2200ea0c3db6"},{"file_name":"falco_rules.yaml","comment":"# Users should overwrite this macro to specify conditions under which a\n# Custom condition for use of ingress remote file copy tool in container","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3203,L3204","required_engine_version":"13","name":"user_known_ingress_remote_file_copy_activities","macro":"user_known_ingress_remote_file_copy_activities","condition":"(never_true)","tags":null,"enabled":"true","dependencies":["macro:never_true:7fdab030a488289fce9f593757b50ba3"],"used_by":["rule:Launch Ingress Remote File Copy Tools in Container:bceeb580cbb40da58fb1e3045bea84a5"],"type":"macro","hash":"4e472f54aebecefce22864525e76104b"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3206,L3207","required_engine_version":"13","name":"curl_download","macro":"curl_download","condition":"proc.name = curl and (proc.cmdline contains \" -o \" or proc.cmdline contains \" --output \" or proc.cmdline contains \" -O \" or proc.cmdline contains \" --remote-name \")","tags":null,"enabled":"true","used_by":["rule:Launch Ingress Remote File Copy Tools in Container:bceeb580cbb40da58fb1e3045bea84a5"],"type":"macro","hash":"5f76c74cf6027a96e668a2a6d2b29cc5"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3213,L3224","required_engine_version":"13","name":"Launch Ingress Remote File Copy Tools in Container","rule":"Launch Ingress Remote File Copy Tools in Container","condition":"spawned_process and container and (ingress_remote_file_copy_procs or curl_download) and not user_known_ingress_remote_file_copy_activities\n","desc":"Detect ingress remote file copy tools launched in container","output":"Ingress remote file copy tool launched in container (user=%user.name user_loginuid=%user.loginuid command=%proc.cmdline pid=%proc.pid parent_process=%proc.pname container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)\n","priority":"NOTICE","source":"syscalls","tags":["container","network","process","mitre_command_and_control","TA0011"],"enabled":"true","dependencies":["list:ingress:17f1d7a64442cda6863a4251c2eaf2ee","list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:remote_file_copy_procs:189298174ea1bfe03807fc681aa456c1","list:ingress_remote_file_copy_procs:0b484aafac3e4358917b2200ea0c3db6","list:user_known_ingress_remote_file_copy_activities:4e472f54aebecefce22864525e76104b","list:curl_download:5f76c74cf6027a96e668a2a6d2b29cc5"],"type":"rule","hash":"bceeb580cbb40da58fb1e3045bea84a5"},{"file_name":"falco_rules.yaml","comment":"# This rule helps detect CVE-2021-4034:\n# A privilege escalation to root through memory corruption","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3228,L3235","required_engine_version":"13","name":"Polkit Local Privilege Escalation Vulnerability (CVE-2021-4034)","rule":"Polkit Local Privilege Escalation Vulnerability (CVE-2021-4034)","condition":"spawned_process and user.uid != 0 and proc.name=pkexec and proc.args = ''","desc":"This rule detects an attempt to exploit a privilege escalation vulnerability in Polkit's pkexec. By running specially crafted code, a local user can leverage this flaw to gain root privileges on a compromised system","output":"Detect Polkit pkexec Local Privilege Escalation Exploit (CVE-2021-4034) (user=%user.loginname uid=%user.loginuid command=%proc.cmdline pid=%proc.pid args=%proc.args)","priority":"CRITICAL","source":"syscalls","tags":["host","container","process","users","mitre_privilege_escalation","TA0004"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2"],"type":"rule","hash":"5bc83b5d4fdd9b976dabc965dfe05fee"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3238,L3245","required_engine_version":"13","name":"Detect release_agent File Container Escapes","rule":"Detect release_agent File Container Escapes","condition":"open_write and container and fd.name endswith release_agent and (user.uid=0 or thread.cap_effective contains CAP_DAC_OVERRIDE) and thread.cap_effective contains CAP_SYS_ADMIN","desc":"This rule detect an attempt to exploit a container escape using release_agent file. By running a container with certains capabilities, a privileged user can modify release_agent file and escape from the container","output":"Detect an attempt to exploit a container escape using release_agent file (user=%user.name user_loginuid=%user.loginuid filename=%fd.name %container.info image=%container.image.repository:%container.image.tag cap_effective=%thread.cap_effective)","priority":"CRITICAL","source":"syscalls","tags":["container","process","mitre_privilege_escalation","mitre_lateral_movement","T1611"],"enabled":"true","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863"],"type":"rule","hash":"d55778da6b1e973e75c07a0379882547"},{"file_name":"falco_rules.yaml","comment":"# Rule for detecting potential Log4Shell (CVE-2021-44228) exploitation\n# Note: Not compatible with Java 17+, which uses read() syscalls","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3249,L3250","required_engine_version":"13","name":"java_network_read","macro":"java_network_read","condition":"(evt.type=recvfrom and fd.type in (ipv4, ipv6) and proc.name=java)","tags":null,"enabled":"true","used_by":["rule:Java Process Class File Download:3f245808a168ffcf6b0e2ae629ffbb80"],"type":"macro","hash":"4a7940303027c582a247119ec5bfd388"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3252,L3258","required_engine_version":"13","name":"Java Process Class File Download","rule":"Java Process Class File Download","condition":"java_network_read and evt.buffer bcontains cafebabe\n","desc":"Detected Java process downloading a class file which could indicate a successful exploit of the log4shell Log4j vulnerability (CVE-2021-44228)","output":"Java process class file download (user=%user.name user_loginname=%user.loginname user_loginuid=%user.loginuid event=%evt.type connection=%fd.name server_ip=%fd.sip server_port=%fd.sport proto=%fd.l4proto process=%proc.name command=%proc.cmdline pid=%proc.pid parent=%proc.pname buffer=%evt.buffer container_id=%container.id image=%container.image.repository)","priority":"CRITICAL","source":"syscalls","tags":["host","container","process","mitre_initial_access","T1190"],"enabled":"true","dependencies":["list:java_network_read:4a7940303027c582a247119ec5bfd388"],"type":"rule","hash":"3f245808a168ffcf6b0e2ae629ffbb80"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L184,L185","required_engine_version":"13","name":"docker_binaries","list":"docker_binaries","items":["dockerd","containerd-shim","runc:[1:CHILD]","pause"],"tags":null,"enabled":"true","used_by":["macro:server_procs:b0b2aee9b1b742b7be027fd5c2ac590e","rule:Change thread namespace:bf53659328792edf3dcb3d50994a2d61","rule:Non sudo setuid:7da3924afff60ec8eb7c45c5fd3fda63","rule:Delete or rename shell history:3fc83e2b9ee1f13d8fbba5e9ef385ffc","macro:docker_procs:26fc5da2b4808fa032d520b261d62d9d"],"type":"list","hash":"663cca84b425c42a03acc1f2ee04be85"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3263,L3264","required_engine_version":"13","name":"docker_procs","macro":"docker_procs","condition":"proc.name in (docker_binaries)","tags":null,"enabled":"true","dependencies":["list:docker_binaries:663cca84b425c42a03acc1f2ee04be85","list:docker_binaries:663cca84b425c42a03acc1f2ee04be85"],"used_by":["rule:Modify Container Entrypoint:ee4335b2203d324d5dec85969f5177c3"],"type":"macro","hash":"26fc5da2b4808fa032d520b261d62d9d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3266,L3274","required_engine_version":"13","name":"Modify Container Entrypoint","rule":"Modify Container Entrypoint","condition":"open_write and container and (fd.name=/proc/self/exe or fd.name startswith /proc/self/fd/) and not docker_procs and not proc.cmdline = \"runc:[1:CHILD] init\"\n","desc":"This rule detect an attempt to write on container entrypoint symlink (/proc/self/exe). Possible CVE-2019-5736 Container Breakout exploitation attempt.","output":"Detect Potential Container Breakout Exploit (CVE-2019-5736) (user=%user.name process=%proc.name file=%fd.name cmdline=%proc.cmdline pid=%proc.pid %container.info)\n","priority":"WARNING","source":"syscalls","tags":["container","filesystem","mitre_initial_access","T1611"],"enabled":"false","dependencies":["list:open_write:43a1a1a71582531905f162ae8757ecda","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:docker_procs:26fc5da2b4808fa032d520b261d62d9d"],"type":"rule","hash":"ee4335b2203d324d5dec85969f5177c3"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3276,L3277","required_engine_version":"13","name":"known_binaries_to_read_environment_variables_from_proc_files","list":"known_binaries_to_read_environment_variables_from_proc_files","items":["scsi_id","argoexec"],"tags":null,"enabled":"true","used_by":["rule:Read environment variable from /proc files:e91c2ad7d9bb08b8cbaae183f91bf00c"],"type":"list","hash":"fffe0ab983f5d2a7f632d9a08c532491"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3279,L3288","required_engine_version":"13","name":"Read environment variable from /proc files","rule":"Read environment variable from /proc files","condition":"open_read and container and (fd.name glob /proc/*/environ) and not proc.name in (known_binaries_to_read_environment_variables_from_proc_files)\n","desc":"An attempt to read process environment variables from /proc files","output":"Environment variables were retrieved from /proc files (user=%user.name user_loginuid=%user.loginuid program=%proc.name command=%proc.cmdline pid=%proc.pid file=%fd.name parent=%proc.pname gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] container_id=%container.id image=%container.image.repository)\n","priority":"WARNING","source":"syscalls","tags":["container","filesystem","process","mitre_credential_access","mitre_discovery","T1083"],"enabled":"true","dependencies":["list:open_read:fada70dac63821c34b095b962e02cb36","list:container:5f0b6ebc4bea10285ba2b8a6ce78b863","list:known_binaries_to_read_environment_variables_from_proc_files:fffe0ab983f5d2a7f632d9a08c532491"],"type":"rule","hash":"e91c2ad7d9bb08b8cbaae183f91bf00c"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3290,L3291","required_engine_version":"13","name":"known_ptrace_binaries","list":"known_ptrace_binaries","tags":null,"enabled":"true","used_by":["macro:known_ptrace_procs:413474c52ae5a2f9ab13410a94a7759a"],"type":"list","hash":"eb5e413691c24ce29dc359f53dc02199"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3293,L3294","required_engine_version":"13","name":"known_ptrace_procs","macro":"known_ptrace_procs","condition":"(proc.name in (known_ptrace_binaries))","tags":null,"enabled":"true","dependencies":["list:known_ptrace_binaries:eb5e413691c24ce29dc359f53dc02199"],"used_by":["rule:PTRACE attached to process:061f25635ba16ec4c05dec23396e4a6d"],"type":"macro","hash":"413474c52ae5a2f9ab13410a94a7759a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3296,L3301","required_engine_version":"13","name":"PTRACE attached to process","rule":"PTRACE attached to process","condition":"evt.type=ptrace and evt.dir=\u003e and evt.arg.request in (5, 6, 11, 20, 27) and proc_name_exists and not known_ptrace_procs","desc":"This rule detects an attempt to inject code into a process using PTRACE.","output":"Detected ptrace PTRACE_ATTACH attempt (proc.cmdline=%proc.cmdline container=%container.info evt.type=%evt.type evt.arg.request=%evt.arg.request proc.pid=%proc.pid proc.cwd=%proc.cwd proc.ppid=%proc.ppid proc.pcmdline=%proc.pcmdline proc.sid=%proc.sid proc.exepath=%proc.exepath user.uid=%user.uid user.loginuid=%user.loginuid user.loginname=%user.loginname user.name=%user.name group.gid=%group.gid group.name=%group.name container.id=%container.id container.name=%container.name image=%container.image.repository)","priority":"WARNING","source":"syscalls","tags":["host","container","process","mitre_execution","mitre_privilege_escalation","T1055.008"],"enabled":"true","dependencies":["list:proc_name_exists:453387eaa91c2ac2bd725502766ed7d3","list:known_ptrace_procs:413474c52ae5a2f9ab13410a94a7759a"],"type":"rule","hash":"061f25635ba16ec4c05dec23396e4a6d"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3303,L3304","required_engine_version":"13","name":"private_aws_credentials","macro":"private_aws_credentials","condition":"(proc.args icontains \"aws_access_key_id\" or proc.args icontains \"aws_secret_access_key\" or proc.args icontains \"aws_session_token\" or proc.args icontains \"accesskeyid\" or proc.args icontains \"secretaccesskey\")\n","tags":null,"enabled":"true","dependencies":["macro:secret:5ebe2294ecd0e0f08eab7690d2a6ee69"],"used_by":["rule:Find AWS Credentials:6f600d3da731ed8b36a42b3e6edc613a"],"type":"macro","hash":"9fcead5c6eef1bdbf3f1a4981a100df6"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3311,L3319","required_engine_version":"13","name":"Find AWS Credentials","rule":"Find AWS Credentials","condition":"spawned_process and ((grep_commands and private_aws_credentials) or (proc.name = \"find\" and proc.args endswith \".aws/credentials\"))\n","desc":"Find or grep AWS credentials","output":"Detected AWS credentials search activity (user.name=%user.name user.loginuid=%user.loginuid proc.cmdline=%proc.cmdline container.id=%container.id container_name=%container.name evt.type=%evt.type evt.res=%evt.res proc.pid=%proc.pid proc.cwd=%proc.cwd proc.ppid=%proc.ppid proc.pcmdline=%proc.pcmdline proc.sid=%proc.sid proc.exepath=%proc.exepath user.uid=%user.uid user.loginname=%user.loginname group.gid=%group.gid group.name=%group.name container.name=%container.name image=%container.image.repository:%container.image.tag)","priority":"WARNING","source":"syscalls","tags":["host","container","mitre_credential_access","process","aws","T1552"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:grep_commands:04176c101a26b7187926f0abb44c4ff6","list:private_aws_credentials:9fcead5c6eef1bdbf3f1a4981a100df6"],"type":"rule","hash":"6f600d3da731ed8b36a42b3e6edc613a"},{"file_name":"falco_rules.yaml","comment":"","permalink":"https://github.com/falcosecurity/rules/blob/main/rules/falco_rules.yaml#L3321,L3334","required_engine_version":"13","name":"Execution from /dev/shm","rule":"Execution from /dev/shm","condition":"spawned_process and  (proc.exe startswith \"/dev/shm/\" or  (proc.cwd startswith \"/dev/shm/\" and proc.exe startswith \"./\" ) or  (shell_procs and proc.args startswith \"-c /dev/shm\") or  (shell_procs and proc.args startswith \"-i /dev/shm\") or  (shell_procs and proc.args startswith \"/dev/shm\") or  (proc.cwd startswith \"/dev/shm/\" and proc.args startswith \"./\" )) and  not container.image.repository in (falco_privileged_images, trusted_images)\n","desc":"This rule detects file execution from the /dev/shm directory, a common tactic for threat actors to stash their readable+writable+(sometimes)executable files.","output":"File execution detected from /dev/shm (proc.cmdline=%proc.cmdline connection=%fd.name user.name=%user.name user.loginuid=%user.loginuid container.id=%container.id evt.type=%evt.type evt.res=%evt.res proc.pid=%proc.pid proc.cwd=%proc.cwd proc.ppid=%proc.ppid proc.pcmdline=%proc.pcmdline proc.sid=%proc.sid proc.exepath=%proc.exepath user.uid=%user.uid user.loginname=%user.loginname group.gid=%group.gid group.name=%group.name container.name=%container.name image=%container.image.repository)","priority":"WARNING","source":"syscalls","tags":["host","container","mitre_execution","mitre_defense_evasion","T1036.005","T1059.004"],"enabled":"true","dependencies":["list:spawned_process:b684ebf37c34399a595a3791398d95b2","list:shell_procs:8907863a6a74678a4246f35930a29fe1","list:trusted_images:b8b0db0ef4ed293fcc7d4192f53599fa","list:falco_privileged_images:fcbbd9234536bd53a20eb8d98e3fd443"],"type":"rule","hash":"d11fc15d58c80066743faeab957a1684"}]